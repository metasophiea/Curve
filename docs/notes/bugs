[2019-08-16:2] sink unit is somehow still connected to audio when cables are removed (at least, according to the levels)
    (possibly fixed in 2020-03-21? I've deleted the unit that showed this behaviour, but I believe that fixes made to the onremove code should cover this issue)
[2019-08-26:1] (?) connection nodes can work across panes (is it really an issue though?) 
[2019-09-26:2] sometimes the camera panning gets stuck on
[2019-10-06:1] sometimes the scene loader doesn't do anything
    it's caused by the browser not loading any file, and so the scene loader code is never being run
[2019-10-19:3] sometimes the alt key gets stuck on (you can recreate it by pressing the key then clicking a different window in the OS)
[2020-01-02:2] the audio file player can have its playback speed set to 0, or some very low value. The causes system slowdown when it's triggered alot in this state (not sure if this is all that solvable, unless we set some sort of minimum speed..which really depends on how maybe concurrent plays are requested)
[2020-01-27:1] regarding the selector buttons on Harbinger rhythm designer units; the lights are quite difficult to distinguish. Particularly the yellow ones
[2020-02-05:1] the active area of image-based dials, stretches beyond the circle to the entire square image of the handle. Same problem with round buttons, probably could be solved with covers, though also a new round image element.
[2020-03-01:1] sometimes the mouse pointer doesn't change back to normal after leaving the waveform workspace pin thing
[2020-10-16:1] looping paths just don't work

fixed:
    [XXXX-XX-XX:1] moving groups of units around, doesn't work how you think it should when one of them collides with something (sorta?)
        it wasn't working great for duplication. Edits have been made to control.grapple:alt / control.selection.duplicate / control.selection.paste to allow for a more natural duplication experience (log:2019-08-22)
    [2019-09-01:2] if a connection node's callback doesn't work when doing a manual connection; everything falls apart
        added try/catch code around all the callback callings
    [2019-09-17:1] launchpad doesn't need to be sending out so many off signals
        just changed how the changeToColumn function works, so that it only clears the signals that are changing, or are repeat 'on' signals. Also made similar changes to how the columns are lit/dimmed
    [2019-09-07:1] 8 track mixer panning is wrong
        I just had the math backwards
    [2019-08-16:1] control.scene.load(1) there should be some protection for bad URLs
        things seems fine...I must have fixed it at some point
    [2019-07-31:1] control.interaction.mouseGripPanningEnabled when disabled doesn't allow for "click anywhere else" unit deselection
        /main/4 - control/mouse.js:://panning moved "_canvas_.control.selection.deselectEverything();" to before the switch, so it always runs
    [2019-09-26:1] ending a note too quickly on the basicSynthesizer results in a snap sound
        it was something to do with overlapping gain adjustments
    [2019-08-25:1] synthesizer circuit: Regarding the wobble features, seems you can set them too high and collisions can occur
        changed library.audio.changeAudioParam's "cancelScheduledValues" call from
            if(cancelScheduledValues){ audioParam.cancelScheduledValues(context.currentTime); }
        to
            if(cancelScheduledValues){ audioParam.cancelScheduledValues(0); }
        which seems to have fixed whatever collisions were occurring
    [2019-10-19:2] you're supposed to use the alt key and click-n-drag to quickly copy things, but if you use the control key, a OS dropdown turns up and this causes the last mousemove code to become stuck on. Esc doesn't help
        seems that when it would occur, you could actually hit the Esc button and things would be fine. But if you clicked again (in a frustrated attempt to rid your mouse of this stuck unit) that would cause the 'mouseInteractionHandler' to activate again, which would in turn overwrite the original stored callbacks. Thus when you attempted to go back to the old ones, you'd actually just be setting things to the way they already were, and the original 'core' callbacks would be long gone.
        It's fixed now, as I've created a new area to store the 'core' callbacks, and 'mouseInteractionHandler' doesn't do any writing of callbacks to be replaced anymore. Thus Esc works fine and clicking in frustration also fixes everything
    [2019-10-19:1] attempting to connect two audio nodes of similar type causes the cable to disappear
        expanded the connection node logic a little to be aware of node direction
    [2019-08-03:1] buttons atop buttons don't hover right, nor click right
        fixed in new version
    [2019-09-01:1] snapping and unit collision don't play well together
        seem to play nicer in new version
    [2019-12-28:1] created units that have intervals, don't have those intervals deleted when the unit is; so, that processing work is still being done. The units just need to use the ondelete callback more
        added in some oncreate/ondelete callbacks to clear the intervals of both parts and units when they are deleted (log:2019-12-30)
    [2020-01-02:1] placing the ruler up to the left seems to reduce its clickable area
        there was an issue with how group bounding boxes were being calculated in the engine (log:2020-01-02)
    [2020-01-02:3] i's are missing their dots now?
        misuse of detectIntersect.polyOnPoly (log:2020-01-02)
    [2020-01-03:1] core's image element seems to be requesting image data it had in the past again from the server.. there should be some system to store the last N image data files, and/or a central repository of them
        (log:2020-01-06) modifications made to core-engine's image element to stop this
    [2020-01-06:1] parts hidden behind the main grapple element in a unit are still accessible (at least, the connection nodes are)
        the image isn't the main grapple. The space is the main grapple, and that's always placed as the furthest back element in the unit's group. Thus this isn't a bug at all, just me not understanding how things work around here. I'll find another way around this issue
    [2020-01-05:1] there's a lot of re-requesting audio files that were already loaded. Modifications should be made to the library layer to stop this (probably adding an override "force reload" argument too)
        (log:2020-01-07) added a caching system to the audio file loader (only for URL loaded files) which stores previously loaded audio files
    [2020-02-22:1] something is up with the synthesizer, when you play notes rapidly or when you adjust the release
        (log:2020-01-22) the synthesizer circuit just wasn't doing its job right
    [XXXX-XX-XX:2] sometimes, connections can be made to nothing. Like there are invisible units
        (log:2020-03-21) turns out, the connection nodes of units were not being removed correctly
    [2020-10-04:1] something is up with webGl on windows, that isn't present on mac or linux..I think only with clipping
        (log:2020-09-30) it was to do with GUI scaling, where the user has theirs set to something that isn't 100%. I had assumed that the devicePixelRatio value would only ever be 1 or 2, but it can actually be any number. Tested on windows