!function(){const __canvasPrefix="interface",__canvasElements=document.getElementsByTagName("canvas");for(let __canvasElements_count=0;__canvasElements_count<__canvasElements.length;__canvasElements_count++)if(__canvasElements[__canvasElements_count].hasAttribute(__canvasPrefix)){const _canvas_=__canvasElements[__canvasElements_count];_canvas_.layers=new function(){const e=[];function t(t){for(let n=0;n<e.length;n++)if(e[n].name==t)return n;return-1}this.getVersionInformation=function(){return Object.keys(e).map(t=>({name:e[t].name,data:e[t].versionInformation}))},this.registerLayer=function(n,o){-1==t(n)?(e.push({name:n,isLoaded:!1,versionInformation:o.versionInformation,functionList:[]}),this.onLayerRegistered&&this.onLayerRegistered(n,e)):console.error("_canvas_.layers.registerLayer("+n+","+o+") : duplicate layer name detected ")},this.onLayerRegistered=function(e,t){},this.declareLayerAsLoaded=function(n){let o=t(n);-1!=o?(e[o].isLoaded=!0,this.onLayerLoad&&this.onLayerLoad(n,e),e[o].functionList.forEach(e=>{e()})):console.error("_canvas_.layers.declareLayerAsLoaded("+n+") : unknown layer name ")},this.onLayerLoad=function(e,t){},this.registerFunctionForLayer=function(n,o){let r=t(n);-1!=r?e[r].functionList.push(o):console.error("_canvas_.layers.registerFunctionForLayer("+n+") : unknown layer name ")}},_canvas_.library=new function(){this.versionInformation={tick:0,lastDateModified:{y:2022,m:6,d:10}};const e=this,t={prefix:"library",active:{math:!1,structure:!1,audio:!1,font:!1,misc:!1},log:{math:function(){t.active.math&&console.log(t.prefix+".math"+arguments[0],...new Array(...arguments).slice(1))},structure:function(){t.active.structure&&console.log(t.prefix+".structure"+arguments[0],...new Array(...arguments).slice(1))},audio:function(){t.active.audio&&console.log(t.prefix+".audio"+arguments[0],...new Array(...arguments).slice(1))},font:function(){t.active.font&&console.log(t.prefix+".font"+arguments[0],...new Array(...arguments).slice(1))},misc:function(){t.active.misc&&console.log(t.prefix+".misc"+arguments[0],...new Array(...arguments).slice(1))}},countActive:!1,countMemory:{},count:function(e){t.countActive&&(e in t.countMemory?t.countMemory[e]++:t.countMemory[e]=1)},countResults:function(){return countMemory}};this.math=new function(){this.averageArray=function(e){let t=e[0];for(let n=1;n<e.length;n++)t+=e[n];return t/e.length},this.averagePoint=function(e){const t=e.reduce((e,t)=>({x:e.x+t.x,y:e.y+t.y}));return{x:t.x/e.length,y:t.y/e.length}},this.boundingBoxFromPoints=function(e){if(0==e.length)return{topLeft:{x:0,y:0},bottomRight:{x:0,y:0}};if(1==e.length)return{topLeft:{x:e[0].x,y:e[0].y},bottomRight:{x:e[0].x,y:e[0].y}};if(2==e.length)return e[0].x<e[1].x?e[0].y<e[1].y?{topLeft:{x:e[0].x,y:e[0].y},bottomRight:{x:e[1].x,y:e[1].y}}:{topLeft:{x:e[0].x,y:e[1].y},bottomRight:{x:e[1].x,y:e[0].y}}:e[0].y<e[1].y?{topLeft:{x:e[1].x,y:e[0].y},bottomRight:{x:e[0].x,y:e[1].y}}:{topLeft:{x:e[1].x,y:e[1].y},bottomRight:{x:e[0].x,y:e[0].y}};let t=e[0].x,n=e[0].x,o=e[0].y,r=e[0].y;for(let a=1;a<e.length;a++)e[a].x<t?t=e[a].x:e[a].x>n&&(n=e[a].x),e[a].y<o?o=e[a].y:e[a].y>r&&(r=e[a].y);return{topLeft:{x:t,y:o},bottomRight:{x:n,y:r}}},this.cartesianAngleAdjust=function(e,t,n){return 0==n?{x:e,y:t}:{x:e*Math.cos(n)-t*Math.sin(n),y:t*Math.cos(n)+e*Math.sin(n)}},this.convertColour=new function(){this.obj2rgba=function(e){return"rgba("+255*e.r+","+255*e.g+","+255*e.b+","+e.a+")"},this.rgba2obj=function(e){return(e=e.split(","))[0]=e[0].replace("rgba(",""),e[3]=e[3].replace(")",""),{r:(e=e.map((function(e){return parseFloat(e)})))[0]/255,g:e[1]/255,b:e[2]/255,a:e[3]}}},this.curveGenerator=new function(){this.linear=function(e=2,t=0,n=1){e=Math.abs(e)-1;const o=[0];for(let t=1;t<e;t++)o.push(t/e);o.push(1);const r=n-t;for(let e=0;e<o.length;e++)o[e]=o[e]*r+t;return o},this.sin=function(e=2,t=0,n=1){e=Math.abs(e)-1;let o=[0];for(let t=1;t<e;t++)o.push(Math.sin(Math.PI/2*(t/e)));o.push(1);const r=n-t;for(let e=0;e<o.length;e++)o[e]=o[e]*r+t;return o},this.cos=function(e=2,t=0,n=1){e=Math.abs(e)-1;let o=[0];for(let t=1;t<e;t++)o.push(1-Math.cos(Math.PI/2*(t/e)));o.push(1);const r=n-t;for(let e=0;e<o.length;e++)o[e]=o[e]*r+t;return o},this.s=function(t=2,n=0,o=1,r=8){0==r&&(r=1e-6);let a=[];for(let e=0;e<t;e++)a.push(1/(1+Math.exp(-r*(e/t-.5))));const i=e.math.normalizeStretchArray(a),s=o-n;for(let e=0;e<i.length;e++)i[e]=i[e]*s+n;return i},this.sigmoid=function(e=2,t=0,n=1,o=.5){o<0&&(o=0),o>1&&(o=1),e--;let r=[];for(let t=0;t<=e;t++){const n=t/e;r.push(.5+(2*n-1)/(1-o+o*Math.abs(2*n-1))/2)}const a=n-t;for(let e=0;e<r.length;e++)r[e]=r[e]*a+t;return r},this.halfSigmoid_up=function(t=2,n=0,o=1,r=.5){r<0&&(r=0),r>1&&(r=1);let a=[];t--;for(let i=0;i<=t;i++){const s=i/t;a.push(e.math.curvePoint.halfSigmoid_up(s,n,o,r))}return a},this.halfSigmoid_down=function(t=2,n=0,o=1,r=.5){r<0&&(r=0),r>1&&(r=1);let a=[];t--;for(let i=0;i<=t;i++){const s=i/t;a.push(e.math.curvePoint.halfSigmoid_down(s,n,o,r))}return a},this.exponential=function(t=2,n=0,o=1,r=2){t-=1;let a=[];for(let e=0;e<=t;e++)a.push((Math.exp(r*(e/t))-1)/(Math.E-1));a=e.math.normalizeStretchArray(a);const i=o-n;for(let e=0;e<a.length;e++)a[e]=a[e]*i+n;return a}},this.curvePoint=new function(){this.linear=function(e=.5,t=0,n=1){return e*(n-t)+t},this.sin=function(e=.5,t=0,n=1){return Math.sin(Math.PI/2*e)*(n-t)+t},this.cos=function(e=.5,t=0,n=1){return(1-Math.cos(Math.PI/2*e))*(n-t)+t},this.s=function(t=.5,n=0,o=1,r=8){return e.math.normalizeStretchArray([1/(1+Math.exp(-.5*-r)),1/(1+Math.exp(-r*(t-.5))),1/(1+Math.exp(.5*-r))])[1]*(o-n)+n},this.sigmoid=function(e=.5,t=0,n=1,o=.5){return(.5+(2*e-1)/(1-o+o*Math.abs(2*e-1))/2)*(n-t)+t},this.halfSigmoid_up=function(e=.5,t=0,n=1,o=.5){return e/(1-o+o*Math.abs(e))*(n-t)+t},this.halfSigmoid_down=function(t=.5,n=0,o=1,r=.5){return e.math.curvePoint.halfSigmoid_up(1-t,o,n,r)},this.exponential=function(t=.5,n=0,o=1,r=2){return e.math.normalizeStretchArray([(Math.exp(0*r)-1)/(Math.E-1),(Math.exp(r*t)-1)/(Math.E-1),(Math.exp(1*r)-1)/(Math.E-1)])[1]*(o-n)+n}},this.getAngleOfTwoPoints=function(e,t){if(e.x==t.x&&e.y==t.y)return 0;const n=t.x-e.x,o=t.y-e.y;let r=Math.atan(o/n);return n<0?r=Math.PI+r:o<0&&(r=2*Math.PI+r),r},this.getIndexOfSequence=function(e,t){function n(e,t){const n=Object.keys(e);if(0==n.length)return e==t;for(let o=0;o<n.length;o++){if(!t.hasOwnProperty(n[o]))return!1;if(e[n[o]]!=t[n[o]])return!1}return!0}if(0==e.length||0==t.length)return;let o=0;for(o=0;o<e.length-t.length+1;o++)if(n(e[o],t[0])){let r=!0;for(let a=1;a<t.length;a++)if(!n(e[o+a],t[a])){r=!1;break}if(r)return o}},this.largestValueFound=function(e){if(0!=e.length)return e.reduce((function(e,t){return Math.abs(e)>Math.abs(t)?e:t}))},this.normalizeStretchArray=function(e){const t=e.reduce((function(e,t,n,o){return t>o[e]?n:e}),0),n=Math.abs(e[t]);if(0==(e=e.map(e=>e/n))[0]&&1==e[e.length-1])return e;const o=0!=e[0]?e[0]:e[e.length-1];return e=e.map(e=>(e-o)/(1-o))},this.relativeDistance=function(e,t,n,o,r=!1){const a=(o-t)/(n-t);if(!r){if(a>1)return e;if(a<0)return 0}return a*e},this.seconds2time=function(e){const t={h:0,m:0,s:0,ms:0,"µs":0,ns:0,ps:0,fs:0};return t.h=Math.floor(e/3600),(e-=3600*t.h)<=0?t:(t.m=Math.floor(e/60),(e-=60*t.m)<=0?t:(t.s=Math.floor(e),(e-=t.s)<=0?t:(t.ms=Math.floor(1e3*e),(e=1e3*e-t.ms)<=0?t:(t.µs=Math.floor(1e3*e),(e=1e3*e-t.µs)<=0?t:(t.ns=Math.floor(1e3*e),(e=1e3*e-t.ns)<=0?t:(t.ps=Math.floor(1e3*e),(e=1e3*e-t.ps)<=0?t:(t.fs=1e3*e,t)))))))},this.distanceBetweenTwoPoints=function(e,t){return Math.hypot(t.x-e.x,t.y-e.y)},this.cartesian2polar=function(e,t){const n=Math.pow(Math.pow(e,2)+Math.pow(t,2),.5);let o=0;return o=0===e?0===t?0:t>0?.5*Math.PI:1.5*Math.PI:0===t?e>=0?0:Math.PI:e>=0?Math.atan(t/e):Math.atan(t/e)+Math.PI,{dis:n,ang:o}},this.polar2cartesian=function(e,t){return{x:t*Math.cos(e),y:t*Math.sin(e)}},this.blendColours=function(e,t,n){return{r:(1-n)*e.r+n*t.r,g:(1-n)*e.g+n*t.g,b:(1-n)*e.b+n*t.b,a:(1-n)*e.a+n*t.a}},this.multiBlendColours=function(t,n){if(0==n)return t[0];if(1==n)return t[t.length-1];const o=n*(t.length-1);return e.math.blendColours(t[~~o],t[1+~~o],o%1)},this.polygonToSubTriangles=function(e,t="XYArray"){if("flatArray"==t){const t=[];for(let n=0;n<e.length;n+=2)t.push({x:e[n+0],y:e[n+1]});e=[t]}const o=e.reverse().map(e=>e.length);return o.forEach((e,t)=>{t>0&&(o[t]=e+o[t-1])}),o.pop(),n.earcut(e.flat().map(e=>[e.x,e.y]).flat(),o)},this.unionPolygons=function(e,t){return n.PolyBool.union({regions:e.map(e=>e.map(e=>[e.x,e.y]))},{regions:t.map(e=>e.map(e=>[e.x,e.y]))}).regions.map(e=>e.map(e=>({x:e[0],y:e[1]})))},this.detectIntersect=new function(){this.boundingBoxes=function(e,t){return e.bottomRight.y>=t.topLeft.y&&e.bottomRight.x>=t.topLeft.x&&e.topLeft.y<=t.bottomRight.y&&e.topLeft.x<=t.bottomRight.x},this.pointWithinBoundingBox=function(e,t){return!(e.x<t.topLeft.x||e.y<t.topLeft.y||e.x>t.bottomRight.x||e.y>t.bottomRight.y)},this.pointOnLine=function(e,t){return!(e.x<t[0].x&&e.x<t[1].x||e.y<t[0].y&&e.y<t[1].y||e.x>t[0].x&&e.x>t[1].x||e.y>t[0].y&&e.y>t[1].y)&&(e.x==t[0].x&&e.y==t[0].y||(e.x==t[1].x&&e.y==t[1].y||(t[0].x==t[1].x&&e.x==t[0].x?t[0].y>e.y&&e.y>t[1].y||t[1].y>e.y&&e.y>t[0].y:t[0].y==t[1].y&&e.y==t[0].y?t[0].x>e.x&&e.x>t[1].x||t[1].x>e.x&&e.x>t[0].x:(t[1].y-t[0].y)/(t[1].x-t[0].x)*(e.x-t[0].x)+t[0].y-e.y==0)))},this.pointWithinPoly=function(t,n){if(null==n.boundingBox&&(n.boundingBox=e.math.boundingBoxFromPoints(n.points)),!e.math.detectIntersect.boundingBoxes(e.math.boundingBoxFromPoints([t]),n.boundingBox))return"outside";for(let e=0;e<n.points.length;e++)if(t.x==n.points[e].x&&t.y==n.points[e].y)return"onPoint";function o(e,t,n,o){if(e.points[n].y!=t.y&&e.points[o].y!=t.y)return!0;if(e.points[n].y==t.y){const t=n+1>=e.points.length?0:n+1,o=n-1<=0?e.points.length-1:n-1;if(!(e.points[o].y<=e.points[n].y&&e.points[t].y<=e.points[n].y||e.points[o].y>=e.points[n].y&&e.points[t].y>=e.points[n].y))return!0}return!1}let r=!1;for(let e=0,a=n.points.length-1;e<n.points.length;a=e++)if(n.points[a].y>=t.y&&n.points[e].y<=t.y||n.points[e].y>=t.y&&n.points[a].y<=t.y)if(n.points[e].x<t.x&&n.points[a].x<t.x)n.points[e].y!=n.points[a].y&&o(n,t,e,a)&&(r=!r);else{if(n.points[e].x>t.x&&n.points[a].x>t.x)continue;{let i;if(n.points[a].y>n.points[e].y&&n.points[a].x>n.points[e].x?i=(t.x-n.points[e].x)/(n.points[a].x-n.points[e].x)-(t.y-n.points[e].y)/(n.points[a].y-n.points[e].y)+1:n.points[a].y<=n.points[e].y&&n.points[a].x<=n.points[e].x?i=(t.x-n.points[a].x)/(n.points[e].x-n.points[a].x)-(t.y-n.points[a].y)/(n.points[e].y-n.points[a].y)+1:n.points[a].y>n.points[e].y&&n.points[a].x<n.points[e].x?i=(t.x-n.points[a].x)/(n.points[e].x-n.points[a].x)+(t.y-n.points[e].y)/(n.points[a].y-n.points[e].y):n.points[a].y<=n.points[e].y&&n.points[a].x>=n.points[e].x&&(i=(t.x-n.points[e].x)/(n.points[a].x-n.points[e].x)+(t.y-n.points[a].y)/(n.points[e].y-n.points[a].y)),1==i||isNaN(i))return"onEdge";i>1&&o(n,t,e,a)&&(r=!r)}}return r?"inside":"outside"},this.lineOnLine=function(t,n){if(!e.math.detectIntersect.boundingBoxes(e.math.boundingBoxFromPoints(t),e.math.boundingBoxFromPoints(n)))return{x:void 0,y:void 0,intersect:!1,contact:!1};if(t[0].x==n[0].x&&t[0].y==n[0].y&&t[1].x==n[1].x&&t[1].y==n[1].y||t[0].x==n[1].x&&t[0].y==n[1].y&&t[1].x==n[0].x&&t[1].y==n[0].y)return{x:void 0,y:void 0,intersect:!1,contact:!0};if(t[0].x==n[0].x&&t[0].y==n[0].y||t[0].x==n[1].x&&t[0].y==n[1].y)return{x:t[0].x,y:t[0].y,intersect:!1,contact:!0};if(t[1].x==n[0].x&&t[1].y==n[0].y||t[1].x==n[1].x&&t[1].y==n[1].y)return{x:t[1].x,y:t[1].y,intersect:!1,contact:!0};const o=(n[1].y-n[0].y)*(t[1].x-t[0].x)-(n[1].x-n[0].x)*(t[1].y-t[0].y);if(0==o){const o={x1:void 0,y1:void 0,x2:void 0,y2:void 0,intersect:!1,contact:!0};if(e.math.detectIntersect.pointOnLine(t[0],n)&&(o.x1=t[0].x,o.y1=t[0].y),e.math.detectIntersect.pointOnLine(t[1],n)){if(null!=o.x1)return o.x2=t[1].x,o.y2=t[1].y,o;o.x1=t[1].x,o.y1=t[1].y}if(e.math.detectIntersect.pointOnLine(n[0],t)){if(null!=o.x1)return o.x2=n[0].x,o.y2=n[0].y,o;o.x1=n[0].x,o.y1=n[0].y}if(e.math.detectIntersect.pointOnLine(n[1],t)){if(null!=o.x1)return o.x2=n[1].x,o.y2=n[1].y,o;o.x1=n[1].x,o.y1=n[1].y}return o}if(e.math.detectIntersect.pointOnLine(t[0],n))return{x:t[0].x,y:t[0].y,intersect:!1,contact:!0};if(e.math.detectIntersect.pointOnLine(t[1],n))return{x:t[1].x,y:t[1].y,intersect:!1,contact:!0};if(e.math.detectIntersect.pointOnLine(n[0],t))return{x:n[0].x,y:n[0].y,intersect:!1,contact:!0};if(e.math.detectIntersect.pointOnLine(n[1],t))return{x:n[1].x,y:n[1].y,intersect:!1,contact:!0};const r=((n[1].x-n[0].x)*(t[0].y-n[0].y)-(n[1].y-n[0].y)*(t[0].x-n[0].x))/o,a=((t[1].x-t[0].x)*(t[0].y-n[0].y)-(t[1].y-t[0].y)*(t[0].x-n[0].x))/o,i=r>=0&&r<=1&&a>=0&&a<=1;return{x:t[0].x+r*(t[1].x-t[0].x),y:t[0].y+r*(t[1].y-t[0].y),intersect:i,contact:i}},this.lineOnPoly=function(t,n){if(null==n.boundingBox&&(n.boundingBox=e.math.boundingBoxFromPoints(n.points)),!e.math.detectIntersect.boundingBoxes(e.math.boundingBoxFromPoints(t),n.boundingBox))return{points:[],intersect:!1,contact:!1};function o(e,t,n,o){return e==n&&t==o?1:t==n&&e==o?2:0}function r(t,o){for(let n=o.length-1,r=0;r<o.length;n=r++){const i=e.math.detectIntersect.lineOnLine(t,[o[n],o[r]]);if(i.contact){if(a.contact=!0,i.intersect&&(a.intersect=!0),null!=i.x&&i.x!=t[0].x&&i.x!=t[1].x&&(a.intersect=!0),null!=i.x2){null==a.points.find(e=>e.x==i.x1&&e.y==i.y1)&&a.points.push({x:i.x1,y:i.y1}),null==a.points.find(e=>e.x==i.x2&&e.y==i.y2)&&a.points.push({x:i.x2,y:i.y2});break}null==a.points.find(e=>e.x==i.x&&e.y==i.y)&&a.points.push({x:i.x,y:i.y})}}if(0==a.points.length)for(let o=0;o<n.points.length;o++)n.points[o].x!=t[0].x&&n.points[o].y!=t[0].y&&n.points[o].x!=t[1].x&&n.points[o].y!=t[1].y&&e.math.detectIntersect.pointOnLine(n.points[o],t)&&(a.points.push(n.points[o]),a.intersect=!0)}const a={points:[],contact:!1,intersect:!1},i=e.math.detectIntersect.pointWithinPoly(t[0],n),s=e.math.detectIntersect.pointWithinPoly(t[1],n);let l=0;return o(i,s,"outside","outside")?r(t,n.points):(l=o(i,s,"outside","onPoint"))?(r(t,n.points),a.contact=!0):(l=o(i,s,"outside","onEdge"))?(r(t,n.points),a.contact=!0):o(i,s,"outside","inside")?(r(t,n.points),a.intersect=!0,a.contact=!0):o(i,s,"onPoint","onPoint")?(a.points=[t[0],t[1]],a.contact=!0,a.intersect="inside"==e.math.detectIntersect.pointWithinPoly({x:(a.points[0].x+a.points[1].x)/2,y:(a.points[0].y+a.points[1].y)/2},n)):o(i,s,"onPoint","onEdge")?(a.points=[t[0],t[1]],a.contact=!0,a.intersect="inside"==e.math.detectIntersect.pointWithinPoly({x:(a.points[0].x+a.points[1].x)/2,y:(a.points[0].y+a.points[1].y)/2},n)):(l=o(i,s,"onPoint","inside"))?(1==l?a.points.push(t[1]):2==l&&a.points.push(t[0]),a.contact=!0,a.intersect=!0):o(i,s,"onEdge","onEdge")?(a.points=[t[0],t[1]],a.contact=!0,a.intersect="inside"==e.math.detectIntersect.pointWithinPoly({x:(a.points[0].x+a.points[1].x)/2,y:(a.points[0].y+a.points[1].y)/2},n)):(l=o(i,s,"onEdge","inside"))?(1==l?a.points.push(t[1]):2==l&&a.points.push(t[0]),a.contact=!0,a.intersect=!0):o(i,s,"inside","inside")&&(a.intersect=!0,a.contact=!1),a},this.polyOnPoly=function(t,n){if(null==t.boundingBox&&(t.boundingBox=e.math.boundingBoxFromPoints(t.points)),null==n.boundingBox&&(n.boundingBox=e.math.boundingBoxFromPoints(n.points)),!e.math.detectIntersect.boundingBoxes(t.boundingBox,n.boundingBox))return{points:[],intersect:!1,contact:!1};const o={points:[],contact:!1,intersect:!1},r=Object.assign([],t.points);if(n.points.forEach(e=>{const t=r.indexOf(r.find(t=>t.x==e.x&&t.y==e.y));-1!=t&&r.splice(t,1)}),0==r.length)return{points:Object.assign([],t.points),contact:!0,intersect:!0};for(let r=t.points.length-1,a=0;a<t.points.length;r=a++){const i=e.math.detectIntersect.lineOnPoly([t.points[r],t.points[a]],n);o.points=o.points.concat(i.points.filter(e=>null==o.points.find(t=>t.x==e.x&&t.y==e.y))),o.contact=o.contact||i.contact,o.intersect=o.intersect||i.intersect}for(let r=0;r<n.points.length&&!o.intersect;r++)"outside"!=e.math.detectIntersect.pointWithinPoly(n.points[r],t)&&(o.intersect=!0);return o}},this.pathExtrapolation=function(n,o=10,r="none",a="none",i=!1,s=5,l=4*o,c=!0){t.log.math(".pathExtrapolation(",n,o,r,a,i,s,l,c),i&&(n=function(e){t.log.math(".pathExtrapolation::loopThisPath(",e);const n=[(e[0]+e[2])/2,(e[1]+e[3])/2];let o=[];o=o.concat(n);for(let t=2;t<e.length;t+=2)o=o.concat([e[t],e[t+1]]);return o=o.concat([e[0],e[1]]),o=o.concat(n),o}(n));const u=function(n,o){t.log.math(".pathExtrapolation::calculateJointData(",n,o);const r=[];for(let e=0;e<n.length/2;e++)r.push({point:{x:n[2*e],y:n[2*e+1]}});for(let t=0;t<r.length;t++){if(t!=r.length-1){const n=e.math.getAngleOfTwoPoints(r[t].point,r[t+1].point);null!=r[t]&&(r[t].departAngle=n),null!=r[t+1]&&(r[t+1].implementAngle=n)}if(null!=r[t].departAngle&&null!=r[t].implementAngle){for(r[t].joiningAngle=r[t].departAngle-r[t].implementAngle+Math.PI;r[t].joiningAngle<0;)r[t].joiningAngle+=2*Math.PI;for(;r[t].joiningAngle>=2*Math.PI;)r[t].joiningAngle-=2*Math.PI;for(r[t].wingAngle=r[t].implementAngle+r[t].joiningAngle/2-Math.PI;r[t].wingAngle<0;)r[t].wingAngle+=2*Math.PI;for(;r[t].wingAngle>2*Math.PI;)r[t].wingAngle-=2*Math.PI;r[t].wingWidth=o/Math.sin(r[t].joiningAngle/2)}}return r}(n,o);if(0==u.length)return[];let p=function(n,o){t.log.math(".pathExtrapolation::path_to_rectangleSeries(",n,o);let r=[];for(let t=1;t<n.length/2;t++){const a=e.math.getAngleOfTwoPoints({x:n[2*t-2],y:n[2*t-1]},{x:n[2*t],y:n[2*t+1]}),i=e.math.cartesianAngleAdjust(o,0,Math.PI/2+a),s={x:-i.x,y:-i.y};r.push([{x:n[2*t-2]+i.x,y:n[2*t-1]+i.y},{x:n[2*t-2]+s.x,y:n[2*t-1]+s.y},{x:n[2*t]+s.x,y:n[2*t+1]+s.y},{x:n[2*t]+i.x,y:n[2*t+1]+i.y}])}return r}(n,o);if("flat"==a&&(p=p.concat(function(t,n){const o=[];let r=e.math.cartesianAngleAdjust(n,0,t[0].departAngle-Math.PI/2),a={x:-r.x,y:-r.y};for(let i=1;i<t.length-1;i++){const s=r,l=a;r=e.math.cartesianAngleAdjust(n,0,t[i].departAngle-Math.PI/2),a={x:-r.x,y:-r.y},t[i].joiningAngle==Math.PI||(t[i].joiningAngle<Math.PI?o.push([{x:t[i].point.x,y:t[i].point.y},{x:t[i].point.x+l.x,y:t[i].point.y+l.y},{x:t[i].point.x+a.x,y:t[i].point.y+a.y}]):t[i].joiningAngle>Math.PI&&o.push([{x:t[i].point.x,y:t[i].point.y},{x:t[i].point.x+s.x,y:t[i].point.y+s.y},{x:t[i].point.x+r.x,y:t[i].point.y+r.y}]))}return o}(u,o))),"round"==a&&(p=p.concat(function(t,n,o=5){const r=[];o<1&&(o=1);let a=e.math.cartesianAngleAdjust(n,0,t[0].departAngle-Math.PI/2),i={x:-a.x,y:-a.y};for(let s=1;s<t.length-1;s++){const l=[],c=a,u=i;if(a=e.math.cartesianAngleAdjust(n,0,t[s].departAngle-Math.PI/2),i={x:-a.x,y:-a.y},t[s].joiningAngle==Math.PI);else if(t[s].joiningAngle<Math.PI){l.push({x:t[s].point.x,y:t[s].point.y}),l.push({x:t[s].point.x+u.x,y:t[s].point.y+u.y});const n=Math.PI-t[s].joiningAngle,r=Math.floor((2+o)*(Math.abs(n)/Math.PI));for(let o=1;o<r;o++){const a=o*(n/r),i=e.math.cartesianAngleAdjust(u.x,u.y,-a);l.push({x:t[s].point.x+i.x,y:t[s].point.y+i.y})}l.push({x:t[s].point.x+i.x,y:t[s].point.y+i.y})}else if(t[s].joiningAngle>Math.PI){l.push({x:t[s].point.x,y:t[s].point.y}),l.push({x:t[s].point.x+c.x,y:t[s].point.y+c.y});const n=Math.PI-t[s].joiningAngle,r=Math.floor((2+o)*(Math.abs(n)/Math.PI));for(let o=1;o<r;o++){const a=o*(n/r),i=e.math.cartesianAngleAdjust(c.x,c.y,-a);l.push({x:t[s].point.x+i.x,y:t[s].point.y+i.y})}l.push({x:t[s].point.x+a.x,y:t[s].point.y+a.y})}r.push(l)}return r}(u,o,s))),"sharp"==a&&(p=p.concat(function(t,n,o=4*n){const r=[];let a=e.math.cartesianAngleAdjust(n,0,t[0].departAngle-Math.PI/2),i={x:-a.x,y:-a.y};for(let s=1;s<t.length-1;s++){const l=[],c=a,u=i;if(a=e.math.cartesianAngleAdjust(n,0,t[s].departAngle-Math.PI/2),i={x:-a.x,y:-a.y},t[s].joiningAngle==Math.PI);else if(t[s].joiningAngle<Math.PI)if(Math.abs(t[s].wingWidth)<=o){const n=e.math.cartesianAngleAdjust(0,t[s].wingWidth,Math.PI/2+t[s].wingAngle);l.push({x:n.x+t[s].point.x,y:n.y+t[s].point.y}),l.push({x:t[s].point.x+u.x,y:t[s].point.y+u.y}),l.push({x:t[s].point.x,y:t[s].point.y}),l.push({x:t[s].point.x+i.x,y:t[s].point.y+i.y})}else{const n=Math.cos(t[s].joiningAngle/2)*o,r=e.math.cartesianAngleAdjust(0,-n,Math.PI/2+t[s].implementAngle),a=e.math.cartesianAngleAdjust(0,n,Math.PI/2+t[s].departAngle);l.push({x:t[s].point.x,y:t[s].point.y}),l.push({x:t[s].point.x+u.x,y:t[s].point.y+u.y}),l.push({x:t[s].point.x+u.x+r.x,y:t[s].point.y+u.y+r.y}),l.push({x:t[s].point.x+i.x+a.x,y:t[s].point.y+i.y+a.y}),l.push({x:t[s].point.x+i.x,y:t[s].point.y+i.y})}else if(t[s].joiningAngle>Math.PI)if(Math.abs(t[s].wingWidth)<=o){const n=e.math.cartesianAngleAdjust(0,-t[s].wingWidth,Math.PI/2+t[s].wingAngle);l.push({x:n.x+t[s].point.x,y:n.y+t[s].point.y}),l.push({x:t[s].point.x+c.x,y:t[s].point.y+c.y}),l.push({x:t[s].point.x,y:t[s].point.y}),l.push({x:t[s].point.x+a.x,y:t[s].point.y+a.y})}else{const n=Math.cos(t[s].joiningAngle/2)*o,r=e.math.cartesianAngleAdjust(0,n,Math.PI/2+t[s].implementAngle),i=e.math.cartesianAngleAdjust(0,-n,Math.PI/2+t[s].departAngle);l.push({x:t[s].point.x,y:t[s].point.y}),l.push({x:t[s].point.x+c.x,y:t[s].point.y+c.y}),l.push({x:t[s].point.x+c.x+r.x,y:t[s].point.y+c.y+r.y}),l.push({x:t[s].point.x+a.x+i.x,y:t[s].point.y+a.y+i.y}),l.push({x:t[s].point.x+a.x,y:t[s].point.y+a.y})}r.push(l)}return r}(u,o,l))),"round"==r&&(p=p.concat(function(t,n,o=5){o<1&&(o=1);const r=[],a=[];a.push({x:t[0].point.x,y:t[0].point.y});for(let r=0;r<o+1;r++){const i=e.math.cartesianAngleAdjust(n,0,t[0].departAngle+Math.PI/2+r/o*Math.PI);a.push({x:t[0].point.x+i.x,y:t[0].point.y+i.y})}r.push(a);const i=[];i.push({x:t[t.length-1].point.x,y:t[t.length-1].point.y});for(let r=0;r<o+1;r++){const a=e.math.cartesianAngleAdjust(n,0,t[t.length-1].implementAngle-Math.PI/2+r/o*Math.PI);i.push({x:t[t.length-1].point.x+a.x,y:t[t.length-1].point.y+a.y})}return r.push(i),r}(u,o,s))),c)return e.math.polygonToSubTriangles(p.map(e=>[e]).reduce((t,n)=>e.math.unionPolygons(t,n)));{let t=p.map(e=>[e]).reduce((t,n)=>e.math.unionPolygons(t,n));return t=t.map(e=>e.map(e=>[e.x,e.y]).flat()),t}},this.fitPolyIn=function(n,o,r={active:!1,x:10,y:10,angle:Math.PI/8},a=!1){function i(e,t){return t.map(t=>({x:t.x+e.x,y:t.y+e.y}))}function s(t,n){const o={points:i(t,n.points),boundingBox:{}};return o.boundingBox=e.math.boundingBoxFromPoints(o.points),o}function l(t,n){for(let o=0;o<n.length;o++)if(e.math.detectIntersect.polyOnPoly(t,n[o]).intersect)return!0;return!1}t.log.math(".fitPolyIn(",n,o,r);let c={x:0,y:0};const u=[[],[],[]],p=e.math.averagePoint(n.points);let d,h=[],_=1;{const a=100;for(_=1;_<a+1;_++){h=[];const a=2*_+1,i=2*Math.PI/a,c=Math.pow(_,2);for(let d=0;d<a;d++){const a=e.math.polar2cartesian(i*d,c);a.x=r.active?Math.round(a.x/r.x)*r.x:a.x,a.y=r.active?Math.round(a.y/r.y)*r.y:a.y,t&&u[0].push({x:a.x+p.x,y:a.y+p.y}),l(s(a,n),o)||h.push({ang:i*d,dis:c})}if(0!=h.length)break}}{const a=10;if(1==h.length)d=h[0];else{let i=Math.pow(_,2),c=Math.pow(_-1,2);const g=[];for(let _=0;_<a;_++){const a=[],_=(i-c)/2+c;for(let i=0;i<h.length;i++){const c=e.math.polar2cartesian(h[i].ang,_);c.x=r.active?Math.round(c.x/r.x)*r.x:c.x,c.y=r.active?Math.round(c.y/r.y)*r.y:c.y,t&&u[1].push({x:c.x+p.x,y:c.y+p.y}),l(s(c,n),o)||(a.push({ang:h[i].ang,dis:_}),g.push({ang:h[i].ang,dis:_}))}if(1==a.length){d=a[0];break}0==a.length?c=_:i=_}null==d&&(d=g.pop())}}{const a=10;c=e.math.polar2cartesian(d.ang,d.dis),t&&u[2].push({x:c.x+p.x,y:c.y+p.y});const i={x:c.x,y:c.y},h={x:0,y:0};for(let e=0;e<a;e++){const e={x:(i.x-h.x)/2+h.x,y:(i.y-h.y)/2+h.y};e.x=r.active?Math.round(e.x/r.x)*r.x:e.x,e.y=r.active?Math.round(e.y/r.y)*r.y:e.y,t&&u[2].push({x:e.x+p.x,y:i.y+p.y}),l(s({x:e.x,y:i.y},n),o)?h.x=e.x:i.x=e.x,t&&u[2].push({x:i.x+p.x,y:e.y+p.y}),l(s({x:i.x,y:e.y},n),o)?h.y=e.y:i.y=e.y}c={x:i.x,y:i.y}}return a?{offset:c,paths:u}:c},this.polygonsToVisibilityGraph=function(t){const n=t.flatMap((e,t)=>e.points.map((e,n)=>({polyIndex:t,pointIndex:n,destination:[]}))),o={};return n.forEach((r,a)=>{n.forEach((n,i)=>{if(a==i)return;const s=r.polyIndex+"_"+r.pointIndex,l=n.polyIndex+"_"+n.pointIndex;if(null!=o[l]&&null!=o[l][s])return;const c=t[r.polyIndex].points[r.pointIndex],u=t[n.polyIndex].points[n.pointIndex];let p=!0;for(let n=0;n<t.length;n++){if(e.math.detectIntersect.lineOnPoly([c,u],t[n]).intersect){p=!1;break}}if(p){const t=e.math.distanceBetweenTwoPoints(c,u);null==o[s]&&(o[s]={}),o[s][l]={index:i,polyIndex:n.polyIndex,pointIndex:n.pointIndex,distance:t},r.destination.push(o[s][l]),null==o[l]&&(o[l]={}),o[l][s]={index:a,polyIndex:r.polyIndex,pointIndex:r.pointIndex,distance:t},n.destination.push(o[l][s])}})}),n},this.shortestRouteFromVisibilityGraph=function(e,t,n){if(0==e[t].destination.length&&0==e[n].destination.length)return[];if(0==e[t].destination.length)return[n];if(0==e[n].destination.length)return[t];let o=t;t==n&&(e["_"+t]=JSON.parse(JSON.stringify(e[t])),o="_"+t);const r=Object.keys(e).map(()=>({distance:1/0,visited:!1,route:""}));r[o].distance=0;let a=100;do{if(a<=0){console.error(".shortestRouteFromVisibilityGraph has encountered an overflow");break}a--;for(let t=0;t<e[o].destination.length;t++){if(r[e[o].destination[t].index].visited)continue;const n=r[o].distance+e[o].destination[t].distance;n<r[e[o].destination[t].index].distance&&(r[e[o].destination[t].index].route=o,r[e[o].destination[t].index].distance=n)}r[o].visited=!0;let t=1/0;Object.keys(r).forEach(e=>{!r[e].visited&&r[e].distance<t&&(t=r[e].distance,o=e)})}while(!r[n].visited);let i=[];for(o=n;o!=t;)i.unshift(parseInt(o)),o=r[o].route;return i.unshift(parseInt(o)),i}},this.glsl=new function(){this.geometry="\n                        #define PI 3.141592653589793\n                    \n                        vec2 cartesian2polar(vec2 xy){\n                            float dis = pow(pow(xy.x,2.0)+pow(xy.y,2.0),0.5);\n                            float ang = 0.0;\n                    \n                            if(xy.x == 0.0){\n                                if(xy.y == 0.0){ang = 0.0;}\n                                else if(xy.y > 0.0){ang = 0.5*PI;}\n                                else{ang = 1.5*PI;}\n                            }\n                            else if(xy.y == 0.0){\n                                if(xy.x >= 0.0){ang = 0.0;}else{ang = PI;}\n                            }\n                            else if(xy.x >= 0.0){ ang = atan(xy.y/xy.x); }\n                            else{ /*if(xy.x < 0.0)*/ ang = atan(xy.y/xy.x) + PI; }\n                    \n                            return vec2(ang,dis);\n                        }\n                        vec2 polar2cartesian(vec2 ad){\n                            return vec2( ad[1]*cos(ad[0]), ad[1]*sin(ad[0]) );\n                        }\n                        vec2 cartesianAngleAdjust(vec2 xy, float angle){\n                            // //v1\n                            // if(angle == 0.0 || mod(angle,PI*2.0) == 0.0){ return xy; }\n                            //\n                            // vec2 polar = cartesian2polar( xy );\n                            // polar[0] += angle;\n                            // return polar2cartesian( polar );\n                    \n                            //v2\n                            if(angle == 0.0 || mod(angle,PI*2.0) == 0.0){ return xy; }\n                            return vec2( xy.x*cos(angle) - xy.y*sin(angle), xy.y*cos(angle) + xy.x*sin(angle) ); \n                        }\n                    "},this.structure=new function(){this.functionListRunner=function(e,t){return function(n,o){let r=!1;for(let a=0;a<e.length;a++){let i=!0;for(let n=0;n<e[a].requiredKeys.length;n++){i=!0;for(let o=0;o<e[a].requiredKeys[n].length&&(i=i&&t[e[a].requiredKeys[n][o]],i);o++);if(i)break}if(i&&(r=!0,e[a].function(n,o)))break}return r}},this.signalRegistry=function(e=-1,t=-1,n=-1){let o=[],r=[],a=[],i=[],s={},l=[];this.__dump=function(){console.log("---- signalRegistry dump ----"),console.log("\tsignals");for(let e=0;e<o.length;e++)console.log("\t\t",e," "+JSON.stringify(o[e]));console.log("\tselectedSignals");for(let e=0;e<tselectedSignals.length;e++)console.log("\t\t",e," "+JSON.stringify(tselectedSignals[e]));console.log("\tevents");for(let e=0;e<a.length;e++)console.log("\t\t",e," "+JSON.stringify(a[e]));console.log("\tevents_byID");for(let e=0;e<i.length;e++)console.log("\t\t",e," "+JSON.stringify(i[e]));console.log("\tevents_byPosition");const e=Object.keys(s);for(let t=0;t<e.length;t++)console.log("\t\t",e[t]," "+JSON.stringify(s[e[t]]));console.log("\tpositions");for(let e=0;e<l.length;e++)console.log("\t\t",e," "+JSON.stringify(l[e]))},this.export=function(){return JSON.parse(JSON.stringify({signals:o,selectedSignals:r,events:a,events_byID:i,events_byPosition:s,positions:l}))},this.import=function(e){o=JSON.parse(JSON.stringify(e.signals)),r=JSON.parse(JSON.stringify(e.selectedSignals)),a=JSON.parse(JSON.stringify(e.events)),i=JSON.parse(JSON.stringify(e.events_byID)),s=JSON.parse(JSON.stringify(e.events_byPosition)),l=JSON.parse(JSON.stringify(e.positions))},this.getAllSignals=function(){return JSON.parse(JSON.stringify(o))},this.getAllEvents=function(){return JSON.parse(JSON.stringify(a))},this.getSignal=function(e){if(null!=o[e])return JSON.parse(JSON.stringify(o[e]))},this.eventsBetween=function(e,t){const n=null==t?Array.from(new Set(l.filter((function(t){return t==e})))):Array.from(new Set(l.filter((function(n){return n>=e&&n<t})))),o=[];for(let e=0;e<n.length;e++){n[e]=s[String(n[e])];for(let t=0;t<n[e].length;t++)o.push(a[n[e][t]])}return o.sort((function(e,t){return e.position<t.position?-1:e.position>t.position?1:0}))},this.add=function(r,c){if(!(null!=r&&"line"in r&&"position"in r&&"length"in r))return;"strength"in r||(r.strength=1),r.line<0&&(r.line=0),r.length<0&&(r.length=0),r.position<0&&(r.position=0),r.strength<0&&(r.strength=0),t>-1&&r.line>t-1&&(r.line=t-1),n>-1&&r.length>n&&(r.length=n),e>-1&&r.position>e&&(r.position=e-r.length),e>-1&&r.position+r.length>e&&(r.length=e-r.position),e>-1&&r.position+r.length>e&&(r.position=e-r.length),r.strength>1&&(r.strength=1);let u=0;if(null==c)for(;null!=o[u];)u++;else u=c;o[u]=JSON.parse(JSON.stringify(r));const p=[{signalID:u,line:r.line,position:r.position,strength:r.strength},{signalID:u,line:r.line,position:r.position+r.length,strength:0}];let d=0;for(;null!=a[d];)d++;for(a[d]=p[0],i[u]=[d],null==s[p[0].position]?s[p[0].position]=[d]:s[p[0].position].push(d),l.push(p[0].position);null!=a[d];)d++;return a[d]=p[1],i[u]=i[u].concat(d),null==s[p[1].position]?s[p[1].position]=[d]:s[p[1].position].push(d),l.push(p[1].position),u},this.remove=function(e){if(null!=o[e]){delete o[e];for(let t=0;t<i[e].length;t++){const n=i[e][t];s[a[n].position].splice(s[a[n].position].indexOf(n),1),l.splice(l.indexOf(a[n].position),1),0==s[a[n].position].length&&delete s[a[n].position],delete a[n]}delete i[e]}},this.update=function(t,n){null!=n&&("line"in n||(n.line=o[t].line),e>-1&&("position"in n&&"length"in n?n.length+n.position>e&&(n.length=e-n.position):("position"in n?o[t].length+n.position>=e&&(n.position=e-o[t].length):n.position=o[t].position,"length"in n?n.length+n.position>e&&(n.length=e-n.position):n.length=o[t].length)),"strength"in n||(n.strength=o[t].strength),this.remove(t),this.add(n,t))},this.reset=function(){o=[],r=[],a=[],i=[],s={},l=[]}}},this.font=new function(){this.listAllAvailableGlyphs=function(e){const t=this.decodeFont(e);return Object.keys(t.glyphs.glyphs).map(e=>String.fromCharCode(t.glyphs.glyphs[e].unicode))},this.decodeFont=function(e){return n.opentype2.parse(e)},this.getAllAvailableGlyphDrawingPaths=function(e,t){const n=null!=t?t:Object.keys(e.glyphs.glyphs).map(t=>String.fromCharCode(e.glyphs.glyphs[t].unicode)),o=n.map(t=>e.getPath(t,0,0,1));let r={};for(let e=0;e<n.length;e++)r[n[e]]=o[e].commands;return r},this.convertPathToPoints=function(e,t=2){let n=[],o=[];return e.forEach((function(e){switch(e.type){case"M":case"L":o.push({x:e.x,y:e.y});break;case"H":case"V":case"C":case"S":break;case"Q":const r={start:{x:o[o.length-1].x,y:o[o.length-1].y},control:{x:e.x1,y:e.y1},end:{x:e.x,y:e.y}};for(let e=1;e<=t;e++){let n=e/t;o.push({x:r.start.x+n*(2*(r.control.x-r.start.x)+n*(r.end.x-2*r.control.x+r.start.x)),y:r.start.y+n*(2*(r.control.y-r.start.y)+n*(r.end.y-2*r.control.y+r.start.y))})}break;case"T":case"A":break;case"Z":case"z":n=n.concat(o),o=[]}})),n},this.getTrianglesFromGlyphPath=function(t,n=2){if(0==t.length)return[];const o={top:1/0,left:1/0,bottom:0,right:0};t.forEach(e=>{e.x<o.left&&(o.left=e.x),e.y<o.top&&(o.top=e.y),e.x>o.right&&(o.right=e.x),e.y>o.bottom&&(o.bottom=e.y)});let r=[],a=[];t.forEach(e=>{a.push(e),"Z"==e.type&&(r.push(a),a=[])}),r=r.map(t=>e.font.convertPathToPoints(t,n)),r=r.map(t=>{const n=e.math.boundingBoxFromPoints(t);return{vector:t,size:(n.bottomRight.x-n.topLeft.x)*(n.bottomRight.y-n.topLeft.y)}}).sort((function(e,t){return e.size<=t.size?1:-1})).map(e=>e.vector);let i=[];return r.forEach(t=>{let n=!1;for(let o=0;o<i.length;o++)if(e.math.detectIntersect.polyOnPoly({points:t},{points:i[o].path}).intersect){i[o].path=i[o].path.concat(t),i[o].regions.unshift(t),n=!0;break}n||i.push({path:t,regions:[t]})}),i.flatMap(t=>e.math.polygonToSubTriangles(t.regions))},this.extractGlyphs=function(t,n){const o=e.font.decodeFont(t),r=e.font.getAllAvailableGlyphDrawingPaths(o,n),a={};Object.keys(r).forEach(t=>{const n=o.glyphs.glyphs[t.charCodeAt(0)];a[t]={vector:e.font.getTrianglesFromGlyphPath(r[t]),ascender:o.ascender,descender:o.descender,leftSideBearing:n.leftSideBearing,advanceWidth:n.advanceWidth,xMax:n.xMax,yMax:n.yMax,xMin:n.xMin,yMin:n.yMin,top:1/0,left:1/0,bottom:0,right:0};for(let e=0;e<a[t].vector.length;e+=2)a[t].vector[e]<a[t].left?a[t].left=a[t].vector[e]:a[t].vector[e]>a[t].right&&(a[t].right=a[t].vector[e]),a[t].vector[e+1]<a[t].top?a[t].top=a[t].vector[e+1]:a[t].vector[e+1]>a[t].bottom&&(a[t].bottom=a[t].vector[e+1])});const i={height:0,width:0,master:0};return Object.keys(a).forEach(e=>{const t=a[e].bottom-a[e].top;t>i.height&&(i.height=t);const n=a[e].right-a[e].left;n>i.width&&(i.width=n)}),i.master=i.height<i.width?i.height:i.width,Object.keys(a).forEach(e=>{for(let t=0;t<a[e].vector.length;t+=2)a[e].vector[t]/=i.master,a[e].vector[t+1]/=i.master;a[e].top/=i.master,a[e].bottom/=i.master,a[e].left/=i.master,a[e].right/=i.master}),a};const t={},o="0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz.,:;?!/\\()[]{}#-_'\"|><+=&*~%^".split(""),r=["Roboto/Roboto-Regular.ttf","Roboto/Roboto-Italic.ttf","Roboto/Roboto-Black.ttf","Roboto/Roboto-BlackItalic.ttf","Roboto/Roboto-Bold.ttf","Roboto/Roboto-BoldItalic.ttf","Roboto/Roboto-Light.ttf","Roboto/Roboto-LightItalic.ttf","Roboto/Roboto-Medium.ttf","Roboto/Roboto-MediumItalic.ttf","Roboto/Roboto-Thin.ttf","Roboto/Roboto-ThinItalic.ttf","Helvetica/Helvetica-Bold.ttf","Helvetica/Helvetica-BoldItalic.ttf","Helvetica/Helvetica-Italic.ttf","Helvetica/Helvetica-Light.ttf","Helvetica/Helvetica.ttf","Arial/Arial.ttf","Cute_Font/CuteFont-Regular.ttf","Lobster/Lobster-Regular.ttf","AppleGaramond/AppleGaramond.ttf"];r.forEach(e=>{const n=e.split(".").slice(0,-1)[0].split("/").slice(1,2)[0];t[n]={fileName:e,loadAttempted:!1,loadComplete:!1,loadWasSuccess:void 0}}),t.defaultThick={loadAttempted:!0,isLoaded:!0,default:{vector:[.8,.2,.2,.2,0,0,0,1,0,0,.2,.2,.8,.2,0,0,1,0,0,1,.2,.2,.2,.8,.8,.8,.8,.2,1,0,1,1,0,1,.2,.8,.8,.8,1,0,1,1,1,1,.2,.8,.8,.8]},"":{vector:[.8,.2,.2,.2,0,0,0,1,0,0,.2,.2,.8,.2,0,0,1,0,0,1,.2,.2,.2,.8,.8,.8,.8,.2,1,0,1,1,0,1,.2,.8,.8,.8,1,0,1,1,1,1,.2,.8,.8,.8]},A:{vector:[.3,.7,.2,1,0,1,0,1,.4,0,.6,0,.6,0,1,1,.8,1,.4,.5,.65,.5,.7,.7,.6,0,.8,1,.5,.2,.4,.5,.7,.7,.3,.7,0,1,.6,0,.5,.2,.5,.2,.4,.5,.3,.7,.3,.7,0,1,.5,.2]},B:{vector:[0,1,0,0,.2,0,.7,.5,.2,.5,.2,.3,.7,.2,.2,.2,.2,0,.2,0,.8,0,.9,.1,.9,.1,.9,.3,.8,.4,.8,.4,1,.6,1,.8,1,.8,.8,1,0,1,0,1,.2,0,.2,.8,.7,.5,.2,.3,.7,.3,.7,.2,.2,0,.9,.1,0,1,.2,.8,.7,.8,.8,.6,.7,.5,.7,.3,.7,.3,.7,.2,.9,.1,1,.8,0,1,.7,.8,.7,.3,.9,.1,.8,.4,1,.8,.7,.8,.8,.7,.8,.6,.7,.3,.8,.4,1,.8,.8,.7,.8,.6,.8,.6,.8,.4,1,.8]},C:{vector:[0,.7,0,.3,.3,0,.3,0,.8,0,1,.2,1,.2,.8,.3,.7,.2,.7,.8,.8,.7,1,.8,1,.8,.8,1,.3,1,.3,0,1,.2,.7,.2,.7,.8,1,.8,.3,1,.3,0,.7,.2,.4,.2,.4,.8,.7,.8,.3,1,.3,0,.4,.2,.2,.4,.2,.6,.4,.8,.3,1,0,.7,.3,0,.2,.4,.2,.6,.3,1,0,.7,0,.7,.2,.4,.2,.6]},D:{vector:[0,1,0,0,.2,0,.7,.2,.2,.2,.2,0,.2,0,.8,0,1,.2,1,.2,1,.8,.8,1,0,1,.2,0,.2,.8,.7,.2,.2,0,1,.2,.8,1,0,1,.2,.8,.8,.3,.7,.2,1,.2,.8,1,.2,.8,.7,.8,.8,.7,.8,.3,1,.2,.8,1,.7,.8,.8,.7,.8,.7,1,.2,.8,1]},E:{vector:[0,0,1,0,1,.2,.2,.4,1,.4,1,.6,.2,.8,1,.8,1,1,0,0,1,.2,.2,.2,.2,.4,1,.6,.2,.6,.2,.8,1,1,0,1,0,1,0,0,.2,.2,.2,.6,.2,.8,0,1,0,1,.2,.2,.2,.4,.2,.4,.2,.6,0,1]},F:{vector:[.2,1,0,1,0,0,0,0,1,0,1,.2,.2,.4,1,.4,1,.6,.2,.6,.2,1,0,0,0,0,1,.2,.2,.2,.2,.4,1,.6,.2,.6,0,0,.2,.2,.2,.4,.2,.4,.2,.6,0,0]},G:{vector:[0,.7,0,.3,.3,0,.3,0,.8,0,1,.2,1,.2,.8,.3,.7,.2,.8,.8,.8,.6,1,.6,1,1,.3,1,0,.7,.3,0,1,.2,.7,.2,.8,.8,1,.6,1,1,.3,0,.7,.2,.4,.2,.4,.8,.8,.8,1,1,.3,0,.4,.2,.2,.4,.4,.8,1,1,0,.7,0,.7,.3,0,.2,.4,.2,.6,.4,.8,0,.7,0,.7,.2,.4,.2,.6]},H:{vector:[.2,1,0,1,0,0,0,0,.2,0,.2,.4,.8,.4,.8,0,1,0,1,0,1,1,.8,1,.2,.6,.2,1,0,0,1,0,.8,1,.8,.6,.2,.6,0,0,.2,.4,.8,.4,1,0,.8,.6,.8,.6,.2,.6,.2,.4,.2,.4,.8,.4,.8,.6]},I:{vector:[.4,.2,0,.2,0,0,0,0,1,0,1,.2,.6,.8,1,.8,1,1,1,1,0,1,0,.8,0,0,1,.2,.6,.2,1,1,0,.8,.4,.8,.4,.2,0,0,.6,.2,.6,.8,1,1,.4,.8,.4,.8,.4,.2,.6,.2,.6,.2,.6,.8,.4,.8]},J:{vector:[.4,.2,0,.2,0,0,0,0,1,0,1,.2,.6,.2,.6,.8,.4,1,.4,1,0,1,0,.8,0,0,1,.2,.6,.2,.4,1,0,.8,.3,.8,.4,.2,0,0,.6,.2,.4,1,.3,.8,.4,.7,.4,.7,.4,.2,.6,.2,.6,.2,.4,1,.4,.7]},K:{vector:[.2,1,0,1,0,0,0,0,.2,0,.2,.3,.2,.3,1,0,1,.2,.5,.4,1,1,.75,1,.2,.5,.2,1,0,0,.2,.3,1,.2,.5,.4,.5,.4,.75,1,.3,.45,.3,.45,.2,.5,0,0,.2,.3,.5,.4,.3,.45,.3,.45,0,0,.2,.3]},L:{vector:[0,1,0,0,.2,0,.2,.8,1,.8,1,1,0,1,.2,0,.2,.8,.2,.8,1,1,0,1]},M:{vector:[.2,1,0,1,0,0,0,0,.2,0,.5,.4,.5,.4,.8,0,1,0,1,0,1,1,.8,1,.2,.3,.2,1,0,0,1,0,.8,1,.8,.3,.5,.7,.2,.3,0,0,.5,.4,1,0,.8,.3,.5,.7,0,0,.5,.4,.5,.4,.8,.3,.5,.7]},N:{vector:[.2,1,0,1,0,0,0,0,.2,0,.8,.7,.8,.7,.8,0,1,0,1,0,1,1,.8,1,.2,.3,.2,1,0,0,.8,.7,1,0,.8,1,.8,1,.2,.3,0,0,0,0,.8,.7,.8,1]},O:{vector:[.6,.2,.4,.2,.3,0,.3,0,.7,0,1,.3,1,.3,1,.7,.7,1,.7,1,.3,1,0,.7,0,.7,0,.3,.3,0,.3,0,.4,.2,.2,.4,.6,.2,.3,0,1,.3,0,.7,.3,0,.2,.4,.8,.4,.6,.2,1,.3,0,.7,.2,.4,.2,.6,.8,.6,.8,.4,1,.3,0,.7,.2,.6,.4,.8,.8,.6,1,.3,.7,1,.7,1,0,.7,.4,.8,.6,.8,.8,.6,.7,1,.7,1,.4,.8,.6,.8]},P:{vector:[.2,1,0,1,0,0,0,0,.8,0,1,.2,1,.2,1,.4,.8,.6,.8,.6,.2,.6,.2,.4,.2,.2,.2,1,0,0,.8,.6,.2,.4,.7,.4,.7,.2,.2,.2,0,0,1,.2,.8,.6,.7,.4,.7,.2,0,0,1,.2,1,.2,.7,.4,.8,.3,.8,.3,.7,.2,1,.2]},Q:{vector:[0,.7,0,.3,.3,0,.3,0,.7,0,1,.3,1,.3,1,.7,.95,.75,.95,.75,1,.8,1,1,1,1,.8,1,.5,.7,.5,.7,.5,.5,.7,.5,.4,.8,.6,.8,.75,.95,.75,.95,.7,1,.3,1,.95,.75,1,1,.5,.7,.5,.7,.7,.5,.8,.6,.4,.8,.75,.95,.3,1,.95,.75,.5,.7,.8,.6,.2,.6,.4,.8,.3,1,1,.3,.95,.75,.8,.6,.2,.6,.3,1,0,.7,1,.3,.8,.6,.8,.4,.2,.4,.2,.6,0,.7,1,.3,.8,.4,.6,.2,.2,.4,0,.7,.3,0,.3,0,1,.3,.6,.2,.4,.2,.2,.4,.3,0,.3,0,.6,.2,.4,.2],encroach:{"{":1}},R:{vector:[.2,1,0,1,0,0,0,0,.8,0,1,.2,1,.2,1,.4,.8,.6,.6,.6,1,1,.75,1,.35,.6,.2,.6,.2,.4,.2,.2,.2,1,0,0,1,.2,.8,.6,.6,.6,.6,.6,.75,1,.35,.6,.35,.6,.2,.4,.7,.4,.7,.2,.2,.2,0,0,.6,.6,.35,.6,.7,.4,.7,.2,0,0,1,.2,1,.2,.6,.6,.7,.4,.8,.3,.7,.2,1,.2,1,.2,.7,.4,.8,.3]},S:{vector:[0,.4,0,.2,.2,0,.2,0,.8,0,1,.2,1,.2,1,.3,.8,.3,.3,.4,.8,.4,1,.6,1,.6,1,.8,.8,1,.8,1,.2,1,0,.8,0,.8,0,.7,.2,.7,.7,.6,.2,.6,0,.4,1,.2,.8,.3,.7,.2,0,.8,.2,.7,.3,.8,.2,0,1,.2,.7,.2,.8,1,0,.8,.3,.8,.2,0,.7,.2,.3,.2,.8,1,.3,.8,.7,.8,0,.4,.2,0,.3,.2,1,.6,.8,1,.7,.8,0,.4,.3,.2,.2,.3,1,.6,.7,.8,.8,.7,0,.4,.2,.3,.3,.4,1,.6,.8,.7,.7,.6,.7,.6,0,.4,.3,.4,.3,.4,1,.6,.7,.6]},T:{vector:[.4,.2,0,.2,0,0,0,0,1,0,1,.2,.6,.2,.6,1,.4,1,0,0,1,.2,.6,.2,.6,.2,.4,1,.4,.2,.4,.2,0,0,.6,.2]},U:{vector:[.3,1,0,.7,0,0,0,0,.2,0,.2,.6,.8,.6,.8,0,1,0,1,0,1,.7,.7,1,.3,1,0,0,.2,.6,.8,.6,1,0,.7,1,.3,1,.2,.6,.4,.8,.6,.8,.8,.6,.7,1,.7,1,.3,1,.4,.8,.4,.8,.6,.8,.7,1]},V:{vector:[.6,1,.4,1,0,0,0,0,.2,0,.5,.7,.5,.7,.8,0,1,0,.6,1,0,0,.5,.7,.5,.7,1,0,.6,1]},W:{vector:[.2,1,0,1,0,0,0,0,.2,0,.2,.7,.8,.7,.8,0,1,0,1,0,1,1,.8,1,.2,1,0,0,.2,.7,.8,.7,1,0,.8,1,.5,.6,.2,1,.2,.7,.5,.3,.8,.7,.8,1,.5,.6,.2,.7,.5,.3,.5,.3,.8,1,.5,.6]},X:{vector:[.4,.5,0,0,.25,0,.5,.35,.75,0,1,0,.6,.5,1,1,.75,1,.5,.65,.25,1,0,1,.4,.5,.25,0,.5,.35,.5,.35,1,0,.6,.5,.6,.5,.75,1,.5,.65,.5,.65,0,1,.4,.5,.4,.5,.5,.35,.6,.5,.6,.5,.5,.65,.4,.5]},Y:{vector:[.35,.5,0,0,.25,0,.5,.35,.75,0,1,0,1,0,.25,1,0,1,.35,.5,.25,0,.5,.35,.5,.35,1,0,0,1,0,1,.35,.5,.5,.35]},Z:{vector:[.7,.8,0,.2,0,0,0,0,1,0,1,.2,.3,.2,1,.8,1,1,1,1,0,1,0,.8,0,0,1,.2,.3,.2,1,1,0,.8,.7,.8,.7,.8,0,0,.3,.2,.3,.2,1,1,.7,.8]},a:{vector:[0,.6666666666666667,0,.33333333333333337,.25,0,.25,0,.625,0,.8749999999999999,.33333333333333337,.8749999999999999,.8333333333333334,1,1,.625,1,.37499999999999994,.6666666666666667,.625,.6666666666666667,.625,1,.625,1,.25,1,0,.6666666666666667,.8749999999999999,.33333333333333337,.8749999999999999,.8333333333333334,.625,1,.37499999999999994,.6666666666666667,.625,1,0,.6666666666666667,.8749999999999999,.33333333333333337,.625,1,.625,.5,.25,.5,.37499999999999994,.6666666666666667,0,.6666666666666667,.25,0,.8749999999999999,.33333333333333337,.625,.5,.37499999999999994,.33333333333333337,.25,.5,0,.6666666666666667,.25,0,.625,.5,.5,.33333333333333337,.37499999999999994,.33333333333333337,0,.6666666666666667,.25,0,.25,0,.5,.33333333333333337,.37499999999999994,.33333333333333337],ratio:{x:.8,y:.6},offset:{y:.4},encroach:{a:1,t:1,Y:3}},b:{vector:[0,1,0,0,.28571428571428575,0,.5714285714285715,.6,.28571428571428575,.6,.28571428571428575,.4,.28571428571428575,.4,.7142857142857143,.4,1,.6,1,.6,1,.8,.7142857142857143,1,0,1,.28571428571428575,0,.28571428571428575,.8,.5714285714285715,.6,.28571428571428575,.4,1,.6,.7142857142857143,1,0,1,.28571428571428575,.8,.7142857142857143,.7,.5714285714285715,.6,1,.6,.7142857142857143,1,.28571428571428575,.8,.5714285714285715,.8,.5714285714285715,.8,.7142857142857143,.7,1,.6,1,.6,.7142857142857143,1,.5714285714285715,.8],ratio:{x:.7}},c:{vector:[0,.6666666666666667,0,.33333333333333337,.28571428571428575,0,.28571428571428575,0,1,0,1,.33333333333333337,.4285714285714286,.6666666666666667,1,.6666666666666667,1,1,1,1,.28571428571428575,1,0,.6666666666666667,.28571428571428575,0,1,.33333333333333337,.4285714285714286,.33333333333333337,.4285714285714286,.6666666666666667,1,1,0,.6666666666666667,0,.6666666666666667,.28571428571428575,0,.4285714285714286,.33333333333333337,.28571428571428575,.5,.4285714285714286,.6666666666666667,0,.6666666666666667,0,.6666666666666667,.4285714285714286,.33333333333333337,.28571428571428575,.5],ratio:{x:.7,y:.6},offset:{y:.4},encroach:{a:1}},d:{vector:[.28571428571428575,1,0,.8,0,.6,0,.6,.28571428571428575,.4,.7142857142857143,.4,.7142857142857143,.4,.7142857142857143,.6,.4285714285714286,.6,.7142857142857143,.8,.7142857142857143,0,1,0,0,.6,.7142857142857143,.4,.4285714285714286,.6,.7142857142857143,.8,1,0,1,1,0,.6,.4285714285714286,.6,.28571428571428575,.7,.4285714285714286,.8,.7142857142857143,.8,1,1,.28571428571428575,1,0,.6,.28571428571428575,.7,.4285714285714286,.8,1,1,.28571428571428575,1,.28571428571428575,1,.28571428571428575,.7,.4285714285714286,.8],ratio:{x:.7},encroach:{a:1}},e:{vector:[0,.7499999999999999,0,.25,.2,0,.2,0,.8,0,1,.25,1,.25,1,.5,.9,.625,.3,.7499999999999999,1,.7499999999999999,.8,1,.8,1,.2,1,0,.7499999999999999,.3,.7499999999999999,.8,1,0,.7499999999999999,.2,.625,.3,.7499999999999999,0,.7499999999999999,.2,.37499999999999994,.2,.625,0,.7499999999999999,.2,.37499999999999994,0,.7499999999999999,.2,0,.9,.625,.2,.625,.2,.37499999999999994,.3,.25,.2,.37499999999999994,.2,0,.9,.625,.2,.37499999999999994,.8,.37499999999999994,.7,.25,.3,.25,.2,0,1,.25,.9,.625,.8,.37499999999999994,.7,.25,.2,0,1,.25,1,.25,.8,.37499999999999994,.7,.25],ratio:{x:.7,y:.6},offset:{y:.4},encroach:{K:1,t:1,v:.5,x:1}},f:{vector:[.25,.4,.25,.2,.7499999999999999,0,.7499999999999999,0,1,0,1,.2,.7499999999999999,.4,1,.4,1,.6,.7499999999999999,.6,.7499999999999999,1,.25,1,.25,.6,0,.6,0,.4,.25,.4,.7499999999999999,0,1,.2,.7499999999999999,.4,1,.6,.7499999999999999,.6,.7499999999999999,.6,.25,1,.25,.6,.25,.6,0,.4,.25,.4,.25,.4,1,.2,.7499999999999999,.3,.7499999999999999,.4,.7499999999999999,.6,.25,.6,.25,.6,.25,.4,.7499999999999999,.3,.7499999999999999,.3,.7499999999999999,.4,.25,.6],ratio:{x:.4}},g:{vector:[0,.36363636363636365,0,.18181818181818182,.28571428571428575,0,.28571428571428575,0,.8571428571428572,0,1,.09090909090909091,1,.09090909090909091,1,.8181818181818181,.7142857142857143,1,.7142857142857143,1,.28571428571428575,1,0,.8181818181818181,0,.8181818181818181,0,.7272727272727273,.28571428571428575,.7272727272727273,.4285714285714286,.36363636363636365,.7142857142857143,.36363636363636365,.7142857142857143,.5454545454545454,.7142857142857143,.5454545454545454,.28571428571428575,.5454545454545454,0,.36363636363636365,.7142857142857143,1,0,.8181818181818181,.28571428571428575,.7272727272727273,.4285714285714286,.36363636363636365,.7142857142857143,.5454545454545454,0,.36363636363636365,.7142857142857143,1,.28571428571428575,.7272727272727273,.4285714285714286,.8181818181818181,.28571428571428575,.2727272727272727,.4285714285714286,.36363636363636365,0,.36363636363636365,.7142857142857143,1,.4285714285714286,.8181818181818181,.5714285714285715,.8181818181818181,.4285714285714286,.18181818181818182,.28571428571428575,.2727272727272727,0,.36363636363636365,.7142857142857143,1,.5714285714285715,.8181818181818181,.7142857142857143,.7272727272727273,.4285714285714286,.18181818181818182,0,.36363636363636365,.28571428571428575,0,1,.09090909090909091,.7142857142857143,1,.7142857142857143,.7272727272727273,.7142857142857143,.18181818181818182,.4285714285714286,.18181818181818182,.28571428571428575,0,1,.09090909090909091,.7142857142857143,.7272727272727273,.7142857142857143,.18181818181818182,.7142857142857143,.18181818181818182,.28571428571428575,0,1,.09090909090909091],ratio:{x:.7,y:1.1},offset:{y:.4}},h:{vector:[.28571428571428575,1,0,1,0,0,0,0,.28571428571428575,0,.28571428571428575,.4,.28571428571428575,.4,.7142857142857143,.4,1,.6,1,.6,1,1,.7142857142857143,1,.28571428571428575,.6,.28571428571428575,1,0,0,1,.6,.7142857142857143,1,.7142857142857143,.7,.28571428571428575,.6,0,0,.28571428571428575,.4,1,.6,.7142857142857143,.7,.5714285714285715,.6,.5714285714285715,.6,.28571428571428575,.6,.28571428571428575,.4,.28571428571428575,.4,1,.6,.5714285714285715,.6],ratio:{x:.7}},i:{vector:[0,0,1,0,1,.22222222222222224,0,.3333333333333333,1,.3333333333333333,1,1,0,0,1,.22222222222222224,0,.22222222222222224,0,.3333333333333333,1,1,0,1],ratio:{x:.2,y:.9},offset:{y:.1}},j:{vector:[.5,0,1,0,1,.16666666666666669,.5,.25,1,.25,1,.8333333333333334,1,.8333333333333334,.5,1,0,1,0,1,0,.8333333333333334,.25,.8333333333333334,.5,0,1,.16666666666666669,.5,.16666666666666669,1,.8333333333333334,0,1,.25,.8333333333333334,1,.8333333333333334,.25,.8333333333333334,.5,.75,.5,.25,1,.8333333333333334,.5,.75],ratio:{x:.4,y:1.2},offset:{y:.1},encroach:{A:1,B:1,C:1,D:1,E:1,F:1,G:1,H:1,I:1,J:1,L:1,K:1,M:1,N:1,O:1,P:1,Q:1,R:1,S:1,T:1,U:1,V:1,W:1,X:1,Y:1,Z:1,a:2,b:1,c:1,d:1,e:1,f:1,h:1,i:1,k:1,l:1,n:1,m:1,o:1,p:1,r:1,s:1,t:1,u:1,v:1,w:1,x:1,z:1}},k:{vector:[.26666666666666666,1,0,1,0,0,0,0,.26666666666666666,0,.26666666666666666,.5,.26666666666666666,.5,.6666666666666666,.3,1,.3,.4666666666666666,.6,1,1,.6666666666666666,1,.26666666666666666,.7,.26666666666666666,1,0,0,.26666666666666666,.5,1,.3,.4666666666666666,.6,.4666666666666666,.6,.6666666666666666,1,.26666666666666666,.7,.26666666666666666,.7,0,0,.26666666666666666,.5,.26666666666666666,.5,.4666666666666666,.6,.26666666666666666,.7],ratio:{x:.75}},l:{vector:[.4,1,0,.8,0,0,0,0,.4,0,.4,.7,.6,.8,1,.8,1,1,.4,1,0,0,.4,.7,.6,.8,1,1,.4,1,.4,1,.4,.7,.6,.8],ratio:{x:.5},encroach:{a:1}},m:{vector:[.16666666666666669,1,0,1,0,0,0,0,.8333333333333334,0,1,.33333333333333337,1,.33333333333333337,1,1,.8333333333333334,1,.5833333333333334,.33333333333333337,.5833333333333334,1,.4166666666666667,1,.16666666666666669,.33333333333333337,.16666666666666669,1,0,0,1,.33333333333333337,.8333333333333334,1,.8333333333333334,.5,.5833333333333334,.33333333333333337,.4166666666666667,1,.4166666666666667,.5,.33333333333333337,.33333333333333337,.16666666666666669,.33333333333333337,0,0,1,.33333333333333337,.8333333333333334,.5,.75,.33333333333333337,.5833333333333334,.33333333333333337,.4166666666666667,.5,.33333333333333337,.33333333333333337,0,0,1,.33333333333333337,.75,.33333333333333337,.5833333333333334,.33333333333333337,.33333333333333337,.33333333333333337,0,0,0,0,.75,.33333333333333337,.5833333333333334,.33333333333333337],ratio:{x:1.2,y:.6},offset:{y:.4}},n:{vector:[.28571428571428575,1,0,1,0,0,0,0,.7142857142857143,0,1,.33333333333333337,1,.33333333333333337,1,1,.7142857142857143,1,.28571428571428575,.33333333333333337,.28571428571428575,1,0,0,1,.33333333333333337,.7142857142857143,1,.7142857142857143,.5,.5714285714285715,.33333333333333337,.28571428571428575,.33333333333333337,0,0,1,.33333333333333337,.7142857142857143,.5,.5714285714285715,.33333333333333337,.5714285714285715,.33333333333333337,0,0,1,.33333333333333337],ratio:{x:.7,y:.6},offset:{y:.4}},o:{vector:[.33333333333333337,.5,0,.33333333333333337,.33333333333333337,0,.33333333333333337,0,.6666666666666667,0,1,.33333333333333337,1,.33333333333333337,1,.6666666666666667,.6666666666666667,1,.6666666666666667,1,.33333333333333337,1,0,.6666666666666667,0,.6666666666666667,0,.33333333333333337,.33333333333333337,.5,.5,.33333333333333337,.33333333333333337,.5,.33333333333333337,0,.6666666666666667,1,0,.6666666666666667,.33333333333333337,.5,.6666666666666667,.5,.5,.33333333333333337,.33333333333333337,0,.6666666666666667,1,.33333333333333337,.5,.5,.6666666666666667,.6666666666666667,.5,.33333333333333337,0,1,.33333333333333337,1,.33333333333333337,.6666666666666667,1,.5,.6666666666666667,.5,.6666666666666667,.6666666666666667,.5,1,.33333333333333337],ratio:{x:.6,y:.6},offset:{y:.4},encroach:{T:1,a:1,t:1,v:1,x:1}},p:{vector:[.28571428571428575,1,0,1,0,0,0,0,.7142857142857143,0,1,.2,1,.2,1,.4,.7142857142857143,.6,.7142857142857143,.6,.28571428571428575,.6,.28571428571428575,.4,.28571428571428575,.2,.28571428571428575,1,0,0,.7142857142857143,.6,.28571428571428575,.4,.5714285714285715,.4,.5714285714285715,.2,.28571428571428575,.2,0,0,1,.2,.7142857142857143,.6,.5714285714285715,.4,.5714285714285715,.2,0,0,1,.2,1,.2,.5714285714285715,.4,.7142857142857143,.3,.7142857142857143,.3,.5714285714285715,.2,1,.2],ratio:{x:.7},offset:{y:.4}},q:{vector:[0,.4,0,.2,.28571428571428575,0,1,0,1,1,.7142857142857143,1,.4285714285714286,.4,.7142857142857143,.4,.7142857142857143,.6,.7142857142857143,.6,.28571428571428575,.6,0,.4,1,0,.7142857142857143,1,.7142857142857143,.2,.4285714285714286,.4,.7142857142857143,.6,0,.4,.28571428571428575,0,1,0,.7142857142857143,.2,.28571428571428575,.3,.4285714285714286,.4,0,.4,.28571428571428575,0,.7142857142857143,.2,.4285714285714286,.2,.4285714285714286,.2,.28571428571428575,.3,0,.4,0,.4,.28571428571428575,0,.4285714285714286,.2],ratio:{x:.7},offset:{y:.4}},r:{vector:[.28571428571428575,1,0,1,0,0,0,0,.28571428571428575,0,.28571428571428575,.16666666666666669,.28571428571428575,.16666666666666669,.5714285714285715,0,1,.16666666666666669,1,.16666666666666669,1,.5,.5714285714285715,.33333333333333337,.28571428571428575,.5,.28571428571428575,1,0,0,.28571428571428575,.16666666666666669,1,.16666666666666669,.5714285714285715,.33333333333333337,.28571428571428575,.5,0,0,.28571428571428575,.16666666666666669,.28571428571428575,.16666666666666669,.5714285714285715,.33333333333333337,.28571428571428575,.5],ratio:{x:.7,y:.6},offset:{y:.4}},s:{vector:[.125,.625,0,.25,.25,0,.25,0,.8749999999999999,0,1,.25,.3125,.37499999999999994,.8749999999999999,.37499999999999994,1,.7499999999999999,1,.7499999999999999,.7499999999999999,1,.125,1,.125,1,0,.7499999999999999,.625,.7499999999999999,.25,0,1,.25,.37499999999999994,.25,1,.7499999999999999,.125,1,.625,.7499999999999999,.125,.625,.25,0,.37499999999999994,.25,1,.7499999999999999,.625,.7499999999999999,.6875,.625,.125,.625,.37499999999999994,.25,.3125,.37499999999999994,.3125,.37499999999999994,1,.7499999999999999,.6875,.625,.6875,.625,.125,.625,.3125,.37499999999999994],ratio:{x:.7,y:.6},offset:{y:.4}},t:{vector:[.33333333333333337,.2,.33333333333333337,0,.6666666666666667,0,.6666666666666667,.2,1,.2,1,.4,.6666666666666667,.4,.6666666666666667,1,.33333333333333337,1,.33333333333333337,.4,0,.4,0,.2,.33333333333333337,.2,.6666666666666667,0,.6666666666666667,.2,.6666666666666667,.2,1,.4,.6666666666666667,.4,.6666666666666667,.4,.33333333333333337,1,.33333333333333337,.4,.33333333333333337,.4,0,.2,.33333333333333337,.2,.33333333333333337,.2,.6666666666666667,.2,.6666666666666667,.4,.6666666666666667,.4,.33333333333333337,.4,.33333333333333337,.2],ratio:{x:.6},encroach:{a:1,h:1,l:1,n:1,o:1,p:1,r:1,s:1,u:1}},u:{vector:[.28571428571428575,1,0,.6666666666666667,0,0,0,0,.28571428571428575,0,.28571428571428575,.5,.7142857142857143,.6666666666666667,.7142857142857143,0,1,0,.28571428571428575,1,0,0,.28571428571428575,.5,.7142857142857143,.6666666666666667,1,0,1,1,.28571428571428575,1,.28571428571428575,.5,.4285714285714286,.6666666666666667,.4285714285714286,.6666666666666667,.7142857142857143,.6666666666666667,1,1,1,1,.28571428571428575,1,.4285714285714286,.6666666666666667],ratio:{x:.7,y:.6},offset:{y:.4},encroach:{A:1,a:.5}},v:{vector:[.6428571428571429,1,.35714285714285715,1,0,0,0,0,.28571428571428575,0,.5,.5833333333333334,.5,.5833333333333334,.7142857142857143,0,1,0,.6428571428571429,1,0,0,.5,.5833333333333334,.5,.5833333333333334,1,0,.6428571428571429,1],ratio:{x:.7,y:.6},offset:{y:.4},encroach:{a:1}},w:{vector:[.16666666666666669,1,0,.6666666666666667,0,0,0,0,.16666666666666669,0,.16666666666666669,.5,.4166666666666667,.6666666666666667,.4166666666666667,0,.5833333333333334,0,.8333333333333334,.6666666666666667,.8333333333333334,0,1,0,.16666666666666669,1,0,0,.16666666666666669,.5,.4166666666666667,.6666666666666667,.5833333333333334,0,.5833333333333334,.5,.8333333333333334,.6666666666666667,1,0,1,1,.16666666666666669,1,.16666666666666669,.5,.25,.6666666666666667,.4166666666666667,.6666666666666667,.5833333333333334,.5,.6666666666666667,.6666666666666667,.6666666666666667,.6666666666666667,.8333333333333334,.6666666666666667,1,1,1,1,.16666666666666669,1,.25,.6666666666666667,.4166666666666667,.6666666666666667,.6666666666666667,.6666666666666667,1,1,1,1,.25,.6666666666666667,.4166666666666667,.6666666666666667],ratio:{x:1.2,y:.6},offset:{y:.4}},x:{vector:[.35714285714285715,.5,0,0,.28571428571428575,0,.5,.2916666666666667,.7142857142857143,0,1,0,.6428571428571429,.5,1,1,.7142857142857143,1,.5,.7083333333333334,.28571428571428575,1,0,1,.35714285714285715,.5,.28571428571428575,0,.5,.2916666666666667,.5,.2916666666666667,1,0,.6428571428571429,.5,.6428571428571429,.5,.7142857142857143,1,.5,.7083333333333334,.5,.7083333333333334,0,1,.35714285714285715,.5,.35714285714285715,.5,.5,.2916666666666667,.6428571428571429,.5,.6428571428571429,.5,.5,.7083333333333334,.35714285714285715,.5],ratio:{x:.7,y:.6},offset:{y:.4}},y:{vector:[.28571428571428575,.5454545454545454,0,.36363636363636365,0,0,0,0,.28571428571428575,0,.28571428571428575,.2727272727272727,.7142857142857143,.36363636363636365,.7142857142857143,0,1,0,1,0,1,.8181818181818181,.7142857142857143,1,.7142857142857143,1,.28571428571428575,1,0,.8181818181818181,0,.8181818181818181,0,.7272727272727273,.28571428571428575,.7272727272727273,.28571428571428575,.5454545454545454,0,0,.28571428571428575,.2727272727272727,.7142857142857143,1,0,.8181818181818181,.28571428571428575,.7272727272727273,.28571428571428575,.5454545454545454,.28571428571428575,.2727272727272727,.4285714285714286,.36363636363636365,.7142857142857143,1,.28571428571428575,.7272727272727273,.4285714285714286,.8181818181818181,.7142857142857143,.5454545454545454,.28571428571428575,.5454545454545454,.4285714285714286,.36363636363636365,.7142857142857143,1,.4285714285714286,.8181818181818181,.5714285714285715,.8181818181818181,.7142857142857143,.5454545454545454,.4285714285714286,.36363636363636365,.7142857142857143,.36363636363636365,.7142857142857143,1,.5714285714285715,.8181818181818181,.7142857142857143,.7272727272727273,.7142857142857143,.5454545454545454,.7142857142857143,.36363636363636365,1,0,1,0,.7142857142857143,1,.7142857142857143,.7272727272727273,.7142857142857143,.7272727272727273,.7142857142857143,.5454545454545454,1,0],ratio:{x:.7,y:1.1},offset:{y:.4},encroach:{a:1}},z:{vector:[.5,.6666666666666667,0,.33333333333333337,0,0,0,0,1,0,1,.33333333333333337,.5,.33333333333333337,1,.6666666666666667,1,1,1,1,0,1,0,.6666666666666667,0,0,1,.33333333333333337,.5,.33333333333333337,1,1,0,.6666666666666667,.5,.6666666666666667,.5,.6666666666666667,0,0,.5,.33333333333333337,.5,.33333333333333337,1,1,.5,.6666666666666667],ratio:{x:.7,y:.6},offset:{y:.4}},0:{vector:[.7,.2,.3,.2,.2,0,.2,0,.8,0,1,.3,1,.3,1,.7,.8,1,.8,1,.2,1,0,.7,0,.7,0,.3,.2,0,.2,0,.3,.2,.2,.4,.7,.2,.2,0,1,.3,0,.7,.2,0,.2,.4,.8,.4,.7,.2,1,.3,0,.7,.2,.4,.2,.6,.8,.6,.8,.4,1,.3,0,.7,.2,.6,.3,.8,.7,.8,.8,.6,1,.3,.8,1,0,.7,.3,.8,.7,.8,1,.3,.8,1,.8,1,.3,.8,.7,.8]},1:{vector:[0,.3,0,.2,.5,0,.5,0,.6666666666666666,0,.6666666666666666,.8,.6666666666666666,.8,1,.8,1,1,1,1,0,1,0,.8,.3333333333333333,.3,0,.3,.5,0,1,1,0,.8,.3333333333333333,.8,.3333333333333333,.8,.3333333333333333,.3,.5,0,.6666666666666666,.8,1,1,.3333333333333333,.8,.3333333333333333,.8,.5,0,.6666666666666666,.8]},2:{vector:[.2,.3,0,.3,0,.2,0,.2,.2,0,.8,0,.8,0,1,.2,1,.5,.4,.8,1,.8,1,1,1,1,0,1,0,.8,.3,.2,.2,.3,0,.2,.4,.8,1,1,0,.8,.3,.2,0,.2,.8,0,1,.5,.4,.8,0,.8,.7,.2,.3,.2,.8,0,1,.5,0,.8,.8,.4,.8,.4,.7,.2,.8,0,.8,0,1,.5,.8,.4]},3:{vector:[.3,.2,.2,.3,0,.2,0,.2,.2,0,.8,0,.8,0,1,.2,1,.4,.9,.5,1,.6,1,.8,1,.8,.8,1,.2,1,.2,1,0,.8,.2,.7,.7,.6,.4,.6,.4,.4,.3,.2,0,.2,.8,0,.8,0,1,.4,.9,.5,.2,1,.2,.7,.3,.8,.7,.6,.4,.4,.7,.4,.7,.2,.3,.2,.8,0,.2,1,.3,.8,.7,.8,.8,.7,.7,.6,.7,.4,.8,.3,.7,.2,.8,0,1,.8,.2,1,.7,.8,.8,.7,.7,.4,.8,.3,.8,.3,.8,0,.9,.5,1,.8,.7,.8,.8,.7,.8,.7,.8,.3,.9,.5,.9,.5,1,.8,.8,.7]},4:{vector:[0,.8,0,.6,.6,0,.6,0,.8,0,.8,.6,.8,.6,1,.6,1,.8,.8,.8,.8,1,.6,1,.3,.6,.6,.6,.6,.8,.8,.6,1,.8,.8,.8,.8,.8,.6,1,.6,.3,.3,.6,.6,.8,0,.8,.6,0,.8,.6,.8,.8,.6,.3,.3,.6,0,.8,.6,0,.8,.8,.6,.3,.6,.3,0,.8,.6,0]},5:{vector:[0,0,1,0,1,.2,.2,.4,.9,.4,1,.5,1,.5,1,.8,.8,1,.8,1,.1,1,0,.9,0,.9,0,.7,.2,.7,0,0,1,.2,.2,.2,0,.9,.2,.7,.2,.8,0,.6,0,0,.2,.2,.8,1,0,.9,.2,.8,0,.6,.2,.2,.2,.4,.8,1,.2,.8,.7,.8,.8,.6,0,.6,.2,.4,.8,1,.7,.8,.8,.7,.8,.6,.2,.4,1,.5,1,.5,.8,1,.8,.7,.8,.7,.8,.6,1,.5]},6:{vector:[0,.2,.2,0,.8,0,.8,0,1,.2,1,.3,1,.3,.8,.3,.7,.2,.3,.4,.8,.4,1,.6,1,.6,1,.8,.8,1,.8,1,.2,1,0,.8,0,.8,0,.2,.2,.6,.8,0,1,.3,.7,.2,0,.8,.2,.6,.2,.7,.8,0,.7,.2,.3,.2,0,.8,.2,.7,.3,.8,0,.2,.8,0,.3,.2,.8,1,0,.8,.3,.8,0,.2,.3,.2,.2,.3,.8,1,.3,.8,.7,.8,.2,.6,0,.2,.2,.3,1,.6,.8,1,.7,.8,.2,.6,.2,.3,.3,.4,1,.6,.7,.8,.8,.7,.7,.6,.2,.6,.3,.4,1,.6,.8,.7,.7,.6,.7,.6,.3,.4,1,.6]},7:{vector:[.75,.2,0,.2,0,0,0,0,1,0,1,.2,1,.2,.5,1,.25,1,.75,.2,0,0,1,.2,1,.2,.25,1,.75,.2]},8:{vector:[.2,.3,0,.2,.2,0,.2,0,.8,0,1,.2,1,.2,1,.4,.9,.5,.9,.5,1,.6,1,.8,1,.8,.8,1,.2,1,.2,1,0,.8,0,.6,0,.6,.2,.7,.3,.8,.3,.6,.2,.7,0,.6,.1,.5,0,.4,0,.2,0,.2,.2,.3,.3,.4,.3,.2,.2,.3,.2,0,.2,1,0,.6,.3,.8,.3,.6,0,.6,.1,.5,.1,.5,0,.2,.3,.4,.7,.2,.3,.2,.2,0,.2,1,.3,.8,.7,.8,.7,.6,.3,.6,.1,.5,.1,.5,.3,.4,.7,.4,.7,.2,.2,0,1,.2,1,.8,.2,1,.7,.8,.7,.6,.1,.5,.7,.4,.8,.3,.7,.2,1,.2,1,.8,.7,.8,.8,.7,.8,.7,.7,.6,.7,.4,.7,.4,.8,.3,1,.2,.9,.5,1,.8,.8,.7,.8,.7,.7,.4,1,.2,1,.2,.9,.5,.8,.7]},9:{vector:[1,.8,.8,1,.2,1,.2,1,0,.8,0,.7,0,.7,.2,.7,.3,.8,.7,.6,.2,.6,0,.4,0,.4,0,.2,.2,0,.2,0,.8,0,1,.2,1,.2,1,.8,.8,.4,.2,1,0,.7,.3,.8,1,.2,.8,.4,.8,.3,.2,1,.3,.8,.7,.8,1,.2,.8,.3,.7,.2,1,.8,.2,1,.7,.8,.2,0,1,.2,.7,.2,1,.8,.7,.8,.8,.7,.2,0,.7,.2,.3,.2,.8,.4,1,.8,.8,.7,0,.4,.2,0,.3,.2,.8,.4,.8,.7,.7,.6,0,.4,.3,.2,.2,.3,.3,.4,.8,.4,.7,.6,0,.4,.2,.3,.3,.4,.3,.4,.7,.6,0,.4]},".":{vector:[1,1,0,1,0,0,0,0,1,0,1,1],ratio:{x:.2,y:.2},offset:{y:.8}},",":{vector:[.8,1,0,1,.2,0,.2,0,1,0,.8,1],ratio:{x:.2,y:.4},offset:{y:.8}},":":{vector:[0,0,1,0,1,.3,0,.7,1,.7,1,1,0,0,1,.3,0,.3,0,.7,1,1,0,1],ratio:{x:.2,y:.8},offset:{y:.1}},";":{vector:[.2,0,1,0,1,.3,1,.7,.8,1,0,1,.2,0,1,.3,.2,.3,1,.7,0,1,.2,.7],ratio:{x:.2,y:.8},offset:{y:.1}},"?":{vector:[.2,.2,.2,.4,0,.4,0,.4,0,.1,.1,0,.1,0,.9,0,1,.1,1,.1,1,.5,.9,.6,.6,.8,.6,1,.4,1,.4,.5,.5,.4,.8,.4,.2,.2,0,.4,.1,0,.8,.2,.2,.2,.1,0,.8,.2,.1,0,1,.1,.8,.4,.8,.2,1,.1,.8,.4,1,.1,.9,.6,.4,.5,.8,.4,.9,.6,.4,.5,.9,.6,.6,.6,.4,.5,.6,.6,.6,.7,.4,.5,.6,.7,.4,.7,.4,.8,.6,.8,.4,1],encroach:{a:2}},"!":{vector:[0,0,1,0,1,.7,0,.8,1,.8,1,1,0,0,1,.7,0,.7,0,.8,1,1,0,1],ratio:{x:.2}},"/":{vector:[.7,1,0,1,.3,0,.3,0,1,0,.7,1],ratio:{x:.25}},"\\":{vector:[0,0,.7,0,1,1,1,1,.3,1,0,0],ratio:{x:.25}},"(":{vector:[0,.5,.2,.2,.6,0,.6,0,1,0,.6,.2,.6,.8,1,1,.6,1,.6,1,.2,.8,0,.5,0,.5,.6,0,.6,.2,.4,.5,.6,.8,.6,1,0,.5,.6,.2,.4,.5,.4,.5,.6,1,0,.5],ratio:{x:.4}},")":{vector:[0,0,.4,0,.8,.2,.8,.2,1,.5,.8,.8,.8,.8,.4,1,0,1,.4,.2,0,0,.8,.2,.8,.8,0,1,.4,.8,.6,.5,.4,.2,.8,.2,.8,.2,.8,.8,.4,.8,.4,.8,.6,.5,.8,.2],ratio:{x:.4},encroach:{p:1}},"[":{vector:[0,0,1,0,1,.2,.4,.8,1,.8,1,1,0,0,1,.2,.4,.2,.4,.8,1,1,0,1,0,1,0,0,.4,.2,.4,.2,.4,.8,0,1],ratio:{x:.4}},"]":{vector:[1,1,0,1,0,.8,.6,.2,0,.2,0,0,1,1,0,.8,.6,.8,.6,.2,0,0,1,0,1,0,1,1,.6,.8,.6,.8,.6,.2,1,0],ratio:{x:.4}},"#":{vector:[.36,.4,.18,.2,.2,0,.2,0,.4,0,.38,.2,.68,.2,.7,0,.9,0,.88,.2,1,.2,1,.4,.84,.6,1,.6,1,.8,.82,.8,.8,1,.6,1,.32,.8,.3,1,.1,1,.12,.8,0,.8,0,.6,.16,.4,0,.4,0,.2,0,.2,.18,.2,.36,.4,.36,.4,.2,0,.38,.2,.68,.2,.9,0,.88,.2,.88,.2,1,.4,.86,.4,.84,.6,1,.8,.82,.8,.82,.8,.6,1,.62,.8,.32,.8,.1,1,.12,.8,.12,.8,0,.6,.14,.6,.16,.4,0,.2,.36,.4,.66,.4,.36,.4,.38,.2,.68,.2,.88,.2,.86,.4,.84,.6,.82,.8,.62,.8,.32,.8,.12,.8,.14,.6,.14,.6,.16,.4,.36,.4,.66,.4,.38,.2,.68,.2,.68,.2,.86,.4,.84,.6,.84,.6,.62,.8,.32,.8,.32,.8,.14,.6,.36,.4,.66,.4,.68,.2,.84,.6,.32,.8,.36,.4,.34,.6,.64,.6,.66,.4,.84,.6,.32,.8,.34,.6,.64,.6,.64,.6,.84,.6,.32,.8]},"-":{vector:[1,1,0,1,0,0,0,0,1,0,1,1],ratio:{x:.5,y:.2},offset:{y:.4}},_:{vector:[1,1,0,1,0,0,0,0,1,0,1,1],ratio:{y:.2},offset:{y:1}},"'":{vector:[1,1,0,1,0,0,0,0,1,0,1,1],ratio:{x:.2,y:.4}},'"':{vector:[1,0,1,1,.6,1,.4,1,0,1,0,0,1,0,.6,1,.6,0,.4,1,0,0,.4,0],ratio:{x:.5,y:.4}},"|":{vector:[1,1,0,1,0,0,0,0,1,0,1,1],ratio:{x:.2}},">":{vector:[.7,.5,0,.2,0,0,0,0,1,.4,1,.6,1,.6,0,1,0,.8,.7,.5,0,0,1,.6,1,.6,0,.8,.7,.5]},"<":{vector:[0,.4,1,0,1,.2,.3,.5,1,.8,1,1,1,1,0,.6,0,.4,0,.4,1,.2,.3,.5,.3,.5,1,1,0,.4]},"+":{vector:[.3,.3,.3,0,.7,0,.7,.3,1,.3,1,.7,.7,.7,.7,1,.3,1,.3,.7,0,.7,0,.3,.3,.3,.7,0,.7,.3,.7,.3,1,.7,.7,.7,.7,.7,.3,1,.3,.7,.3,.7,0,.3,.3,.3,.3,.3,.7,.3,.7,.7,.7,.7,.3,.7,.3,.3],ratio:{x:.5,y:.5},offset:{y:.25}},"=":{vector:[0,0,1,0,1,.3,0,.7,1,.7,1,1,0,0,1,.3,0,.3,0,.7,1,1,0,1],ratio:{x:.8,y:.5},offset:{y:.25}},"&":{vector:[.5,.2,.2,.2,.1,0,.1,0,.6,0,.7,.2,.7,.2,.7,.4,.6,.5,.6,.7,.8,.5,.9,.6,.9,.6,.9,.7,.8,.8,.8,.8,1,.8,1,1,1,1,.8,1,.6,.9,.6,.9,.5,1,.1,1,.1,1,0,.9,0,.6,0,.6,.1,.5,.2,.65,.4,.8,.2,.65,0,.4,0,.4,0,.3,.1,0,.1,0,.2,.2,.2,.3,.5,.2,.1,0,.7,.2,.7,.2,.6,.5,.4,.6,.6,.7,.9,.6,.8,.8,.8,.8,1,1,.6,.9,.1,1,0,.6,.2,.65,0,.4,.1,0,.2,.3,.5,.4,.5,.2,.7,.2,.4,.6,.6,.7,.8,.8,.8,.8,.6,.9,.1,1,.1,1,.2,.65,.2,.8,.4,.8,0,.4,.2,.3,.5,.4,.7,.2,.4,.6,.1,1,.2,.8,.4,.8,.4,.8,.2,.3,.3,.4,.3,.4,.5,.4,.4,.6,.8,.8,.1,1,.4,.8,.4,.8,.3,.4,.4,.6,.4,.6,.8,.8,.4,.8]},"*":{vector:[.4,.25,.4,0,.6,0,.6,.25,.775,.075,.925,.225,.75,.4,1,.4,1,.6,.75,.6,.925,.775,.775,.925,.6,.75,.6,1,.4,1,.4,.75,.225,.925,.075,.775,.25,.6,0,.6,0,.4,.25,.4,.075,.225,.225,.075,.4,.25,.6,0,.6,.25,.6,.25,.925,.225,.75,.4,.75,.4,1,.6,.75,.6,.75,.6,.775,.925,.6,.75,.6,.75,.4,1,.4,.75,.4,.75,.075,.775,.25,.6,.25,.6,0,.4,.25,.4,.25,.4,.225,.075,.4,.25,.4,.25,.6,.25,.75,.4,.75,.4,.75,.6,.6,.75,.6,.75,.4,.75,.25,.6,.25,.6,.25,.4,.4,.25,.4,.25,.75,.4,.6,.75,.6,.75,.25,.6,.4,.25],ratio:{x:.5,y:.5},offset:{y:.25}},"~":{vector:[.25,.5,0,.75,0,.25,0,.25,.25,0,.75,.5,.75,.5,1,.25,1,.75,1,.75,.75,1,.25,.5,.25,.5,0,.25,.75,.5,.75,.5,1,.75,.25,.5],ratio:{x:.8,y:.4},offset:{y:.25}},"%":{vector:[0,.1,.1,0,.2,0,.7,.9,.7,.8,.8,.7,.8,.7,.9,.7,1,.8,1,.8,1,.9,.9,1,0,.1,.2,0,.3,.1,.7,.9,.8,.7,1,.8,.7,.9,1,.8,.9,1,0,.1,.3,.1,.3,.2,.3,.2,.2,.3,.1,.3,.8,1,.7,.9,.9,1,0,.1,.3,.2,.1,.3,0,.1,.1,.3,0,.2,1,.2,.2,1,0,.8,0,.8,.8,0,1,.2]},"{":{vector:[.3333333333333333,.4,.3333333333333333,.1,.6666666666666666,0,.6666666666666666,0,1,0,1,.1,.6666666666666666,.2,.6666666666666666,.4,.5,.5,.5,.5,.6666666666666666,.6,.6666666666666666,.8,.6666666666666666,.8,1,.9,1,1,1,1,.6666666666666666,1,.3333333333333333,.9,.3333333333333333,.6,0,.5,.3333333333333333,.4,.6666666666666666,0,1,.1,.6666666666666666,.2,.6666666666666666,.8,1,1,.3333333333333333,.9,.3333333333333333,.6,.3333333333333333,.4,.6666666666666666,0,.6666666666666666,0,.6666666666666666,.2,.5,.5,.5,.5,.6666666666666666,.8,.3333333333333333,.9,.3333333333333333,.9,.3333333333333333,.6,.6666666666666666,0,.6666666666666666,0,.5,.5,.3333333333333333,.9],ratio:{x:.45}},"}":{vector:[0,0,.3333333333333333,0,.6666666666666666,.1,.6666666666666666,.4,1,.5,.6666666666666666,.6,.6666666666666666,.6,.6666666666666666,.9,.3333333333333333,1,.3333333333333333,1,0,1,0,.9,.3333333333333333,.8,.3333333333333333,.6,.5,.5,.5,.5,.3333333333333333,.4,.3333333333333333,.2,.3333333333333333,.2,0,.1,0,0,.6666666666666666,.4,.6666666666666666,.6,.3333333333333333,1,.3333333333333333,1,0,.9,.3333333333333333,.8,.3333333333333333,.2,0,0,.6666666666666666,.1,.6666666666666666,.1,.6666666666666666,.4,.3333333333333333,1,.3333333333333333,1,.3333333333333333,.8,.5,.5,.5,.5,.3333333333333333,.2,.6666666666666666,.1,.6666666666666666,.1,.3333333333333333,1,.5,.5],ratio:{x:.45}},"^":{vector:[.5,.6666666666666667,.33333333333333337,1,0,1,.5,0,1,1,.6666666666666667,1,.5,.6666666666666667,0,1,.5,0,.5,0,.6666666666666667,1,.5,.6666666666666667],ratio:{x:.6,y:.3}}},o.concat(["default",""]).forEach(e=>{if(null!=t.defaultThick[e]){t.defaultThick[e].top=null!=t.defaultThick[e].ratio&&null!=t.defaultThick[e].ratio.y?-t.defaultThick[e].ratio.y:-1,t.defaultThick[e].right=null!=t.defaultThick[e].ratio&&null!=t.defaultThick[e].ratio.x?t.defaultThick[e].ratio.x+.1:1.1,t.defaultThick[e].bottom=0,t.defaultThick[e].left=0;for(let n=0;n<t.defaultThick[e].vector.length;n+=2)null!=t.defaultThick[e].ratio&&(null!=t.defaultThick[e].ratio.x&&(t.defaultThick[e].vector[n]*=t.defaultThick[e].ratio.x),null!=t.defaultThick[e].ratio.y&&(t.defaultThick[e].vector[n+1]*=t.defaultThick[e].ratio.y)),null!=t.defaultThick[e].offset&&(null!=t.defaultThick[e].offset.x&&(t.defaultThick[e].vector[n]+=t.defaultThick[e].offset.x),null!=t.defaultThick[e].offset.y&&(t.defaultThick[e].vector[n+1]+=t.defaultThick[e].offset.y));for(let n=0;n<t.defaultThick[e].vector.length;n+=2)t.defaultThick[e].vector[n+1]-=1}}),t.defaultThin={loadAttempted:!0,isLoaded:!0,default:{vector:[.9,.1,.1,.1,0,0,0,1,0,0,.1,.1,.9,.1,0,0,1,0,0,1,.1,.1,.1,.9,.9,.9,.9,.1,1,0,1,1,0,1,.1,.9,.9,.9,1,0,1,1,1,1,.1,.9,.9,.9]},"":{vector:[.9,.1,.1,.1,0,0,0,1,0,0,.1,.1,.9,.1,0,0,1,0,0,1,.1,.1,.1,.9,.9,.9,.9,.1,1,0,1,1,0,1,.1,.9,.9,.9,1,0,1,1,1,1,.1,.9,.9,.9]},A:{vector:[.5,0,1,1,.9,1,.65,.5,.1,.5,.1,.4,.1,.25,.1,1,0,1,.5,0,.9,1,.65,.5,.65,.5,.1,.4,.6,.4,.1,.25,0,1,0,.2,.5,0,.65,.5,.6,.4,.25,.1,.1,.25,0,.2,.5,0,.6,.4,.45,.1,.25,.1,0,.2,.2,0,.2,0,.5,0,.45,.1,.45,.1,.25,.1,.2,0]},B:{vector:[0,1,0,0,.1,0,.75,.5,.1,.5,.1,.4,.65,.1,.1,.1,.1,0,.7,0,.9,.15,.9,.35,.825,.425,1,.6,1,.8,0,1,.1,0,.1,.9,.75,.5,.1,.4,.7,.4,.65,.1,.1,0,.7,0,.8,1,0,1,.1,.9,.9,.65,.75,.5,.7,.4,.8,.2,.65,.1,.7,0,.8,1,.1,.9,.75,.9,.8,.2,.7,0,.9,.35,1,.8,.8,1,.75,.9,.8,.3,.8,.2,.9,.35,1,.8,.75,.9,.9,.75,.7,.4,.8,.3,.9,.35,1,.8,.9,.75,.9,.65,.7,.4,.9,.35,.825,.425,.825,.425,1,.8,.9,.65,.9,.65,.7,.4,.825,.425]},C:{vector:[.8,0,1,.2,.9,.25,.75,.9,.9,.75,1,.8,.8,0,.9,.25,.75,.1,.75,.9,1,.8,.8,1,.2,0,.8,0,.75,.1,.25,.9,.75,.9,.8,1,.2,0,.75,.1,.25,.1,.25,.9,.8,1,.2,1,0,.2,.2,0,.25,.1,.1,.75,.25,.9,.2,1,0,.2,.25,.1,.1,.25,.1,.75,.2,1,0,.8,0,.8,0,.2,.1,.25,.1,.25,.1,.75,0,.8]},D:{vector:[0,1,0,0,.1,0,.75,.1,.1,.1,.1,0,0,1,.1,0,.1,.9,.75,.1,.1,0,.8,0,.8,1,0,1,.1,.9,.9,.25,.75,.1,.8,0,.8,1,.1,.9,.75,.9,.9,.25,.8,0,1,.2,1,.8,.8,1,.75,.9,.9,.75,.9,.25,1,.2,1,.8,.75,.9,.9,.75,.9,.75,1,.2,1,.8]},E:{vector:[0,0,1,0,1,.1,.1,.4,.9,.4,.9,.5,.1,.9,1,.9,1,1,0,0,1,.1,.1,.1,.1,.4,.9,.5,.1,.5,.1,.9,1,1,0,1,0,1,0,0,.1,.1,.1,.5,.1,.9,0,1,0,1,.1,.1,.1,.4,.1,.4,.1,.5,0,1]},F:{vector:[.1,1,0,1,0,0,0,0,1,0,1,.1,.1,.4,.9,.4,.9,.5,.1,.5,.1,1,0,0,0,0,1,.1,.1,.1,.1,.4,.9,.5,.1,.5,0,0,.1,.1,.1,.4,.1,.4,.1,.5,0,0]},G:{vector:[.2,0,1,0,1,.1,.85,.5,.5,.5,.5,.4,.5,.4,.9,.4,1,.5,.2,0,1,.1,.25,.1,.85,.5,.5,.4,1,.5,0,.2,.2,0,.25,.1,.9,.55,.85,.5,1,.5,0,.2,.25,.1,.1,.25,.9,.75,.9,.55,1,.5,0,.8,0,.2,.1,.25,.9,.75,1,.5,1,.8,0,.8,.1,.25,.1,.75,.75,.9,.9,.75,1,.8,.2,1,0,.8,.1,.75,.75,.9,1,.8,.8,1,.2,1,.1,.75,.25,.9,.25,.9,.75,.9,.8,1,.8,1,.2,1,.25,.9]},H:{vector:[.1,1,0,1,0,0,0,0,.1,0,.1,.4,.9,.4,.9,0,1,0,1,0,1,1,.9,1,.1,.5,.1,1,0,0,1,0,.9,1,.9,.5,.1,.5,0,0,.1,.4,.9,.4,1,0,.9,.5,.9,.5,.1,.5,.1,.4,.1,.4,.9,.4,.9,.5]},I:{vector:[.45,.1,0,.1,0,0,0,0,1,0,1,.1,.55,.9,1,.9,1,1,1,1,0,1,0,.9,0,0,1,.1,.55,.1,1,1,0,.9,.45,.9,.45,.1,0,0,.55,.1,.55,.9,1,1,.45,.9,.45,.9,.45,.1,.55,.1,.55,.1,.55,.9,.45,.9]},J:{vector:[.9,.1,.5,.1,.5,0,.8,1,0,1,0,.9,.9,.1,.5,0,1,0,.8,1,0,.9,.75,.9,.9,.75,.9,.1,1,0,1,.8,.8,1,.75,.9,.9,.75,1,0,1,.8,1,.8,.75,.9,.9,.75]},K:{vector:[.1,1,0,1,0,0,0,0,.1,0,.1,.4,.9,.2,.9,0,1,0,1,0,1,.25,.8,.45,1,.65,1,1,.9,1,.1,.5,.1,1,0,0,.9,.2,1,0,.8,.45,1,.65,.9,1,.9,.7,.1,.5,0,0,.1,.4,.7,.4,.9,.2,.8,.45,.8,.45,1,.65,.9,.7,.7,.5,.1,.5,.1,.4,.1,.4,.7,.4,.8,.45,.8,.45,.9,.7,.7,.5,.7,.5,.1,.4,.8,.45]},L:{vector:[0,1,0,0,.1,0,.1,.9,1,.9,1,1,0,1,.1,0,.1,.9,.1,.9,1,1,0,1]},M:{vector:[.1,1,0,1,0,0,0,0,.1,0,.5,.4,.5,.4,.9,0,1,0,1,0,1,1,.9,1,.1,.15,.1,1,0,0,1,0,.9,1,.9,.15,.5,.55,.1,.15,0,0,.5,.4,1,0,.9,.15,.5,.55,0,0,.5,.4,.5,.4,.9,.15,.5,.55]},N:{vector:[.1,1,0,1,0,0,0,0,.1,0,.9,.85,.9,.85,.9,0,1,0,1,0,1,1,.9,1,.1,.15,.1,1,0,0,.9,.85,1,0,.9,1,.9,1,.1,.15,0,0,0,0,.9,.85,.9,1]},O:{vector:[.75,.1,.25,.1,.2,0,0,.2,.2,0,.25,.1,.75,.1,.2,0,.8,0,0,.2,.25,.1,.1,.25,.9,.25,.75,.1,.8,0,0,.8,0,.2,.1,.25,.9,.25,.8,0,1,.2,0,.8,.1,.25,.1,.75,.9,.75,.9,.25,1,.2,.2,1,0,.8,.1,.75,.9,.75,1,.2,1,.8,.2,1,.1,.75,.25,.9,.75,.9,.9,.75,1,.8,.8,1,.2,1,.25,.9,.75,.9,1,.8,.8,1,.8,1,.25,.9,.75,.9]},P:{vector:[.1,1,0,1,0,0,.8,0,1,.2,1,.3,.8,.5,.1,.5,.1,.4,.1,.1,.1,1,0,0,.8,.5,.1,.4,.75,.4,.75,.1,.1,.1,0,0,1,.3,.8,.5,.75,.4,.75,.1,0,0,.8,0,1,.3,.75,.4,.9,.25,.9,.25,.75,.1,.8,0,.8,0,1,.3,.9,.25]},Q:{vector:[.75,.1,.25,.1,.2,0,.84,.76,1,.92,.92,1,0,.2,.2,0,.25,.1,.68,.76,.51,.59,.59,.51,.75,.1,.2,0,.8,0,.84,.76,.92,1,.76,.84,0,.2,.25,.1,.1,.25,.68,.76,.59,.51,.76,.68,.9,.25,.75,.1,.8,0,0,.8,0,.2,.1,.25,.55,.9,.68,.76,.76,.68,.9,.25,.8,0,1,.2,0,.8,.1,.25,.1,.75,.55,.9,.76,.68,.9,.55,.9,.55,.9,.25,1,.2,.2,1,0,.8,.1,.75,.9,.55,1,.2,1,.6,.2,1,.1,.75,.25,.9,.55,.9,.9,.55,1,.6,.6,1,.2,1,.25,.9,.55,.9,1,.6,.84,.76,.6,1,.25,.9,.55,.9,.55,.9,.84,.76,.76,.84,.76,.84,.6,1,.55,.9]},R:{vector:[.1,1,0,1,0,0,.8,0,1,.2,1,.3,1,.7,1,1,.9,1,.65,.5,.1,.5,.1,.4,.1,.1,.1,1,0,0,1,.7,.9,1,.9,.75,.65,.5,.1,.4,.75,.4,.75,.1,.1,.1,0,0,.8,.5,1,.7,.9,.75,.9,.75,.65,.5,.75,.4,.75,.1,0,0,.8,0,.8,.5,.9,.75,.75,.4,.9,.25,.75,.1,.8,0,1,.3,.8,.5,.75,.4,.9,.25,.8,0,1,.3,1,.3,.75,.4,.9,.25]},S:{vector:[0,.5,0,.3,.3,0,.3,0,1,0,1,.1,.6,1,0,1,0,.9,.3,0,1,.1,.35,.1,.6,1,0,.9,.55,.9,.3,0,.35,.1,.1,.35,1,.6,.6,1,.55,.9,0,.5,.3,0,.1,.35,1,.6,.55,.9,.9,.55,0,.5,.1,.35,.1,.4,1,.4,1,.6,.9,.55,.9,.5,0,.5,.1,.4,1,.4,.9,.55,.9,.5,.9,.5,.1,.4,1,.4]},T:{vector:[.45,.1,0,.1,0,0,0,0,1,0,1,.1,.55,.1,.55,1,.45,1,0,0,1,.1,.55,.1,.55,.1,.45,1,.45,.1,.45,.1,0,0,.55,.1],encroach:{t:1}},U:{vector:[0,.8,0,0,.1,0,.9,.75,.9,0,1,0,0,.8,.1,0,.1,.75,.9,.75,1,0,1,.8,.2,1,0,.8,.1,.75,.75,.9,.9,.75,1,.8,.2,1,.1,.75,.25,.9,.75,.9,1,.8,.8,1,.8,1,.2,1,.25,.9,.25,.9,.75,.9,.8,1]},V:{vector:[.55,1,.45,1,0,0,0,0,.1,0,.5,.85,.5,.85,.9,0,1,0,.55,1,0,0,.5,.85,.5,.85,1,0,.55,1]},W:{vector:[.1,1,0,1,0,0,0,0,.1,0,.1,.85,.9,.85,.9,0,1,0,1,0,1,1,.9,1,.1,1,0,0,.1,.85,.9,.85,1,0,.9,1,.5,.55,.1,1,.1,.85,.5,.4,.9,.85,.9,1,.5,.55,.1,.85,.5,.4,.5,.4,.9,1,.5,.55]},X:{vector:[.44,.5,0,0,.12,0,.5,.44,.88,0,1,0,.56,.5,1,1,.88,1,.5,.56,.12,1,0,1,.44,.5,.12,0,.5,.44,.5,.44,1,0,.56,.5,.56,.5,.88,1,.5,.56,.5,.56,0,1,.44,.5,.44,.5,.5,.44,.56,.5,.56,.5,.5,.56,.44,.5]},Y:{vector:[.42,.42,0,0,.15,0,.5,.35,.85,0,1,0,1,0,0,1,0,.85,.42,.42,.15,0,.5,.35,.5,.35,1,0,0,.85,0,.85,.42,.42,.5,.35]},Z:{vector:[.85,.1,0,.1,0,0,0,0,1,0,1,.1,.15,.9,1,.9,1,1,1,1,0,1,0,.9,.85,.1,0,0,1,.1,.15,.9,1,1,0,.9,0,.9,.85,.1,1,.1,1,.1,.15,.9,0,.9]},a:{vector:[0,.6666666666666667,0,.33333333333333337,.28571428571428575,0,.28571428571428575,0,.5714285714285715,0,.8571428571428572,.33333333333333337,.8571428571428572,.8333333333333334,1,1,.7142857142857143,1,.35714285714285715,.8333333333333334,.7142857142857143,.8333333333333334,.7142857142857143,1,.8571428571428572,.33333333333333337,.8571428571428572,.8333333333333334,.7142857142857143,1,.35714285714285715,.8333333333333334,.7142857142857143,1,.28571428571428575,1,.8571428571428572,.33333333333333337,.7142857142857143,1,.7142857142857143,.4166666666666667,.14285714285714288,.5833333333333334,.35714285714285715,.8333333333333334,.28571428571428575,1,.8571428571428572,.33333333333333337,.7142857142857143,.4166666666666667,.5,.16666666666666669,.14285714285714288,.5833333333333334,.28571428571428575,1,0,.6666666666666667,.28571428571428575,0,.8571428571428572,.33333333333333337,.5,.16666666666666669,.14285714285714288,.4166666666666667,.14285714285714288,.5833333333333334,0,.6666666666666667,.28571428571428575,0,.5,.16666666666666669,.35714285714285715,.16666666666666669,.14285714285714288,.4166666666666667,0,.6666666666666667,.28571428571428575,0,.28571428571428575,0,.35714285714285715,.16666666666666669,.14285714285714288,.4166666666666667],ratio:{x:.7,y:.6},offset:{y:.4},encroach:{f:1}},b:{vector:[0,1,0,0,.16666666666666669,0,.5833333333333334,.5,.16666666666666669,.5,.16666666666666669,.4,.6666666666666667,.4,1,.6,1,.8,0,1,.16666666666666669,0,.16666666666666669,.9,.5833333333333334,.5,.16666666666666669,.4,.6666666666666667,.4,.6666666666666667,1,0,1,.16666666666666669,.9,.8333333333333334,.65,.5833333333333334,.5,.6666666666666667,.4,.6666666666666667,1,.16666666666666669,.9,.5833333333333334,.9,.8333333333333334,.65,.6666666666666667,.4,1,.8,1,.8,.6666666666666667,1,.5833333333333334,.9,.8333333333333334,.75,.8333333333333334,.65,1,.8,1,.8,.5833333333333334,.9,.8333333333333334,.75],ratio:{x:.6}},c:{vector:[0,.6666666666666667,0,.33333333333333337,.33333333333333337,0,.33333333333333337,0,1,0,1,.16666666666666669,.4166666666666667,.8333333333333334,1,.8333333333333334,1,1,.33333333333333337,0,1,.16666666666666669,.4166666666666667,.16666666666666669,.4166666666666667,.8333333333333334,1,1,.33333333333333337,1,.33333333333333337,0,.4166666666666667,.16666666666666669,.16666666666666669,.4166666666666667,.16666666666666669,.5833333333333334,.4166666666666667,.8333333333333334,.33333333333333337,1,0,.6666666666666667,.33333333333333337,0,.16666666666666669,.4166666666666667,.16666666666666669,.5833333333333334,.33333333333333337,1,0,.6666666666666667,0,.6666666666666667,.16666666666666669,.4166666666666667,.16666666666666669,.5833333333333334],ratio:{x:.6,y:.6},offset:{y:.4}},d:{vector:[.8333333333333334,.9,.8333333333333334,0,1,0,.33333333333333337,1,0,.8,0,.6,.33333333333333337,.4,.8333333333333334,.4,.8333333333333334,.5,.8333333333333334,.9,1,0,1,1,.33333333333333337,.4,.8333333333333334,.5,.4166666666666667,.5,.4166666666666667,.9,.8333333333333334,.9,1,1,0,.6,.33333333333333337,.4,.4166666666666667,.5,.4166666666666667,.9,1,1,.33333333333333337,1,0,.6,.4166666666666667,.5,.16666666666666669,.65,.16666666666666669,.75,.4166666666666667,.9,.33333333333333337,1,0,.6,.16666666666666669,.65,.16666666666666669,.75,.16666666666666669,.75,.33333333333333337,1,0,.6],ratio:{x:.6},encroach:{c:1}},e:{vector:[0,.75,0,.25,.25,0,.25,0,.75,0,1,.25,1,.5833333333333334,.16666666666666669,.5833333333333334,.16666666666666669,.4166666666666667,.6666666666666667,.8333333333333334,.75,.75,1,.75,1,.75,.75,1,.25,1,1,.5833333333333334,.16666666666666669,.4166666666666667,.8333333333333334,.4166666666666667,.6666666666666667,.8333333333333334,1,.75,.25,1,1,.25,1,.5833333333333334,.8333333333333334,.4166666666666667,.33333333333333337,.8333333333333334,.6666666666666667,.8333333333333334,.25,1,1,.25,.8333333333333334,.4166666666666667,.8333333333333334,.33333333333333337,.16666666666666669,.6666666666666667,.33333333333333337,.8333333333333334,.25,1,1,.25,.8333333333333334,.33333333333333337,.6666666666666667,.16666666666666669,.16666666666666669,.6666666666666667,.25,1,0,.75,.25,0,1,.25,.6666666666666667,.16666666666666669,.16666666666666669,.33333333333333337,.16666666666666669,.6666666666666667,0,.75,.25,0,.6666666666666667,.16666666666666669,.33333333333333337,.16666666666666669,.16666666666666669,.33333333333333337,0,.75,.25,0,.25,0,.33333333333333337,.16666666666666669,.16666666666666669,.33333333333333337],ratio:{x:.6,y:.6},offset:{y:.4}},f:{vector:[.4,.4,.4,.15,.7,0,.7,0,1,0,1,.1,.6,.4,1,.4,1,.5,.6,.5,.6,1,.4,1,.4,.5,0,.5,0,.4,.7,0,1,.1,.8,.1,.6,.4,1,.5,.6,.5,.6,.5,.4,1,.4,.5,.4,.5,0,.4,.4,.4,.7,0,.8,.1,.6,.2,.6,.4,.6,.5,.4,.5,.4,.5,.4,.4,.7,0,.6,.2,.6,.4,.4,.5,.4,.5,.7,0,.6,.2],ratio:{x:.5},encroach:{e:1}},g:{vector:[0,.364,0,.182,.333,0,.333,0,.667,0,1,.182,1,.818,.667,1,.333,1,.333,1,0,.818,0,.727,0,.727,.167,.727,.167,.773,.417,.455,.833,.455,.833,.545,.333,1,0,.727,.167,.773,.417,.455,.833,.545,.333,.545,.333,1,.167,.773,.417,.909,.167,.318,.417,.455,.333,.545,.333,1,.417,.909,.583,.909,.167,.318,.333,.545,0,.364,1,.818,.333,1,.583,.909,.167,.227,.167,.318,0,.364,1,.818,.583,.909,.833,.773,.167,.227,0,.364,.333,0,1,.182,1,.818,.833,.773,.417,.091,.167,.227,.333,0,1,.182,.833,.773,.833,.227,.583,.091,.417,.091,.333,0,1,.182,.833,.227,.583,.091,.583,.091,.333,0,1,.182],ratio:{x:.6,y:1.1},offset:{y:.4},encroach:{f:1}},h:{vector:[.16666666666666669,1,0,1,0,0,0,0,.16666666666666669,0,.16666666666666669,.4,1,.6,1,1,.8333333333333334,1,.16666666666666669,.5,.16666666666666669,1,0,0,1,.6,.8333333333333334,1,.8333333333333334,.65,.16666666666666669,.5,0,0,.16666666666666669,.4,.6666666666666667,.4,1,.6,.8333333333333334,.65,.5833333333333334,.5,.16666666666666669,.5,.16666666666666669,.4,.6666666666666667,.4,.8333333333333334,.65,.5833333333333334,.5,.5833333333333334,.5,.16666666666666669,.4,.6666666666666667,.4],ratio:{x:.6}},i:{vector:[0,0,1,0,1,.22222222222222224,0,.3333333333333333,1,.3333333333333333,1,1,0,0,1,.22222222222222224,0,.22222222222222224,0,.3333333333333333,1,1,0,1],ratio:{x:.1,y:.9},offset:{y:.1}},j:{vector:[.6666666666666667,0,1,0,1,.18181818181818182,.6666666666666667,.2727272727272727,1,.2727272727272727,1,.8636363636363635,1,.8636363636363635,.5,1,0,1,0,1,0,.9090909090909091,.33333333333333337,.9090909090909091,.6666666666666667,0,1,.18181818181818182,.6666666666666667,.18181818181818182,1,.8636363636363635,0,1,.33333333333333337,.9090909090909091,1,.8636363636363635,.33333333333333337,.9090909090909091,.6666666666666667,.8181818181818181,.6666666666666667,.2727272727272727,1,.8636363636363635,.6666666666666667,.8181818181818181],ratio:{x:.3,y:1.1},offset:{y:.1},encroach:{A:1,B:1,C:1,D:1,E:1,F:1,G:1,H:1,I:1,J:1,L:1,K:1,M:1,N:1,O:1,P:1,Q:1,R:1,S:1,T:1,U:1,V:1,W:1,X:1,Y:1,Z:1,a:2,b:1,c:1,d:1,e:1,f:1,h:1,i:1,k:1,l:1,n:1,m:1,o:1,p:1,r:1,s:1,t:1,u:1,v:1,w:1,x:1,z:1}},k:{vector:[.16666666666666669,1,0,1,0,0,0,0,.16666666666666669,0,.16666666666666669,.4,.16666666666666669,.4,1,.4,1,.5,.6666666666666667,.5,1,1,.8333333333333334,1,.16666666666666669,.5,.16666666666666669,1,0,0,.16666666666666669,.4,1,.5,.6666666666666667,.5,.6666666666666667,.5,.8333333333333334,1,.5,.5,.16666666666666669,.5,0,0,.16666666666666669,.4,.16666666666666669,.4,.6666666666666667,.5,.5,.5,.5,.5,.16666666666666669,.5,.16666666666666669,.4],ratio:{x:.6}},l:{vector:[0,.8,0,0,.25,0,.625,.9,1,.9,1,1,1,1,.5,1,0,.8,0,.8,.25,0,.25,.75,.625,.9,1,1,0,.8,0,.8,.25,.75,.625,.9],ratio:{x:.4}},m:{vector:[.09090909090909091,1,0,1,0,0,0,0,.36363636363636365,0,.45454545454545453,.16666666666666669,.45454545454545453,.16666666666666669,.45454545454545453,0,.8181818181818181,0,1,.33333333333333337,1,1,.9090909090909091,1,.5454545454545454,.16666666666666669,.5454545454545454,1,.45454545454545453,1,.09090909090909091,.16666666666666669,.09090909090909091,1,0,0,1,.33333333333333337,.9090909090909091,1,.9090909090909091,.4166666666666667,.5454545454545454,.16666666666666669,.45454545454545453,1,.45454545454545453,.4166666666666667,.3181818181818181,.16666666666666669,.09090909090909091,.16666666666666669,0,0,.8181818181818181,0,1,.33333333333333337,.9090909090909091,.4166666666666667,.3181818181818181,.16666666666666669,0,0,.45454545454545453,.16666666666666669,.8181818181818181,0,.9090909090909091,.4166666666666667,.7727272727272726,.16666666666666669,.45454545454545453,.4166666666666667,.3181818181818181,.16666666666666669,.45454545454545453,.16666666666666669,.8181818181818181,0,.7727272727272726,.16666666666666669,.5454545454545454,.16666666666666669,.5454545454545454,.16666666666666669,.45454545454545453,.4166666666666667,.45454545454545453,.16666666666666669,.45454545454545453,.16666666666666669,.8181818181818181,0,.5454545454545454,.16666666666666669],ratio:{x:1.1,y:.6},offset:{y:.4}},n:{vector:[.16666666666666669,1,0,1,0,0,1,.33333333333333337,1,1,.8333333333333334,1,.16666666666666669,.16666666666666669,.16666666666666669,1,0,0,1,.33333333333333337,.8333333333333334,1,.8333333333333334,.4166666666666667,.5833333333333334,.16666666666666669,.16666666666666669,.16666666666666669,0,0,.6666666666666667,0,1,.33333333333333337,.8333333333333334,.4166666666666667,.5833333333333334,.16666666666666669,0,0,.6666666666666667,0,.6666666666666667,0,.8333333333333334,.4166666666666667,.5833333333333334,.16666666666666669],ratio:{x:.6,y:.6},offset:{y:.4}},o:{vector:[.5833333333333334,.16666666666666669,.4166666666666667,.16666666666666669,.33333333333333337,0,.33333333333333337,0,.6666666666666667,0,1,.33333333333333337,1,.33333333333333337,1,.6666666666666667,.6666666666666667,1,.6666666666666667,1,.33333333333333337,1,0,.6666666666666667,0,.6666666666666667,0,.33333333333333337,.33333333333333337,0,.33333333333333337,0,.4166666666666667,.16666666666666669,.16666666666666669,.4166666666666667,.5833333333333334,.16666666666666669,.33333333333333337,0,1,.33333333333333337,0,.6666666666666667,.33333333333333337,0,.16666666666666669,.4166666666666667,.8333333333333334,.4166666666666667,.5833333333333334,.16666666666666669,1,.33333333333333337,0,.6666666666666667,.16666666666666669,.4166666666666667,.16666666666666669,.5833333333333334,.8333333333333334,.5833333333333334,.8333333333333334,.4166666666666667,1,.33333333333333337,0,.6666666666666667,.16666666666666669,.5833333333333334,.4166666666666667,.8333333333333334,.8333333333333334,.5833333333333334,1,.33333333333333337,.6666666666666667,1,.6666666666666667,1,0,.6666666666666667,.4166666666666667,.8333333333333334,.5833333333333334,.8333333333333334,.8333333333333334,.5833333333333334,.6666666666666667,1,.6666666666666667,1,.4166666666666667,.8333333333333334,.5833333333333334,.8333333333333334],ratio:{x:.6,y:.6},offset:{y:.4}},p:{vector:[.16666666666666669,1,0,1,0,0,.6666666666666667,0,1,.2,1,.4,.6666666666666667,.6,.16666666666666669,.6,.16666666666666669,.5,.16666666666666669,.1,.16666666666666669,1,0,0,.6666666666666667,.6,.16666666666666669,.5,.5833333333333334,.5,.5833333333333334,.1,.16666666666666669,.1,0,0,1,.4,.6666666666666667,.6,.5833333333333334,.5,.5833333333333334,.1,0,0,.6666666666666667,0,1,.4,.5833333333333334,.5,.8333333333333334,.35,.8333333333333334,.25,.5833333333333334,.1,.6666666666666667,0,1,.4,.8333333333333334,.35,.8333333333333334,.25,.8333333333333334,.25,.6666666666666667,0,1,.4],ratio:{x:.6},offset:{y:.4}},q:{vector:[1,0,1,1,.8333333333333334,1,.4166666666666667,.5,.8333333333333334,.5,.8333333333333334,.6,.33333333333333337,.6,0,.4,0,.2,1,0,.8333333333333334,1,.8333333333333334,.1,.4166666666666667,.5,.8333333333333334,.6,.33333333333333337,.6,.33333333333333337,0,1,0,.8333333333333334,.1,.16666666666666669,.35,.4166666666666667,.5,.33333333333333337,.6,.33333333333333337,0,.8333333333333334,.1,.4166666666666667,.1,.16666666666666669,.35,.33333333333333337,.6,0,.2,0,.2,.33333333333333337,0,.4166666666666667,.1,.16666666666666669,.25,.16666666666666669,.35,0,.2,0,.2,.4166666666666667,.1,.16666666666666669,.25],ratio:{x:.6},offset:{y:.4}},r:{vectorratio:{x:.6,y:.6},offset:{y:.4}},s:{vector:[0,.5833333333333334,0,.33333333333333337,.33333333333333337,0,.33333333333333337,0,1,0,1,.16666666666666669,1,.4166666666666667,1,.6666666666666667,.6666666666666667,1,.6666666666666667,1,0,1,0,.8333333333333334,.33333333333333337,0,1,.16666666666666669,.4166666666666667,.16666666666666669,.6666666666666667,1,0,.8333333333333334,.5833333333333334,.8333333333333334,.33333333333333337,0,.4166666666666667,.16666666666666669,.16666666666666669,.4166666666666667,.6666666666666667,1,.5833333333333334,.8333333333333334,.8333333333333334,.5833333333333334,0,.5833333333333334,.33333333333333337,0,.16666666666666669,.4166666666666667,1,.4166666666666667,.6666666666666667,1,.8333333333333334,.5833333333333334,.8333333333333334,.5833333333333334,0,.5833333333333334,.16666666666666669,.4166666666666667,.16666666666666669,.4166666666666667,1,.4166666666666667,.8333333333333334,.5833333333333334],ratio:{x:.6,y:.6},offset:{y:.4},encroach:{r:1}},t:{vector:[.4,.4,.4,0,.6,0,.6,.4,1,.4,1,.5,.6,.5,.6,1,.4,1,.4,.5,0,.5,0,.4,.4,.4,.6,0,.6,.4,.6,.4,1,.5,.6,.5,.6,.5,.4,1,.4,.5,.4,.5,0,.4,.4,.4,.4,.4,.6,.4,.6,.5,.6,.5,.4,.5,.4,.4],ratio:{x:.5},encroach:{l:1}},u:{vector:[0,.6666666666666667,0,0,.16666666666666669,0,.8333333333333334,.8333333333333334,.8333333333333334,0,1,0,0,.6666666666666667,.16666666666666669,0,.16666666666666669,.5833333333333334,.8333333333333334,.8333333333333334,1,0,1,1,.33333333333333337,1,0,.6666666666666667,.16666666666666669,.5833333333333334,.4166666666666667,.8333333333333334,.8333333333333334,.8333333333333334,1,1,.33333333333333337,1,.16666666666666669,.5833333333333334,.4166666666666667,.8333333333333334,.4166666666666667,.8333333333333334,1,1,.33333333333333337,1],ratio:{x:.6,y:.6},offset:{y:.4},encroach:{a:1}},v:{vector:[.5833333333333334,1,.4166666666666667,1,0,0,0,0,.16666666666666669,0,.5,.75,.5,.75,.8333333333333334,0,1,0,.5833333333333334,1,0,0,.5,.75,.5,.75,1,0,.5833333333333334,1],ratio:{x:.6,y:.6},offset:{y:.4}},w:{vector:[0,.6666666666666667,0,0,.09090909090909091,0,.45454545454545453,.8333333333333334,.45454545454545453,0,.5454545454545454,0,.9090909090909091,.8333333333333334,.9090909090909091,0,1,0,1,1,.6363636363636362,1,.5454545454545454,.8333333333333334,.5454545454545454,.8333333333333334,.5454545454545454,1,.18181818181818182,1,0,.6666666666666667,.09090909090909091,0,.09090909090909091,.5833333333333334,.45454545454545453,.8333333333333334,.5454545454545454,0,.5454545454545454,.5833333333333334,.9090909090909091,.8333333333333334,1,0,1,1,.18181818181818182,1,0,.6666666666666667,.09090909090909091,.5833333333333334,.6818181818181818,.8333333333333334,.9090909090909091,.8333333333333334,1,1,.18181818181818182,1,.09090909090909091,.5833333333333334,.22727272727272727,.8333333333333334,.6818181818181818,.8333333333333334,1,1,.5454545454545454,.8333333333333334,.18181818181818182,1,.22727272727272727,.8333333333333334,.45454545454545453,.8333333333333334,.5454545454545454,.5833333333333334,.6818181818181818,.8333333333333334,.5454545454545454,.8333333333333334,.5454545454545454,.8333333333333334,.18181818181818182,1,.45454545454545453,.8333333333333334,.45454545454545453,.8333333333333334,.5454545454545454,.5833333333333334,.5454545454545454,.8333333333333334],ratio:{x:1.1,y:.6},offset:{y:.4}},x:{vector:[.38833333333333336,.5,0,0,.20833333333333334,0,.5,.375,.7916666666666666,0,1,0,.61,.5,1,1,.7916666666666666,1,.5,.625,.20833333333333334,1,0,1,.38833333333333336,.5,.20833333333333334,0,.5,.375,.5,.375,1,0,.61,.5,.61,.5,.7916666666666666,1,.5,.625,.5,.625,0,1,.38833333333333336,.5,.38833333333333336,.5,.5,.375,.61,.5,.61,.5,.5,.625,.38833333333333336,.5],ratio:{x:.6,y:.6},offset:{y:.4}},y:{vector:[0,.36363636363636365,0,0,.16666666666666669,0,.8333333333333334,.45454545454545453,.8333333333333334,0,1,0,1,.8181818181818181,.6666666666666667,1,.33333333333333337,1,.33333333333333337,1,0,.8181818181818181,0,.7272727272727273,0,.7272727272727273,.16666666666666669,.7272727272727273,.16666666666666669,.7727272727272726,0,.36363636363636365,.16666666666666669,0,.16666666666666669,.3181818181818181,.8333333333333334,.45454545454545453,1,0,1,.8181818181818181,.33333333333333337,1,0,.7272727272727273,.16666666666666669,.7727272727272726,.33333333333333337,.5454545454545454,0,.36363636363636365,.16666666666666669,.3181818181818181,.33333333333333337,1,.16666666666666669,.7727272727272726,.4166666666666667,.9090909090909091,.33333333333333337,.5454545454545454,.16666666666666669,.3181818181818181,.4166666666666667,.45454545454545453,.33333333333333337,1,.4166666666666667,.9090909090909091,.5833333333333334,.9090909090909091,.8333333333333334,.5454545454545454,.33333333333333337,.5454545454545454,.4166666666666667,.45454545454545453,1,.8181818181818181,.33333333333333337,1,.5833333333333334,.9090909090909091,.8333333333333334,.5454545454545454,.4166666666666667,.45454545454545453,.8333333333333334,.45454545454545453,1,.8181818181818181,.5833333333333334,.9090909090909091,.8333333333333334,.7727272727272726,.8333333333333334,.5454545454545454,.8333333333333334,.45454545454545453,1,.8181818181818181,1,.8181818181818181,.8333333333333334,.7727272727272726,.8333333333333334,.5454545454545454],ratio:{x:.6,y:1.1},offset:{y:.4}},z:{vector:[.75,.16666666666666669,0,.16666666666666669,0,0,0,0,1,0,1,.16666666666666669,.25,.8333333333333334,1,.8333333333333334,1,1,1,1,0,1,0,.8333333333333334,.75,.16666666666666669,0,0,1,.16666666666666669,.25,.8333333333333334,1,1,0,.8333333333333334,0,.8333333333333334,.75,.16666666666666669,1,.16666666666666669,1,.16666666666666669,.25,.8333333333333334,0,.8333333333333334],ratio:{x:.6,y:.6},offset:{y:.4}},0:{vector:[.6875,.1,.3125,.1,.25,0,0,.2,.25,0,.3125,.1,.6875,.1,.25,0,.7499999999999999,0,0,.2,.3125,.1,.125,.25,.8749999999999999,.25,.6875,.1,.7499999999999999,0,0,.8,0,.2,.125,.25,.8749999999999999,.25,.7499999999999999,0,1,.2,0,.8,.125,.25,.125,.75,.8749999999999999,.75,.8749999999999999,.25,1,.2,.25,1,0,.8,.125,.75,.8749999999999999,.75,1,.2,1,.8,.25,1,.125,.75,.3125,.9,.6875,.9,.8749999999999999,.75,1,.8,.7499999999999999,1,.25,1,.3125,.9,.6875,.9,1,.8,.7499999999999999,1,.7499999999999999,1,.3125,.9,.6875,.9],ratio:{x:.8}},1:{vector:[.4,.1,0,.1,0,0,.6,.9,1,.9,1,1,1,1,0,1,0,.9,.4,.1,0,0,.6,0,1,1,0,.9,.4,.9,.4,.9,.4,.1,.6,0,.6,.9,1,1,.4,.9,.4,.9,.6,0,.6,.9],ratio:{x:.5}},2:{vector:[.09999999999999999,.26,0,.2,.25,0,.7499999999999999,0,1,.2,1,.5,.25,.9,1,.9,1,1,1,1,0,1,0,.9,.3125,.1,.09999999999999999,.26,.25,0,.25,.9,1,1,0,.9,.6875,.1,.3125,.1,.25,0,1,.5,.25,.9,0,.9,.6875,.1,.25,0,.7499999999999999,0,1,.5,0,.9,.8749999999999999,.45,.8749999999999999,.25,.6875,.1,.7499999999999999,0,1,.5,.8749999999999999,.45,.8749999999999999,.25,.8749999999999999,.25,.7499999999999999,0,1,.5],ratio:{x:.8}},3:{vector:[.3125,.1,.09999999999999999,.26,0,.2,.7499999999999999,0,1,.2,1,.4,.8749999999999999,.5,1,.6,1,.8,.25,1,0,.8,.09999999999999999,.74,.7499999999999999,.55,.37499999999999994,.55,.37499999999999994,.45,.3125,.1,0,.2,.25,0,.25,1,.09999999999999999,.74,.3125,.9,.7499999999999999,.55,.37499999999999994,.45,.7499999999999999,.45,.6875,.1,.3125,.1,.25,0,.7499999999999999,1,.25,1,.3125,.9,.8749999999999999,.65,.7499999999999999,.55,.7499999999999999,.45,.6875,.1,.25,0,.7499999999999999,0,.7499999999999999,1,.3125,.9,.6875,.9,.8749999999999999,.25,.6875,.1,.7499999999999999,0,1,.8,.7499999999999999,1,.6875,.9,.8749999999999999,.25,.7499999999999999,0,1,.4,1,.8,.6875,.9,.8749999999999999,.75,.8749999999999999,.35,.8749999999999999,.25,1,.4,1,.8,.8749999999999999,.75,.8749999999999999,.65,.7499999999999999,.45,.8749999999999999,.35,1,.4,.8749999999999999,.5,1,.8,.8749999999999999,.65,.7499999999999999,.45,1,.4,.8749999999999999,.5,.8749999999999999,.5,.8749999999999999,.65,.7499999999999999,.45],ratio:{x:.8}},4:{vector:[0,.3,0,0,.125,0,.8749999999999999,.4,.8749999999999999,0,1,0,1,0,1,1,.8749999999999999,1,0,.3,.125,0,.125,.25,1,0,.8749999999999999,1,.8749999999999999,.5,.25,.5,0,.3,.125,.25,.8749999999999999,.4,1,0,.8749999999999999,.5,.25,.5,.125,.25,.3125,.4,.3125,.4,.8749999999999999,.4,.8749999999999999,.5,.8749999999999999,.5,.25,.5,.3125,.4],ratio:{x:.8}},5:{vector:[0,0,1,0,1,.1,.125,.4,.8749999999999999,.4,1,.5,1,.5,1,.8,.7499999999999999,1,.7499999999999999,1,0,1,0,.9,0,0,1,.1,.125,.1,.7499999999999999,1,0,.9,.6875,.9,0,.5,0,0,.125,.1,.7499999999999999,1,.6875,.9,.8749999999999999,.75,0,.5,.125,.1,.125,.4,1,.5,.7499999999999999,1,.8749999999999999,.75,.8125,.5,0,.5,.125,.4,1,.5,.8749999999999999,.75,.8749999999999999,.55,.8125,.5,.125,.4,1,.5,1,.5,.8749999999999999,.55,.8125,.5],ratio:{x:.8}},6:{vector:[.25,0,1,0,1,.1,.8125,.5,.125,.5,.125,.4,.125,.4,.8749999999999999,.4,1,.5,1,.5,1,.8,.7499999999999999,1,.25,0,1,.1,.3125,.1,.8125,.5,.125,.4,1,.5,0,.2,.25,0,.3125,.1,.8749999999999999,.55,.8125,.5,1,.5,0,.2,.3125,.1,.125,.25,.8749999999999999,.75,.8749999999999999,.55,1,.5,0,.8,0,.2,.125,.25,.8749999999999999,.75,1,.5,.7499999999999999,1,0,.8,.125,.25,.125,.75,.6875,.9,.8749999999999999,.75,.7499999999999999,1,.25,1,0,.8,.125,.75,.3125,.9,.6875,.9,.7499999999999999,1,.25,1,.125,.75,.3125,.9,.3125,.9,.7499999999999999,1,.25,1],ratio:{x:.8}},7:{vector:[.825,.1,0,.1,0,0,0,0,1,0,1,.1,1,.1,.15,1,0,1,.825,.1,0,0,1,.1,1,.1,0,1,.825,.1],ratio:{x:.8}},8:{vector:[.8125,.1,.18749999999999997,.1,.125,0,.125,0,.8749999999999999,0,1,.1,1,.1,1,.35,.8749999999999999,.45,.8749999999999999,.45,1,.55,1,.8,.25,1,0,.8,0,.55,0,.55,.125,.45,.25,.5,.7499999999999999,.5,.25,.5,.125,.45,.125,.45,0,.35,0,.1,0,.1,.125,0,.18749999999999997,.1,.8125,.1,.125,0,1,.1,0,.55,.25,.5,.125,.6,0,.1,.18749999999999997,.1,.125,.15,.8749999999999999,.15,.8125,.1,1,.1,0,.55,.125,.6,.125,.75,0,.1,.125,.15,.125,.3,.8749999999999999,.3,.8749999999999999,.15,1,.1,.25,1,0,.55,.125,.75,.125,.45,0,.1,.125,.3,.8749999999999999,.3,1,.1,.8749999999999999,.45,.25,1,.125,.75,.3125,.9,.125,.45,.125,.3,.25,.4,.7499999999999999,.4,.8749999999999999,.3,.8749999999999999,.45,.7499999999999999,1,.25,1,.3125,.9,.7499999999999999,.5,.125,.45,.25,.4,.25,.4,.7499999999999999,.4,.8749999999999999,.45,.7499999999999999,1,.3125,.9,.6875,.9,.7499999999999999,.5,.25,.4,.8749999999999999,.45,1,.8,.7499999999999999,1,.6875,.9,.8749999999999999,.6,.7499999999999999,.5,.8749999999999999,.45,1,.8,.6875,.9,.8749999999999999,.75,.8749999999999999,.6,.8749999999999999,.45,1,.8,1,.8,.8749999999999999,.75,.8749999999999999,.6],ratio:{x:.8}},9:{vector:[0,.4,0,.2,.25,0,.625,1,0,1,0,.9,.15,.4,.8749999999999999,.4,.8749999999999999,.5,.8749999999999999,.5,.125,.5,0,.4,.625,1,0,.9,.5625,.9,.15,.4,.8749999999999999,.5,0,.4,1,.7,.625,1,.5625,.9,.125,.35,.15,.4,0,.4,1,.7,.5625,.9,.8749999999999999,.65,.125,.25,.125,.35,0,.4,1,.2,1,.7,.8749999999999999,.65,.125,.25,0,.4,.25,0,1,.2,.8749999999999999,.65,.8749999999999999,.25,.3125,.1,.125,.25,.25,0,.7499999999999999,0,1,.2,.8749999999999999,.25,.6875,.1,.3125,.1,.25,0,.7499999999999999,0,.8749999999999999,.25,.6875,.1,.6875,.1,.25,0,.7499999999999999,0],ratio:{x:.8}},".":{vector:[1,1,0,1,0,0,0,0,1,0,1,1],ratio:{x:.1,y:.1},offset:{y:.9}},",":{vector:[1,1,0,1,0,0,0,0,1,0,1,1],ratio:{x:.1,y:.2},offset:{y:.9}},":":{vector:[0,0,1,0,1,.25,0,.5,1,.5,1,.7499999999999999,0,0,1,.25,0,.25,0,.5,1,.7499999999999999,0,.7499999999999999],ratio:{x:.1,y:.8},offset:{y:.2}},";":{vector:[0,0,1,0,1,.2,0,.7,1,.7,1,.9,0,0,1,.2,0,.2,0,.7,1,.9,0,.9],ratio:{x:.1},offset:{y:.2}},"?":{vector:[.1142857142857143,.25,0,.2,.28571428571428575,0,.7142857142857143,0,1,.2,1,.4,1,.4,.7142857142857143,.6,.5714285714285715,.6,.5714285714285715,.6,.5714285714285715,.7,.4285714285714286,.7,.4285714285714286,.8,.5714285714285715,.8,.5714285714285715,1,.35714285714285715,.1,.1142857142857143,.25,.28571428571428575,0,.4285714285714286,.8,.5714285714285715,1,.4285714285714286,1,.6428571428571429,.1,.35714285714285715,.1,.28571428571428575,0,.6428571428571429,.1,.28571428571428575,0,.7142857142857143,0,.8571428571428572,.25,.6428571428571429,.1,.7142857142857143,0,.8571428571428572,.25,.7142857142857143,0,1,.4,.8571428571428572,.35,.8571428571428572,.25,1,.4,.6428571428571429,.5,.8571428571428572,.35,1,.4,.6428571428571429,.5,1,.4,.5714285714285715,.6,.4285714285714286,.5,.6428571428571429,.5,.5714285714285715,.6,.4285714285714286,.5,.5714285714285715,.6,.4285714285714286,.7],ratio:{x:.7}},"!":{vector:[0,0,1,0,1,.7,0,.8,1,.8,1,1,0,0,1,.7,0,.7,0,.8,1,1,0,1],ratio:{x:.1}},"/":{vector:[.2,1,0,1,.8,0,.8,0,1,0,.2,1],ratio:{x:.6}},"\\":{vector:[1,1,.8,1,0,0,0,0,.2,0,1,1],ratio:{x:.6}},"(":{vector:[0,.2,.6666666666666667,0,1,0,1,0,1,.1,.8333333333333334,.1,.8333333333333334,.9,1,.9,1,1,1,1,.6666666666666667,1,0,.8,0,.2,1,0,.8333333333333334,.1,.33333333333333337,.75,.8333333333333334,.9,1,1,0,.2,.8333333333333334,.1,.33333333333333337,.25,.33333333333333337,.75,1,1,0,.8,0,.8,0,.2,.33333333333333337,.25,.33333333333333337,.25,.33333333333333337,.75,0,.8],ratio:{x:.3}},")":{vector:[0,0,.33333333333333337,0,1,.2,1,.8,.33333333333333337,1,0,1,0,1,0,.9,.16666666666666669,.9,.16666666666666669,.1,0,.1,0,0,1,.8,0,1,.16666666666666669,.9,.6666666666666667,.25,.16666666666666669,.1,0,0,1,.8,.16666666666666669,.9,.6666666666666667,.75,.6666666666666667,.25,0,0,1,.2,1,.2,1,.8,.6666666666666667,.75,.6666666666666667,.75,.6666666666666667,.25,1,.2],ratio:{x:.3},encroach:{p:1}},"[":{vector:[0,0,1,0,1,.1,.33333333333333337,.9,1,.9,1,1,0,0,1,.1,.33333333333333337,.1,.33333333333333337,.9,1,1,0,1,0,1,0,0,.33333333333333337,.1,.33333333333333337,.1,.33333333333333337,.9,0,1],ratio:{x:.3}},"]":{vector:[1,1,0,1,0,.9,.6666666666666667,.1,0,.1,0,0,1,1,0,.9,.6666666666666667,.9,.6666666666666667,.1,0,0,1,0,1,0,1,1,.6666666666666667,.9,.6666666666666667,.9,.6666666666666667,.1,1,0],ratio:{x:.3}},"{":{vector:[.25,.4,.25,.2,.7499999999999999,0,.7499999999999999,0,1,0,1,.1,.5,.25,.5,.45,.37499999999999994,.5,.37499999999999994,.5,.5,.55,.5,.75,.8749999999999999,.9,1,.9,1,1,1,1,.7499999999999999,1,.25,.8,.25,.6,0,.55,0,.45,.7499999999999999,0,1,.1,.8749999999999999,.1,.5,.75,.8749999999999999,.9,1,1,.25,.6,0,.45,.25,.4,.7499999999999999,0,.8749999999999999,.1,.5,.25,.5,.75,1,1,.25,.8,.25,.4,.7499999999999999,0,.5,.25,.37499999999999994,.5,.5,.75,.25,.8,.25,.6,.25,.4,.5,.25,.37499999999999994,.5,.25,.8,.25,.6,.25,.6,.5,.25,.37499999999999994,.5],ratio:{x:.4}},"}":{vector:[0,0,.25,0,.7499999999999999,.2,.7499999999999999,.4,1,.45,1,.55,.7499999999999999,.6,.7499999999999999,.8,.25,1,.25,1,0,1,0,.9,.5,.75,.5,.55,.625,.5,.625,.5,.5,.45,.5,.25,.125,.1,0,.1,0,0,.7499999999999999,.4,1,.55,.7499999999999999,.6,.25,1,0,.9,.125,.9,.5,.25,.125,.1,0,0,.25,1,.125,.9,.5,.75,.5,.25,0,0,.7499999999999999,.2,.7499999999999999,.6,.25,1,.5,.75,.625,.5,.5,.25,.7499999999999999,.2,.7499999999999999,.4,.7499999999999999,.6,.5,.75,.625,.5,.7499999999999999,.2,.7499999999999999,.4,.7499999999999999,.4,.5,.75,.625,.5],ratio:{x:.4}},"#":{vector:[.365,.35,.3,0,.4,0,.675,.25,.7,0,.8,0,.775,.25,1,.25,1,.35,.735,.65,1,.65,1,.75,.725,.75,.7,1,.6,1,.325,.75,.3,1,.2,1,.225,.75,0,.75,0,.65,.265,.35,0,.35,0,.25,.275,.25,.3,0,.365,.35,.675,.25,.8,0,.775,.25,.775,.25,1,.35,.765,.35,.735,.65,1,.75,.725,.75,.725,.75,.6,1,.625,.75,.325,.75,.2,1,.225,.75,.225,.75,0,.65,.235,.65,.265,.35,0,.25,.275,.25,.275,.25,.365,.35,.335,.65,.675,.25,.775,.25,.765,.35,.765,.35,.735,.65,.725,.75,.325,.75,.225,.75,.235,.65,.235,.65,.265,.35,.275,.25,.375,.25,.675,.25,.765,.35,.765,.35,.725,.75,.625,.75,.625,.75,.325,.75,.235,.65,.235,.65,.275,.25,.335,.65,.625,.75,.235,.65,.335,.65,.625,.75,.335,.65,.635,.65,.765,.35,.625,.75,.635,.65,.765,.35,.635,.65,.665,.35,.375,.25,.765,.35,.665,.35,.375,.25,.665,.35,.365,.35,.4,0,.375,.25,.365,.35]},"-":{vector:[1,1,0,1,0,0,0,0,1,0,1,1],ratio:{x:.6,y:.1},offset:{y:.45}},_:{vector:[1,1,0,1,0,0,0,0,1,0,1,1],ratio:{x:.8,y:.1},offset:{y:1}},"'":{vector:[1,1,0,1,0,0,0,0,1,0,1,1],ratio:{x:.1,y:.2}},'"':{vector:[1,0,1,1,.6,1,.4,1,0,1,0,0,1,0,.6,1,.6,0,.4,1,0,0,.4,0],ratio:{x:.25,y:.2}},"|":{vector:[1,1,0,1,0,0,0,0,1,0,1,1],ratio:{x:.1}},">":{vector:[.85,.5,0,.1,0,0,0,0,1,.45,1,.55,1,.55,0,1,0,.9,.85,.5,0,0,1,.55,1,.55,0,.9,.85,.5]},"<":{vector:[0,.45,1,0,1,.1,.15,.5,1,.9,1,1,1,1,0,.55,0,.45,0,.45,1,.1,.15,.5,.15,.5,1,1,0,.45]},"+":{vector:[.43749999999999994,.43749999999999994,.43749999999999994,0,.5625,0,.5625,.43749999999999994,1,.43749999999999994,1,.5625,.5625,.5625,.5625,1,.43749999999999994,1,.43749999999999994,.5625,0,.5625,0,.43749999999999994,.43749999999999994,.43749999999999994,.5625,0,.5625,.43749999999999994,.5625,.43749999999999994,1,.5625,.5625,.5625,.5625,.5625,.43749999999999994,1,.43749999999999994,.5625,.43749999999999994,.5625,0,.43749999999999994,.43749999999999994,.43749999999999994,.43749999999999994,.43749999999999994,.5625,.43749999999999994,.5625,.5625,.5625,.5625,.43749999999999994,.5625,.43749999999999994,.43749999999999994],ratio:{x:.8,y:.8},offset:{y:.1}},"=":{vector:[0,0,1,0,1,.2,0,.8,1,.8,1,1,0,0,1,.2,0,.2,0,.8,1,1,0,1],ratio:{x:.8,y:.5},offset:{y:.25}},"&":{vector:[0,.4,0,.2,.222,0,.556,0,.778,.2,.778,.4,.778,.4,.472,.675,.389,.6,.583,.775,.911,.48,1,.55,.722,.9,1,.9,1,1,1,1,.667,1,.583,.925,.583,.925,.5,1,.111,1,.111,1,0,.9,0,.6,0,.6,.111,.5,.194,.575,.778,.4,.389,.6,.667,.35,.583,.775,1,.55,.667,.85,.722,.9,1,1,.583,.925,0,.6,.194,.575,.111,.65,.778,.4,.667,.35,.667,.25,.111,.35,.583,.775,.667,.85,.667,.85,.722,.9,.583,.925,0,.6,.111,.65,.111,.85,.556,0,.778,.4,.667,.25,.111,.35,.667,.85,.583,.925,.111,1,0,.6,.111,.85,.556,0,.667,.25,.5,.1,.111,1,.111,.85,.167,.9,.222,0,.556,0,.5,.1,.583,.925,.111,1,.167,.9,.222,0,.5,.1,.278,.1,.583,.925,.167,.9,.444,.9,.222,0,.278,.1,.111,.25,.583,.925,.444,.9,.5,.85,0,.4,.222,0,.111,.25,.111,.35,.583,.925,.5,.85,0,.4,.111,.25,.111,.35,.111,.35,.5,.85,0,.4],ratio:{x:.9}},"*":{vector:[.417,.292,.417,0,.583,0,.583,.292,.792,.083,.917,.208,.708,.417,1,.417,1,.583,.708,.583,.917,.792,.792,.917,.583,.708,.583,1,.417,1,.417,.708,.208,.917,.083,.792,.292,.583,0,.583,0,.417,.292,.417,.083,.208,.208,.083,.417,.292,.583,0,.583,.292,.583,.292,.917,.208,.708,.417,.708,.417,1,.583,.708,.583,.708,.583,.792,.917,.583,.708,.583,.708,.417,1,.417,.708,.417,.708,.083,.792,.292,.583,.292,.583,0,.417,.292,.417,.292,.417,.208,.083,.417,.292,.417,.292,.583,.292,.708,.417,.708,.417,.708,.583,.583,.708,.583,.708,.417,.708,.292,.583,.292,.583,.292,.417,.417,.292,.417,.292,.708,.417,.583,.708,.583,.708,.292,.583,.417,.292],ratio:{x:.6,y:.6},offset:{y:.2}},"~":{vector:[.175,.33333333333333337,0,.6666666666666667,0,.33333333333333337,0,.33333333333333337,.15,0,.35,0,.825,.6666666666666667,1,.33333333333333337,1,.6666666666666667,1,.6666666666666667,.85,1,.65,1,.175,.33333333333333337,0,.33333333333333337,.35,0,.825,.6666666666666667,1,.6666666666666667,.65,1,.325,.33333333333333337,.175,.33333333333333337,.35,0,.675,.6666666666666667,.825,.6666666666666667,.65,1,.65,1,.325,.33333333333333337,.35,0,.35,0,.675,.6666666666666667,.65,1],ratio:{x:.9,y:.3},offset:{y:.35}},"%":{vector:[0,.1,.1,0,.3,0,.3,0,.4,.1,.4,.3,.4,.3,.3,.4,.1,.4,.1,.15,.1,.25,0,.3,.02,.9,.92,0,1,.08,.7,1,.6,.9,.6,.7,.6,.7,.7,.6,.9,.6,.9,.6,1,.7,1,.9,.02,.9,1,.08,.08,.98,.7,1,.7,.85,.75,.9,.1,.15,0,.3,0,.1,.1,.4,0,.3,.1,.25,.15,.1,.1,.15,0,.1,.1,.4,.1,.25,.15,.3,.15,.1,0,.1,.3,0,.1,.4,.15,.3,.25,.3,.25,.1,.15,.1,.3,0,.4,.3,.1,.4,.25,.3,.3,.15,.25,.1,.3,0,.4,.3,.25,.3,.3,.25,.3,.15,.3,0,.4,.3,.4,.3,.3,.25,.3,.15,.7,.75,.7,1,.6,.7,1,.9,.9,1,.7,1,.7,1,.75,.9,.85,.9,.75,.7,.7,.75,.6,.7,1,.9,.7,1,.85,.9,.75,.7,.6,.7,.9,.6,1,.9,.85,.9,.9,.85,.85,.7,.75,.7,.9,.6,1,.9,.9,.85,.9,.75,.9,.75,.85,.7,.9,.6,.9,.6,1,.9,.9,.75]},"^":{vector:[.5,.5,.25,1,0,1,.5,0,1,1,.75,1,.5,.5,0,1,.5,0,.5,0,.75,1,.5,.5],ratio:{x:.6,y:.3}}},o.concat(["default",""]).forEach(e=>{if(null!=t.defaultThin[e]){t.defaultThin[e].top=null!=t.defaultThin[e].ratio&&null!=t.defaultThin[e].ratio.y?-t.defaultThin[e].ratio.y:-1,t.defaultThin[e].right=null!=t.defaultThin[e].ratio&&null!=t.defaultThin[e].ratio.x?t.defaultThin[e].ratio.x+.1:1.1,t.defaultThin[e].bottom=0,t.defaultThin[e].left=0;for(let n=0;n<t.defaultThin[e].vector.length;n+=2)null!=t.defaultThin[e].ratio&&(null!=t.defaultThin[e].ratio.x&&(t.defaultThin[e].vector[n]*=t.defaultThin[e].ratio.x),null!=t.defaultThin[e].ratio.y&&(t.defaultThin[e].vector[n+1]*=t.defaultThin[e].ratio.y)),null!=t.defaultThin[e].offset&&(null!=t.defaultThin[e].offset.x&&(t.defaultThin[e].vector[n]+=t.defaultThin[e].offset.x),null!=t.defaultThin[e].offset.y&&(t.defaultThin[e].vector[n+1]+=t.defaultThin[e].offset.y));for(let n=0;n<t.defaultThin[e].vector.length;n+=2)t.defaultThin[e].vector[n+1]-=1}}),this.getLoadableFonts=function(){const e=r.map(e=>e.split(".").slice(0,-1)[0].split("/").slice(1,2)[0]);return["defaultThick","defaultThin"].concat(e)},this.getLoadedFonts=function(){const e=r.map(e=>e.split(".").slice(0,-1)[0].split("/").slice(1,2)[0]).filter(e=>t[e].loadWasSuccess);return["defaultThick","defaultThin"].concat(e)},this.isApprovedFont=function(e){return null!=t[e]},this.loadFont=function(n,r,a=(()=>{})){if(null==t[n])return console.warn("elementLibrary.character.loadFont : error : unknown font name:",n),!1;if(!this.isApprovedFont(n))return void console.warn("library.font.loadFont error: attempting to load unapproved font:",n);if(!r&&t[n].loadComplete)return;t[n].loadAttempted=!0,t[n].loadComplete=!1,t[n].loadWasSuccess=void 0,t[n].default={vector:[0,0,1,0,0,-1,1,0,0,-1,1,-1]};const i=t[n].fileName;e.misc.loadFileFromURL("/fonts/"+i,r=>{const i=e.font.extractGlyphs(r.response,o);Object.keys(i).forEach(e=>t[n][e]=i[e]),t[n].loadComplete=!0,t[n].loadWasSuccess=!0,a({fontName:n,loadWasSuccess:!0})},()=>{t[n].loadComplete=!0,t[n].loadWasSuccess=!1,a({fontName:n,loadWasSuccess:!1})},"arraybuffer")},this.isValidCharacter=function(e,n){return null!=t[e][n]},this.getDefaultVector=function(e){return t[e].default.vector},this.getVector=function(e,n){return t[e][n].vector},this.getRatio=function(e,n){return t[e][n].ratio},this.getOffset=function(e,n){return t[e][n].offset},this.getEncroach=function(e,n,o){return t[e][n].encroach[o]},this.getMiscDefaultData=function(e){return{ascender:t[e].default.ascender,descender:t[e].default.descender,leftSideBearing:t[e].default.leftSideBearing,advanceWidth:t[e].default.advanceWidth,xMax:t[e].default.xMax,yMax:t[e].default.yMax,xMin:t[e].default.xMin,yMin:t[e].default.yMin,top:t[e].default.top,left:t[e].default.left,bottom:t[e].default.bottom,right:t[e].default.right}},this.getMiscData=function(e,n){return{ascender:t[e][n].ascender,descender:t[e][n].descender,leftSideBearing:t[e][n].leftSideBearing,advanceWidth:t[e][n].advanceWidth,xMax:t[e][n].xMax,yMax:t[e][n].yMax,xMin:t[e][n].xMin,yMin:t[e][n].yMin,top:t[e][n].top,left:t[e][n].left,bottom:t[e][n].bottom,right:t[e][n].right}}},this.misc=new function(){this.padString=function(e,t,n=" ",o="l"){if(n.length<1)return e;if(e=""+e,"l"==o)for(;e.length<t;)e=n+e;else for(;e.length<t;)e+=n;return e},this.compressString=function(e){return n.lzString.compress(e)},this.decompressString=function(e){return n.lzString.decompress(e)},this.serialize=function(t,n=!0){return t=JSON.stringify(t,(function(e,t){switch(n=t,{}.toString.call(n).match(/\s([a-zA-Z]+)/)[1].toLowerCase()){case"function":return{__uniqueType:"function",__value:t.toString(),__name:t.name};case"arraybuffer":return{__uniqueType:"arraybuffer",__value:btoa(String.fromCharCode(new Uint8Array(t)))};case"audiobuffer":const e=[];for(let n=0;n<t.numberOfChannels;n++)e.push(Array.from(t.getChannelData(n)));return{__uniqueType:"audiobuffer",__channelData:e,__sampleRate:t.sampleRate,__numberOfChannels:t.numberOfChannels,__length:t.length};default:return t}var n})),n&&(t=e.misc.compressString(t)),t},this.unserialize=function(t,n=!0){if(void 0!==t)return n&&(t=e.misc.decompressString(t)),JSON.parse(t,(function(t,n){if("object"==typeof n&&null!=n&&"__uniqueType"in n)switch(n.__uniqueType){case"function":let t=n.__value.substring(0,n.__value.indexOf("{"));t=t.substring(t.indexOf("(")+1,t.lastIndexOf(")"));const o=n.__value.substring(n.__value.indexOf("{")+1,n.__value.lastIndexOf("}"));n=Function(t,o);break;case"arraybuffer":n=atob(n.__value);for(let e=0;e<n.length;e++)n[e]=n[e].charCodeAt(0);n=new ArrayBuffer(n);break;case"audiobuffer":const r=e.audio.context.createBuffer(n.__numberOfChannels,n.__length,n.__sampleRate);for(let e=0;e<r.numberOfChannels;e++){workingBuffer=r.getChannelData(e);for(let t=0;t<r.length;t++)workingBuffer[t]=n.__channelData[e][t]}n=r;break;default:n=n.__value}return n}))},this.packData=function(t,n=!0){return e.misc.serialize({compressed:n,data:e.misc.serialize(t,n)},!1)},this.unpackData=function(t){try{t=e.misc.unserialize(t,!1)}catch(e){return console.error("Major error unserializing first layer of file"),console.error(e),null}const n=t.compressed;try{t=e.misc.unserialize(t.data,n)}catch(e){return console.error("Major error unserializing second layer of file"),console.error(e),null}return t},this.openFile=function(e,t="readAsBinaryString",n){const o=document.createElement("input");o.type="file",o.accept=n,o.onchange=function(){const n=new FileReader;switch(t){case"readAsArrayBuffer":n.readAsArrayBuffer(this.files[0]);break;case"readAsBinaryString":default:n.readAsBinaryString(this.files[0])}n.onloadend=function(){e&&e(n.result,o.files[0])}},document.body.appendChild(o),o.click(),setTimeout(()=>{document.body.removeChild(o)},1e3)},this.printFile=function(e,t){const n=document.createElement("a");n.href=URL.createObjectURL(new Blob([t])),n.download=e,n.click()},this.argumentsToArray=function(e){const t=[];for(let n=0;n<e.length;n++)t.push(e[n]);return t},this.comparer=function(t,n){function o(e){return{}.toString.call(e).match(/\s([a-zA-Z]+)/)[1].toLowerCase()}if(o(t)!=o(n))return!1;if("boolean"==typeof t||"string"==typeof t)return t===n;if("number"==typeof t)return Math.abs(t)<1e-14&&(t=0),Math.abs(n)<1e-14&&(n=0),Math.abs(t-n)<1e-14||t===n;if(void 0===t||void 0===n||null===t||null===n)return t===n;if("function"==o(t)){t=t.toString(),n=n.toString();let e=t.substring(0,t.indexOf("{"));e=e.substring(e.indexOf("(")+1,e.lastIndexOf(")"));const o=t.substring(t.indexOf("{")+1,t.lastIndexOf("}"));let r=n.substring(0,n.indexOf("{"));r=r.substring(r.indexOf("(")+1,r.lastIndexOf(")"));const a=n.substring(n.indexOf("{")+1,n.lastIndexOf("}"));return e.trim()==r.trim()&&o.trim()==a.trim()}if("object"==typeof t){const o=Object.keys(t),r=Object.keys(n);if(o.length!=r.length)return!1;for(let a=0;a<o.length;a++)if(-1==o.indexOf(r[a])||!e.misc.comparer(t[o[a]],n[o[a]]))return!1;return!0}return!1},this.removeThisFromThatArray=function(t,n){const o=n.findIndex(n=>e.misc.comparer(n,t));if(-1!=o)return n.splice(o,1)},this.removeTheseElementsFromThatArray=function(t,n){return t.forEach(t=>e.misc.removeThisFromThatArray(t,n)),n},this.getDifferenceOfArrays=function(e,t){if(0==e.length&&0==t.length)return{a:[],b:[]};if(0==e.length)return{a:[],b:t};if(0==t.length)return{a:e,b:[]};function n(e,t){return e.forEach(e=>{let n=t.indexOf(e);-1!=n&&t.splice(n,1)}),t}return{a:n(t,e.slice()),b:n(e,t.slice())}},this.loadFileFromURL=function(e,t,n,o="blob"){const r=new XMLHttpRequest;r.onloadend=e=>{200==e.target.status?null!=t?t(e.target):console.log(e.target):null!=n?n(e.target):console.warn("library.misc.loadFileFromURL error: could not find the file",e.target.responseURL)},r.open("get",e,!0),r.responseType=o,r.send()},this.loadImageFromURL=function(t,n,o,r=!1,a=1){const i=this.loadImageFromURL.loadedImageData;function s(e,t=1){return global=i[e],i[e].mipmap[1]}null==i[t]||r&&"requested"!=i[t].state?(i[t]={state:"requested",mipmap:{},callbacks:[{success:n,failure:o,scale:a}],timestamp:void 0},e.misc.loadFileFromURL(t,e=>{i[t].response=e.response,createImageBitmap(e.response).then(e=>{i[t].mipmap[1]=e,i[t].state="ready",i[t].timestamp=Date.now(),i[t].callbacks.forEach(e=>{null!=e.success&&e.success(s(t,e.scale))}),i[t].callbacks=[]}).catch(n=>{i[t].state="failed",i[t].timestamp=Date.now(),i[t].callbacks.forEach(t=>{null!=t.failure&&t.failure("imageDecodingError",e,n)}),i[t].callbacks=[]})},e=>{i[t].state="failed",i[t].timestamp=Date.now(),i[t].callbacks.forEach(t=>{null!=t.failure&&t.failure("badURL",e)}),i[t].callbacks=[]})):"ready"==i[t].state?null!=n&&n(s(t,a)):"requested"==i[t].state?i[t].callbacks.push({success:n,failure:o,scale:a}):"failed"==i[t].state&&null!=o&&o("previousFailure")},this.loadImageFromURL.loadedImageData={}},this.audio=new function(){const t=this;this.context=new(window.AudioContext||window.webkitAudioContext),this.destination=this.context.createGain(),this.destination.connect(this.context.destination),this.destination._gain=1,this.destination.masterGain=function(t){if(null==t)return this.destination._gain;this._gain=t,e.audio.changeAudioParam(e.audio.context,this.gain,this._gain,.01,"instant",!0)},this.names_frequencies_split={0:{C:16.35,"C#":17.32,D:18.35,"D#":19.45,E:20.6,F:21.83,"F#":23.12,G:24.5,"G#":25.96,A:27.5,"A#":29.14,B:30.87},1:{C:32.7,"C#":34.65,D:36.71,"D#":38.89,E:41.2,F:43.65,"F#":46.25,G:49,"G#":51.91,A:55,"A#":58.27,B:61.74},2:{C:65.41,"C#":69.3,D:73.42,"D#":77.78,E:82.41,F:87.31,"F#":92.5,G:98,"G#":103.8,A:110,"A#":116.5,B:123.5},3:{C:130.8,"C#":138.6,D:146.8,"D#":155.6,E:164.8,F:174.6,"F#":185,G:196,"G#":207.7,A:220,"A#":233.1,B:246.9},4:{C:261.6,"C#":277.2,D:293.7,"D#":311.1,E:329.6,F:349.2,"F#":370,G:392,"G#":415.3,A:440,"A#":466.2,B:493.9},5:{C:523.3,"C#":554.4,D:587.3,"D#":622.3,E:659.3,F:698.5,"F#":740,G:784,"G#":830.6,A:880,"A#":932.3,B:987.8},6:{C:1047,"C#":1109,D:1175,"D#":1245,E:1319,F:1397,"F#":1480,G:1568,"G#":1661,A:1760,"A#":1865,B:1976},7:{C:2093,"C#":2217,D:2349,"D#":2489,E:2637,F:2794,"F#":2960,G:3136,"G#":3322,A:3520,"A#":3729,B:3951},8:{C:4186,"C#":4435,D:4699,"D#":4978,E:5274,F:5588,"F#":5920,G:6272,"G#":6645,A:7040,"A#":7459,B:7902}},this.names_frequencies={},Object.entries(this.names_frequencies_split).forEach((e,t)=>{Object.entries(this.names_frequencies_split[t]).forEach(t=>{this.names_frequencies[e[0]+t[0]]=t[1]})}),this.frequencies_names={},Object.entries(this.names_frequencies).forEach(e=>{this.frequencies_names[e[1]]=e[0]});this.midinumbers_names={},["0C","0C#","0D","0D#","0E","0F","0F#","0G","0G#","0A","0A#","0B","1C","1C#","1D","1D#","1E","1F","1F#","1G","1G#","1A","1A#","1B","2C","2C#","2D","2D#","2E","2F","2F#","2G","2G#","2A","2A#","2B","3C","3C#","3D","3D#","3E","3F","3F#","3G","3G#","3A","3A#","3B","4C","4C#","4D","4D#","4E","4F","4F#","4G","4G#","4A","4A#","4B","5C","5C#","5D","5D#","5E","5F","5F#","5G","5G#","5A","5A#","5B","6C","6C#","6D","6D#","6E","6F","6F#","6G","6G#","6A","6A#","6B","7C","7C#","7D","7D#","7E","7F","7F#","7G","7G#","7A","7A#","7B","8C","8C#","8D","8D#","8E","8F","8F#","8G","8G#","8A","8A#","8B"].forEach((e,t)=>{this.midinumbers_names[t+24]=e}),this.names_midinumbers={},Object.entries(this.midinumbers_names).forEach(e=>{this.names_midinumbers[e[1]]=parseInt(e[0])}),this.num2name=function(e){return this.midinumbers_names[e]},this.num2freq=function(e){return this.names_frequencies[this.midinumbers_names[e]]},this.name2num=function(e){return this.names_midinumbers[e]},this.name2freq=function(e){return this.names_frequencies[e]},this.freq2num=function(e){return this.names_midinumbers[this.frequencies_names[e]]},this.freq2name=function(e){return this.frequencies_names[e]},this.changeAudioParam=function(t,n,o,r,a,i=!0){if(null==o)return n.value;i&&n.cancelScheduledValues(0);try{switch(a){case"linear":n.linearRampToValueAtTime(o,t.currentTime+r);break;case"exponential":0==o&&(o=1e-4),n.exponentialRampToValueAtTime(o,t.currentTime+r);break;case"s":const a=o-n.value,i=e.math.curveGenerator.s(10);for(let e=0;e<i.length;e++)i[e]=n.value+i[e]*a;n.setValueCurveAtTime(new Float32Array(i),t.currentTime,r);break;case"instant":default:n.setValueAtTime(o,0)}}catch(e){console.log("could not change param (possibly due to an overlap, or bad target value)"),console.log("audioParam:",n,"target:",o,"time:",r,"curve:",a,"cancelScheduledValues:",i),console.log(e)}};const n={};this.loadAudioFile=function(t,o="file",r="",a,i=!1){if(null!=t)switch(o){case"url":if(!i&&null!=n[r]){t(n[r]);break}e.misc.loadFileFromURL(r,o=>{e.audio.context.decodeAudioData(o.response,e=>{n[r]={buffer:e,name:r.split("/").pop(),duration:e.duration},t(n[r])})},a,"arraybuffer");break;case"file":default:e.misc.openFile((n,o)=>{e.audio.context.decodeAudioData(n,(function(e){t({buffer:e,name:o.name,duration:e.duration})}))},"readAsArrayBuffer")}},this.waveformSegment=function(t,n={start:0,end:1},o=1e4){const r=t.getChannelData(0);n.start=n.start?n.start:0,n.end=n.end?n.end:1;const a=t.length*n.start,i=t.length*n.end,s=(i-a)/o,l=[];for(let t=a;t<i;t+=Math.round(s))l.push(e.math.largestValueFound(r.slice(t,t+Math.round(s))));return l},this.loadBuffer=function(e,t,n,o){const r=e.createBufferSource();return r.buffer=t,r.connect(n),r.onended=o,r},this.audioWorklet=new function(){const e={production:{only_js:{list:[{name:"frequencyAmplitudeResponseAnalyser",worklet:new Blob(["\n                                                // class frequencyAmplitudeResponseAnalyser extends AudioWorkletProcessor{\n                                                //     static twoPI = Math.PI*2;\n                                                \n                                                //     static get parameterDescriptors(){\n                                                //         return [];\n                                                //     }\n                                                \n                                                //     #state = {\n                                                //         signalGeneratorGain:1,\n                                                //         waveform:0,\n                                                //         dutyCycle:0.5,\n                                                //         frequency:{\n                                                //             current:100,\n                                                //             range:{ start:100, end:1000 },\n                                                //             stepSize:10,\n                                                //             timePerStep:0.005\n                                                //         },\n                                                //         responseData: [],\n                                                //     };\n                                                //     #wavePosition = 0;\n                                                //     #lastUpdate = 0;\n                                                //     #start = false;\n                                                //     #active = false;\n                                                //     #stepData = [];\n                                                \n                                                //     constructor(options){\n                                                //         super(options);\n                                                //         const self = this;\n                                                \n                                                //         this.port.onmessage = function(event){\n                                                //             if(event.data == 'stop'){\n                                                //                 self._active = false;\n                                                //                 return;\n                                                //             }\n                                                \n                                                //             if(self._active){ return; }\n                                                \n                                                //             if(event.data == 'start'){\n                                                //                 self._start = true;\n                                                //                 self._active = true;\n                                                //                 return;\n                                                //             }\n                                                //             if(event.data == 'clear'){\n                                                //                 this._state.responseData = [];\n                                                //                 this._stepData = [];\n                                                //                 this._wavePosition = 0;\n                                                //                 return;\n                                                //             }\n                                                \n                                                //             Object.entries(event.data).forEach(([key,value]) => {\n                                                //                 switch(key){\n                                                //                     case 'waveform': self._state.waveform = value; break;\n                                                //                     case 'signalGeneratorGain': self._state.signalGeneratorGain = value; break;\n                                                //                     case 'dutyCycle': self._state.dutyCycle = value; break;\n                                                \n                                                //                     case 'range.start': self._state.frequency.range.start = value; break;\n                                                //                     case 'range.end': self._state.frequency.range.end = value; break;\n                                                //                     case 'stepSize': self._state.frequency.stepSize = value; break;\n                                                //                     case 'timePerStep': self._state.frequency.timePerStep = value; break;\n                                                //                 }\n                                                //             });\n                                                //         };\n                                                //         this.port.start();\n                                                //     }\n                                                \n                                                //     process(inputs, outputs, parameters){\n                                                //         if(!this._active){ return true; }\n                                                \n                                                //         if(this._start){\n                                                //             this._state.frequency.current = this._state.frequency.range.start;\n                                                //             this._start = false;\n                                                //             this._lastUpdate = currentTime;\n                                                //         }\n                                                \n                                                        \n                                                \n                                                //         //generator\n                                                //             const output = outputs[0];\n                                                \n                                                //             const gain = this._state.signalGeneratorGain;\n                                                //             const frequency = this._state.frequency.current;\n                                                //             const dutyCycle = this._state.frequency.dutyCycle;\n                                                \n                                                //             for(let channel = 0; channel < output.length; channel++){\n                                                //                 for(let a = 0; a < output[channel].length; a++){\n                                                \n                                                //                     this._wavePosition += frequency/sampleRate;\n                                                //                     const localWavePosition = this._wavePosition % 1;\n                                                \n                                                //                     switch(this._state.waveform){\n                                                //                         case 0: //sin\n                                                //                             output[channel][a] = gain*Math.sin( localWavePosition * frequencyAmplitudeResponseAnalyser.twoPI );\n                                                //                         break;\n                                                //                         case 1: //square\n                                                //                             output[channel][a] = gain*(localWavePosition < dutyCycle ? 1 : -1);\n                                                //                         break;\n                                                //                         case 2: //triangle\n                                                //                             if(localWavePosition < dutyCycle/2){\n                                                //                                 output[channel][a] = gain*(2*localWavePosition / dutyCycle);\n                                                //                             }else if(localWavePosition >= 1 - dutyCycle/2){\n                                                //                                 output[channel][a] = gain*((2*localWavePosition - 2) / dutyCycle);\n                                                //                             }else{\n                                                //                                 output[channel][a] = gain*((2*localWavePosition - 1) / (dutyCycle - 1));\n                                                //                             }\n                                                //                         break;\n                                                //                     }\n                                                //                 }\n                                                //             }\n                                                \n                                                //         //collector\n                                                //             const input = inputs[0];\n                                                //             this._stepData.push(...input[0]);\n                                                            \n                                                \n                                                \n                                                //         if( currentTime - this._lastUpdate > this._state.frequency.timePerStep ){\n                                                //             this._lastUpdate = currentTime;\n                                                \n                                                //             const result = {\n                                                //                 frequency:this._state.frequency.current,\n                                                //                 response:Math.max(...(this._stepData).map(a => Math.abs(a)) )\n                                                //             };\n                                                //             this.port.postMessage({ onValue:result });\n                                                //             this._state.responseData.push(result);\n                                                //             this._stepData = [];\n                                                \n                                                //             this._state.frequency.current += this._state.frequency.stepSize;\n                                                //             if( this._state.frequency.current > this._state.frequency.range.end ){\n                                                //                 this.port.postMessage({ onCompletion:this._state.responseData });\n                                                //                 this._active = false;\n                                                //             }\n                                                //         }\n                                                \n                                                //         return true;\n                                                //     }\n                                                // }\n                                                // registerProcessor('frequencyAmplitudeResponseAnalyser', frequencyAmplitudeResponseAnalyser);\n                                                \n                                                \n                                                \n                                                \n                                                \n                                                \n                                                \n                                                \n                                                \n                                                \n                                                \n                                                \n                                                \n                                                \n                                                \n                                                \n                                                class frequencyAmplitudeResponseAnalyser extends AudioWorkletProcessor{\n                                                    static twoPI = Math.PI*2;\n                                                \n                                                    static get parameterDescriptors(){\n                                                        return [];\n                                                    }\n                                                \n                                                    constructor(options){\n                                                        super(options);\n                                                        const self = this;\n                                                \n                                                        this._state = {\n                                                            signalGeneratorGain:1,\n                                                            waveform:'sine',\n                                                            dutyCycle:0.5,\n                                                            frequency:{\n                                                                current:100,\n                                                                range:{ start:100, end:1000 },\n                                                                stepSize:10,\n                                                                timePerStep:0.005\n                                                            },\n                                                            responseData: [],\n                                                        };\n                                                        this._wavePosition = 0;\n                                                        this._lastUpdate = 0;\n                                                        this._start = false;\n                                                        this._active = false;\n                                                        this._stepData = [];\n                                                \n                                                        this.port.onmessage = function(event){\n                                                            if(event.data == 'stop'){\n                                                                self.port.postMessage({ onCompletion:self._state.responseData });\n                                                                self._active = false;\n                                                                return;\n                                                            }\n                                                \n                                                            if(self._active){ return; }\n                                                \n                                                            if(event.data == 'start'){\n                                                                self._start = true;\n                                                                self._active = true;\n                                                                return;\n                                                            }\n                                                            if(event.data == 'clear'){\n                                                                self._state.responseData = [];\n                                                                self._stepData = [];\n                                                                self._wavePosition = 0;\n                                                                return;\n                                                            }\n                                                \n                                                            Object.entries(event.data).forEach(([key,value]) => {\n                                                                switch(key){\n                                                                    case 'waveform': self._state.waveform = value; break;\n                                                                    case 'signalGeneratorGain': self._state.signalGeneratorGain = value; break;\n                                                                    case 'dutyCycle': self._state.dutyCycle = value; break;\n                                                \n                                                                    case 'range.start': self._state.frequency.range.start = value; break;\n                                                                    case 'range.end': self._state.frequency.range.end = value; break;\n                                                                    case 'stepSize': self._state.frequency.stepSize = value; break;\n                                                                    case 'timePerStep': self._state.frequency.timePerStep = value; break;\n                                                                }\n                                                            });\n                                                        };\n                                                        this.port.start();\n                                                    }\n                                                \n                                                    process(inputs, outputs, parameters){\n                                                        if(!this._active){ return true; }\n                                                \n                                                        if(this._start){\n                                                            this._state.frequency.current = this._state.frequency.range.start;\n                                                            this._start = false;\n                                                            this._lastUpdate = currentTime;\n                                                        }\n                                                \n                                                        \n                                                \n                                                        //generator\n                                                            const output = outputs[0];\n                                                \n                                                            const gain = this._state.signalGeneratorGain;\n                                                            const frequency = this._state.frequency.current;\n                                                            const dutyCycle = this._state.dutyCycle;\n                                                \n                                                            for(let channel = 0; channel < output.length; channel++){\n                                                                for(let a = 0; a < output[channel].length; a++){\n                                                \n                                                                    this._wavePosition += frequency/sampleRate;\n                                                                    const localWavePosition = this._wavePosition % 1;\n                                                \n                                                                    switch(this._state.waveform){\n                                                                        case 'sine':\n                                                                            output[channel][a] = gain*Math.sin( localWavePosition * frequencyAmplitudeResponseAnalyser.twoPI );\n                                                                        break;\n                                                                        case 'square':\n                                                                            output[channel][a] = gain*(localWavePosition < dutyCycle ? 1 : -1);\n                                                                        break;\n                                                                        case 'triangle':\n                                                                            if(localWavePosition < dutyCycle/2){\n                                                                                output[channel][a] = gain*(2*localWavePosition / dutyCycle);\n                                                                            }else if(localWavePosition >= 1 - dutyCycle/2){\n                                                                                output[channel][a] = gain*((2*localWavePosition - 2) / dutyCycle);\n                                                                            }else{\n                                                                                output[channel][a] = gain*((2*localWavePosition - 1) / (dutyCycle - 1));\n                                                                            }\n                                                                        break;\n                                                                    }\n                                                                }\n                                                            }\n                                                \n                                                        //collector\n                                                            const input = inputs[0];\n                                                            if( inputs[0].length != 0){\n                                                                this._stepData.push(...input[0]);\n                                                            }\n                                                \n                                                \n                                                        if( currentTime - this._lastUpdate > this._state.frequency.timePerStep ){\n                                                            this._lastUpdate = currentTime;\n                                                \n                                                            const result = {\n                                                                frequency:this._state.frequency.current,\n                                                                response:Math.max(...(this._stepData).map(a => Math.abs(a)) )\n                                                            };\n                                                            this.port.postMessage({ onValue:result });\n                                                            this._state.responseData.push(result);\n                                                            this._stepData = [];\n                                                \n                                                            this._state.frequency.current += this._state.frequency.stepSize;\n                                                            if( this._state.frequency.current > this._state.frequency.range.end ){\n                                                                this.port.postMessage({ onCompletion:this._state.responseData });\n                                                                this._active = false;\n                                                            }\n                                                        }\n                                                \n                                                        return true;\n                                                    }\n                                                }\n                                                registerProcessor('frequencyAmplitudeResponseAnalyser', frequencyAmplitudeResponseAnalyser);\n                                            "],{type:"text/javascript"}),class:class extends AudioWorkletNode{constructor(e,t={}){t.numberOfInputs=1,t.numberOfOutputs=1,t.channelCount=1,super(e,"frequencyAmplitudeResponseAnalyser",t);const n=this;this._state={waveform:"sine",signalGeneratorGain:1,dutyCycle:.5,frequency:{range:{start:100,end:1e3},stepSize:10,timePerStep:.005}},this.port.onmessage=function(e){Object.entries(e.data).forEach(([e,t])=>{switch(e){case"onValue":null!=n.onValue&&n.onValue(t);break;case"onCompletion":null!=n.onCompletion&&n.onCompletion(t)}})},this.start=function(){this.port.postMessage("start")},this.stop=function(){this.port.postMessage("stop")},this.clear=function(){this.port.postMessage("clear")},this.onValue=function(){},this.onCompletion=function(){}}get waveform(){return this._state.waveform}set waveform(e){this._state.waveform=e,this.port.postMessage({waveform:e})}get signalGeneratorGain(){return this._state.signalGeneratorGain}set signalGeneratorGain(e){this._state.signalGeneratorGain=e,this.port.postMessage({signalGeneratorGain:e})}get dutyCycle(){return this._state.dutyCycle}set dutyCycle(e){this._state.dutyCycle=e,this.port.postMessage({dutyCycle:e})}get range(){return this._state.frequency.range}set range(e){null==e.start&&(e.start=this._state.frequency.range.start),null==e.end&&(e.end=this._state.frequency.range.end),this._state.frequency.range=e,this.port.postMessage({"range.start":this._state.frequency.range.start,"range.end":this._state.frequency.range.end})}get stepSize(){return this._state.frequency.stepSize}set stepSize(e){this._state.frequency.stepSize=e,this.port.postMessage({stepSize:e})}get timePerStep(){return this._state.frequency.timePerStep}set timePerStep(e){this._state.frequency.timePerStep=e,this.port.postMessage({timePerStep:e})}}},{name:"stableAmplitudeGenerator",worklet:new Blob(["\n                                                class stableAmplitudeGenerator extends AudioWorkletProcessor{\n                                                    static get parameterDescriptors(){\n                                                        return [\n                                                            {\n                                                                name: 'amplitude',\n                                                                defaultValue: 0,\n                                                                minValue: -1,\n                                                                maxValue: 1,\n                                                                automationRate: 'k-rate',\n                                                            }\n                                                        ];\n                                                    }\n                                                \n                                                    constructor(options){\n                                                        //construct class instance\n                                                            super(options);\n                                                \n                                                        //instance state\n                                                            this.shutdown = false;\n                                                \n                                                        //setup message receiver\n                                                            const self = this;\n                                                            this.port.onmessage = function(event){\n                                                                switch(event.data.command){\n                                                                    //shutdown\n                                                                        case 'shutdown':\n                                                                            self.shutdown = true;\n                                                                        break;\n                                                                }\n                                                            };\n                                                    }\n                                                \n                                                    process(inputs, outputs, parameters){\n                                                        if(this.shutdown){ return false; }\n                                                \n                                                        const output = outputs[0];\n                                                \n                                                        for(let channel = 0; channel < output.length; channel++){\n                                                            for(let a = 0; a < output[channel].length; a++){\n                                                                output[channel][a] = parameters.amplitude[0];\n                                                            }\n                                                        }\n                                                \n                                                        return true;\n                                                    }\n                                                }\n                                                registerProcessor('stableAmplitudeGenerator', stableAmplitudeGenerator);\n                                            "],{type:"text/javascript"}),class:class extends AudioWorkletNode{constructor(e,t={}){t.numberOfInputs=0,t.numberOfOutputs=1,t.channelCount=1,super(e,"stableAmplitudeGenerator",t),this.shutdown=function(){this.port.postMessage({command:"shutdown",value:void 0}),this.port.close()}}get amplitude(){return this.parameters.get("amplitude")}}},{name:"oscillator",worklet:new Blob(["\n                                                class oscillator extends AudioWorkletProcessor{\n                                                    static halfPI = Math.PI/2;\n                                                    static twoPI = Math.PI*2;\n                                                    static starterFrequency = 440;\n                                                    static maxFrequency = 20000;\n                                                    static detuneMux = 0.1;\n                                                    static detuneBounds = 1/oscillator.detuneMux;\n                                                \n                                                    static get parameterDescriptors(){\n                                                        return [\n                                                            {\n                                                                name: 'frequency',\n                                                                defaultValue: oscillator.starterFrequency,\n                                                                minValue: 0,\n                                                                maxValue: oscillator.maxFrequency,\n                                                                automationRate: 'a-rate',\n                                                            },{\n                                                                name: 'gain',\n                                                                defaultValue: 1,\n                                                                minValue: -1,\n                                                                maxValue: 1,\n                                                                automationRate: 'a-rate',\n                                                            },{\n                                                                name: 'detune',\n                                                                defaultValue: 0,\n                                                                minValue: -oscillator.detuneBounds,\n                                                                maxValue: oscillator.detuneBounds,\n                                                                automationRate: 'a-rate',\n                                                            },{\n                                                                name: 'dutyCycle',\n                                                                defaultValue: 0.5,\n                                                                minValue: 0,\n                                                                maxValue: 1,\n                                                                automationRate: 'a-rate',\n                                                            },\n                                                        ];\n                                                    }\n                                                \n                                                    constructor(options){\n                                                        super(options);\n                                                        const self = this;\n                                                        this._wavePosition = 0;\n                                                        this._waveComplexityLength = 1;\n                                                \n                                                        this._state = {\n                                                            waveform:'sine',\n                                                            gain_useControl:false,\n                                                            detune_useControl:false,\n                                                            dutyCycle_useControl:false,\n                                                            waveformGeneratorFunction:oscillator.waveFunction['sine'],\n                                                        };\n                                                        this._envelope = {\n                                                            gain:{\n                                                                reporting:false,\n                                                                velocity:1,\n                                                                phase:'off', // front - wait - back - off\n                                                                requestedPhase:undefined,\n                                                \n                                                                step:0,\n                                                                previous:0,\n                                                                current:0,\n                                                \n                                                                procedure:{\n                                                                    index:0,\n                                                                    sample:0,\n                                                                    front:[ {destination:1, elapse:0, _elapseSamples:1} ],\n                                                                    back:[ {destination:0, elapse:0, _elapseSamples:1} ],\n                                                                },\n                                                                defaultProcedurePoint:{\n                                                                    front:{destination:1, elapse:0, _elapseSamples:1},\n                                                                    back:{destination:0, elapse:0, _elapseSamples:1},\n                                                                },\n                                                            },\n                                                            detune:{\n                                                                reporting:false,\n                                                                velocity:1,\n                                                                phase:'off', // front - wait - back - off\n                                                                requestedPhase:undefined,\n                                                \n                                                                step:0,\n                                                                previous:0,\n                                                                current:0,\n                                                \n                                                                procedure:{\n                                                                    index:0,\n                                                                    sample:0,\n                                                                    front:[ {destination:0, elapse:0, _elapseSamples:1} ],\n                                                                    back:[ {destination:0, elapse:0, _elapseSamples:1} ],\n                                                                },\n                                                                defaultProcedurePoint:{\n                                                                    front:{destination:0, elapse:0, _elapseSamples:1},\n                                                                    back:{destination:0, elapse:0, _elapseSamples:1},\n                                                                },\n                                                            },\n                                                            dutyCycle:{\n                                                                reporting:false,\n                                                                velocity:1,\n                                                                phase:'off', // front - wait - back - off\n                                                                requestedPhase:undefined,\n                                                \n                                                                step:0,\n                                                                previous:0,\n                                                                current:0,\n                                                \n                                                                procedure:{\n                                                                    index:0,\n                                                                    sample:0,\n                                                                    front:[ {destination:0, elapse:0, _elapseSamples:1} ],\n                                                                    back:[ {destination:0, elapse:0, _elapseSamples:1} ],\n                                                                },\n                                                                defaultProcedurePoint:{\n                                                                    front:{destination:0, elapse:0, _elapseSamples:1},\n                                                                    back:{destination:0, elapse:0, _elapseSamples:1},\n                                                                },\n                                                            },\n                                                        };\n                                                        this._waveSettings = {\n                                                            additiveSynthesis:{\n                                                                sin:[1],\n                                                                cos:[]\n                                                            },\n                                                            phaseModulation:[\n                                                                {mux:2,power:1},\n                                                                {mux:3,power:1},\n                                                            ],\n                                                        };\n                                                \n                                                        this.port.onmessage = function(event){\n                                                            Object.entries(event.data).forEach(([key,value]) => {\n                                                                switch(key){\n                                                                    case 'start':\n                                                                        if(value != undefined){\n                                                                            self._envelope.gain.velocity = value;\n                                                                        }\n                                                                        Object.keys(self._envelope).forEach(aspect => {\n                                                                            if(self._envelope[aspect].requestedPhase == 'back' || self._envelope[aspect].phase == 'back' || self._envelope[aspect].phase == 'off'){\n                                                                                self._envelope[aspect].requestedPhase = 'front';\n                                                                            }\n                                                                        });\n                                                                    break;\n                                                                    case 'stop':\n                                                                        Object.keys(self._envelope).forEach(aspect => {\n                                                                            if(self._envelope[aspect].requestedPhase == 'front' || self._envelope[aspect].phase == 'front' || self._envelope[aspect].phase == 'wait'){\n                                                                                self._envelope[aspect].requestedPhase = 'back';\n                                                                            }\n                                                                        });\n                                                                    break;\n                                                                    case 'waveform': \n                                                                        self._state.waveform = value;\n                                                                        self._state.waveformGeneratorFunction = oscillator.waveFunction[value];\n                                                                    break;\n                                                                    case 'gain_useControl': \n                                                                        self._state.gain_useControl = value;\n                                                                    break;\n                                                                    case 'detune_useControl': \n                                                                        self._state.detune_useControl = value;\n                                                                    break;\n                                                                    case 'dutyCycle_useControl': \n                                                                        self._state.dutyCycle_useControl = value;\n                                                                    break;\n                                                                    case 'gain_envelope':\n                                                                        Object.entries(value).forEach(([phase,points]) => {\n                                                                            if( points != undefined && points.length != 0 ){\n                                                                                self._envelope.gain.procedure[phase] = points.map(point => {\n                                                                                    return {\n                                                                                        destination:point.destination, \n                                                                                        elapse:point.elapse, \n                                                                                        _elapseSamples:point.elapse == 0 ? 1 : sampleRate*point.elapse\n                                                                                    };\n                                                                                });\n                                                                            }else{\n                                                                                self._envelope.gain.procedure[phase] = [self._envelope.gain.defaultProcedurePoint[phase]];\n                                                                            }\n                                                                        });\n                                                                    break;\n                                                                    case 'detune_envelope':\n                                                                        Object.entries(value).forEach(([phase,points]) => {\n                                                                            if( points != undefined && points.length != 0 ){\n                                                                                self._envelope.detune.procedure[phase] = points.map(point => {\n                                                                                    return {\n                                                                                        destination:point.destination, \n                                                                                        elapse:point.elapse, \n                                                                                        _elapseSamples:point.elapse == 0 ? 1 : sampleRate*point.elapse\n                                                                                    };\n                                                                                });\n                                                                            }else{\n                                                                                self._envelope.detune.procedure[phase] = [self._envelope.detune.defaultProcedurePoint[phase]];\n                                                                            }\n                                                                        });\n                                                                    break;\n                                                                    case 'dutyCycle_envelope':\n                                                                        Object.entries(value).forEach(([phase,points]) => {\n                                                                            if( points != undefined && points.length != 0 ){\n                                                                                self._envelope.dutyCycle.procedure[phase] = points.map(point => {\n                                                                                    return {\n                                                                                        destination:point.destination, \n                                                                                        elapse:point.elapse, \n                                                                                        _elapseSamples:point.elapse == 0 ? 1 : sampleRate*point.elapse\n                                                                                    };\n                                                                                });\n                                                                            }else{\n                                                                                self._envelope.dutyCycle.procedure[phase] = [self._envelope.dutyCycle.defaultProcedurePoint[phase]];\n                                                                            }\n                                                                        });\n                                                                    break;\n                                                                    case 'gain_reporting': \n                                                                        self._envelope.gain.reporting = value;\n                                                                    break;\n                                                                    case 'detune_reporting': \n                                                                        self._envelope.detune.reporting = value;\n                                                                    break;\n                                                                    case 'dutyCycle_reporting': \n                                                                        self._envelope.dutyCycle.reporting = value;\n                                                                    break;\n                                                                    case 'additiveSynthesis_sin':\n                                                                        self._waveSettings.additiveSynthesis.sin = value;\n                                                                    break;\n                                                                    case 'additiveSynthesis_cos':\n                                                                        self._waveSettings.additiveSynthesis.cos = value;\n                                                                    break;\n                                                                    case 'phaseModulation_settings':\n                                                                        self._waveSettings.phaseModulation = value;\n                                                                    break;\n                                                                }\n                                                            });\n                                                        };\n                                                        this.port.start();\n                                                    }\n                                                \n                                                    process(inputs, outputs, parameters){\n                                                        //envelope activation\n                                                            this.activatePhase();\n                                                            if( this._envelope.gain.phase == 'off'){ return true; }\n                                                \n                                                        //io\n                                                            const output = outputs[0];\n                                                            const gainControl = inputs[0]; \n                                                            const detuneControl = inputs[1];\n                                                            const dutyCycleControl = inputs[2];\n                                                \n                                                        //oscillation generation\n                                                            const frequency_useFirstOnly = parameters.frequency.length == 1;\n                                                            const dutyCycle_useFirstOnly = parameters.dutyCycle.length == 1;\n                                                            const detune_useFirstOnly = parameters.detune.length == 1;\n                                                            const gain_useFirstOnly = parameters.gain.length == 1;\n                                                \n                                                        for(let channel = 0; channel < output.length; channel++){\n                                                            for(let a = 0; a < output[channel].length; a++){\n                                                                //envelope calculation\n                                                                    //gain\n                                                                        if(this._envelope.gain.phase == 'front' || this._envelope.gain.phase == 'back'){\n                                                                            const procedure_phase = this._envelope.gain.procedure[this._envelope.gain.phase];\n                                                                            if( currentFrame+a - this._envelope.gain.procedure.sample >= procedure_phase[this._envelope.gain.procedure.index]._elapseSamples ){\n                                                                                this._envelope.gain.procedure.index++;\n                                                                                this._envelope.gain.procedure.sample = currentFrame+a;\n                                                                                if( this._envelope.gain.procedure.index >= procedure_phase.length ){\n                                                                                    if(this._envelope.gain.phase == 'front'){\n                                                                                        this._envelope.gain.phase = 'wait';\n                                                                                        this.reportPhase_gain();\n                                                                                        this._envelope.gain.step = 0;\n                                                                                    }else if(this._envelope.gain.phase == 'back'){\n                                                                                        this._envelope.gain.phase = 'off';\n                                                                                        this.reportPhase_gain();\n                                                                                        this._envelope.gain.step = 0;\n                                                                                    }\n                                                                                }else{\n                                                                                    this._envelope.gain.previous = this._envelope.gain.current;\n                                                                                    // (velocity*destination - previousGain) / elapseSamples\n                                                                                    this._envelope.gain.step = (this._envelope.gain.velocity*procedure_phase[this._envelope.gain.procedure.index].destination - this._envelope.gain.previous)/procedure_phase[this._envelope.gain.procedure.index]._elapseSamples;                    \n                                                                                }\n                                                                            }\n                                                                        }\n                                                                        this._envelope.gain.current += this._envelope.gain.step;\n                                                                    //detune\n                                                                        if(this._envelope.detune.phase == 'front' || this._envelope.detune.phase == 'back'){\n                                                                            const procedure_phase = this._envelope.detune.procedure[this._envelope.detune.phase];\n                                                                            if( currentFrame+a - this._envelope.detune.procedure.sample >= procedure_phase[this._envelope.detune.procedure.index]._elapseSamples ){\n                                                                                this._envelope.detune.procedure.index++;\n                                                                                this._envelope.detune.procedure.sample = currentFrame+a;\n                                                                                if( this._envelope.detune.procedure.index >= procedure_phase.length ){\n                                                                                    if(this._envelope.detune.phase == 'front'){\n                                                                                        this._envelope.detune.phase = 'wait';\n                                                                                        this.reportPhase_detune();\n                                                                                        this._envelope.detune.step = 0;\n                                                                                    }else if(this._envelope.detune.phase == 'back'){\n                                                                                        this._envelope.detune.phase = 'off';\n                                                                                        this.reportPhase_detune();\n                                                                                        this._envelope.detune.step = 0;\n                                                                                    }\n                                                                                }else{\n                                                                                    this._envelope.detune.previous = this._envelope.detune.current;\n                                                                                    // (velocity*destination - previousGain) / elapseSamples\n                                                                                    this._envelope.detune.step = (this._envelope.detune.velocity*procedure_phase[this._envelope.detune.procedure.index].destination - this._envelope.detune.previous)/procedure_phase[this._envelope.detune.procedure.index]._elapseSamples;                    \n                                                                                }\n                                                                            }\n                                                                        }\n                                                                        this._envelope.detune.current += this._envelope.detune.step;\n                                                                    //dutyCycle\n                                                                        if(this._envelope.dutyCycle.phase == 'front' || this._envelope.dutyCycle.phase == 'back'){\n                                                                            const procedure_phase = this._envelope.dutyCycle.procedure[this._envelope.dutyCycle.phase];\n                                                                            if( currentFrame+a - this._envelope.dutyCycle.procedure.sample >= procedure_phase[this._envelope.dutyCycle.procedure.index]._elapseSamples ){\n                                                                                this._envelope.dutyCycle.procedure.index++;\n                                                                                this._envelope.dutyCycle.procedure.sample = currentFrame+a;\n                                                                                if( this._envelope.dutyCycle.procedure.index >= procedure_phase.length ){\n                                                                                    if(this._envelope.dutyCycle.phase == 'front'){\n                                                                                        this._envelope.dutyCycle.phase = 'wait';\n                                                                                        this.reportPhase_dutyCycle();\n                                                                                        this._envelope.dutyCycle.step = 0;\n                                                                                    }else if(this._envelope.dutyCycle.phase == 'back'){\n                                                                                        this._envelope.dutyCycle.phase = 'off';\n                                                                                        this.reportPhase_dutyCycle();\n                                                                                        this._envelope.dutyCycle.step = 0;\n                                                                                    }\n                                                                                }else{\n                                                                                    this._envelope.dutyCycle.previous = this._envelope.dutyCycle.current;\n                                                                                    // (velocity*destination - previousGain) / elapseSamples\n                                                                                    this._envelope.dutyCycle.step = (this._envelope.dutyCycle.velocity*procedure_phase[this._envelope.dutyCycle.procedure.index].destination - this._envelope.dutyCycle.previous)/procedure_phase[this._envelope.dutyCycle.procedure.index]._elapseSamples;                    \n                                                                                }\n                                                                            }\n                                                                        }\n                                                                        this._envelope.dutyCycle.current += this._envelope.dutyCycle.step;\n                                                \n                                                                //aspect calculation\n                                                                    const gain = this._envelope.gain.current * (this._state.gain_useControl ? gainControl[channel][a] : (gain_useFirstOnly ? parameters.gain[0] : parameters.gain[a]));\n                                                                    const detune = this._envelope.detune.current + (this._state.detune_useControl ? detuneControl[channel][a] : (detune_useFirstOnly ? parameters.detune[0] : parameters.detune[a]));\n                                                                    const dutyCycle = this._envelope.dutyCycle.current + (this._state.dutyCycle_useControl ? dutyCycleControl[channel][a] : (dutyCycle_useFirstOnly ? parameters.dutyCycle[0] : parameters.dutyCycle[a]));\n                                                \n                                                                //wave calculation\n                                                                    const frequency = frequency_useFirstOnly ? parameters.frequency[0] : parameters.frequency[a];\n                                                                    this._wavePosition += (frequency*(detune*oscillator.detuneMux + 1))/sampleRate;\n                                                                    const localWavePosition = this._wavePosition - (Math.trunc(this._wavePosition) - (this._waveComplexityLength - 1));\n                                                                    output[channel][a] = gain*this._state.waveformGeneratorFunction(localWavePosition,dutyCycle,this._waveSettings);\n                                                            }\n                                                        }\n                                                \n                                                        return true;\n                                                    }\n                                                \n                                                    activatePhase(){\n                                                        //gain\n                                                            if( this._envelope.gain.requestedPhase != undefined && this._envelope.gain.requestedPhase != this._envelope.gain.phase ){\n                                                                this._envelope.gain.phase = this._envelope.gain.requestedPhase;\n                                                                this.reportPhase_gain();\n                                                                this._envelope.gain.requestedPhase = undefined;\n                                                                this._envelope.gain.procedure.sample = currentFrame;\n                                                                this._envelope.gain.procedure.index = 0;\n                                                                this._envelope.gain.previous = this._envelope.gain.current;\n                                                                // (velocity*destination - previousGain) / elapseSamples\n                                                                this._envelope.gain.step = (this._envelope.gain.velocity*this._envelope.gain.procedure[this._envelope.gain.phase][this._envelope.gain.procedure.index].destination - this._envelope.gain.previous)/this._envelope.gain.procedure[this._envelope.gain.phase][this._envelope.gain.procedure.index]._elapseSamples;\n                                                                if( this._envelope.gain.phase == 'start' ){ this._wavePosition = 0; }\n                                                            }\n                                                        //detune\n                                                            if( this._envelope.detune.requestedPhase != undefined && this._envelope.detune.requestedPhase != this._envelope.detune.phase ){\n                                                                this._envelope.detune.phase = this._envelope.detune.requestedPhase;\n                                                                this.reportPhase_detune();\n                                                                this._envelope.detune.requestedPhase = undefined;\n                                                                this._envelope.detune.procedure.sample = currentFrame;\n                                                                this._envelope.detune.procedure.index = 0;\n                                                                this._envelope.detune.previous = this._envelope.detune.current;\n                                                                // (velocity*destination - previousGain) / elapseSamples\n                                                                this._envelope.detune.step = (this._envelope.detune.velocity*this._envelope.detune.procedure[this._envelope.detune.phase][this._envelope.detune.procedure.index].destination - this._envelope.detune.previous)/this._envelope.detune.procedure[this._envelope.detune.phase][this._envelope.detune.procedure.index]._elapseSamples;\n                                                            }\n                                                        //dutyCycle\n                                                            if( this._envelope.dutyCycle.requestedPhase != undefined && this._envelope.dutyCycle.requestedPhase != this._envelope.dutyCycle.phase ){\n                                                                this._envelope.dutyCycle.phase = this._envelope.dutyCycle.requestedPhase;\n                                                                this.reportPhase_dutyCycle();\n                                                                this._envelope.dutyCycle.requestedPhase = undefined;\n                                                                this._envelope.dutyCycle.procedure.sample = currentFrame;\n                                                                this._envelope.dutyCycle.procedure.index = 0;\n                                                                this._envelope.dutyCycle.previous = this._envelope.dutyCycle.current;\n                                                                // (velocity*destination - previousGain) / elapseSamples\n                                                                this._envelope.dutyCycle.step = (this._envelope.dutyCycle.velocity*this._envelope.dutyCycle.procedure[this._envelope.dutyCycle.phase][this._envelope.dutyCycle.procedure.index].destination - this._envelope.dutyCycle.previous)/this._envelope.dutyCycle.procedure[this._envelope.dutyCycle.phase][this._envelope.dutyCycle.procedure.index]._elapseSamples;\n                                                            }\n                                                    }\n                                                \n                                                    reportPhase_gain(){\n                                                        const self = this;\n                                                        if( !self._envelope.gain.reporting ){return;}\n                                                        this.port.postMessage( {gain:self._envelope.gain.phase} );\n                                                    };\n                                                    reportPhase_detune(){\n                                                        const self = this;\n                                                        if( !self._envelope.detune.reporting ){return;}\n                                                        this.port.postMessage( {detune:self._envelope.detune.phase} );\n                                                    };\n                                                    reportPhase_dutyCycle(){\n                                                        const self = this;\n                                                        if( !self._envelope.dutyCycle.reporting ){return;}\n                                                        this.port.postMessage( {dutyCycle:self._envelope.dutyCycle.phase} );\n                                                    };\n                                                \n                                                    static waveFunction = {\n                                                        sine:function(localWavePosition,dutyCycle,waveSettings){\n                                                            return Math.sin( localWavePosition * oscillator.twoPI );\n                                                        },\n                                                        square:function(localWavePosition,dutyCycle,waveSettings){\n                                                            return localWavePosition < dutyCycle ? 1 : -1;\n                                                        },\n                                                        triangle:function(localWavePosition,dutyCycle,waveSettings){\n                                                            if(localWavePosition < dutyCycle/2){\n                                                                return 2*localWavePosition / dutyCycle;\n                                                            }else if(localWavePosition >= 1 - dutyCycle/2){\n                                                                return (2*localWavePosition - 2) / dutyCycle;\n                                                            }else{\n                                                                return (2*localWavePosition - 1) / (dutyCycle - 1);\n                                                            }\n                                                        },\n                                                        noise:function(localWavePosition,dutyCycle,waveSettings){\n                                                            return Math.random()*2 - 1;\n                                                        },\n                                                        additiveSynthesis:function(localWavePosition,dutyCycle,waveSettings){\n                                                            let output = 0;\n                                                            waveSettings.additiveSynthesis.sin.forEach((value,index) => {\n                                                                output += value*Math.sin( (index+1)*oscillator.twoPI*localWavePosition );\n                                                            });\n                                                            waveSettings.additiveSynthesis.cos.forEach((value,index) => {\n                                                                output += value*Math.sin( (index+1)*oscillator.twoPI*localWavePosition );\n                                                            });\n                                                            return output;\n                                                        },\n                                                        phaseModulation:function(localWavePosition,dutyCycle,waveSettings){\n                                                            const modulationSettings = waveSettings.phaseModulation;\n                                                \n                                                            let output = 0;\n                                                            for(let a = 0; a < modulationSettings.length; a++){\n                                                                output = modulationSettings[a].power*Math.sin(\n                                                                    modulationSettings[a].mux*oscillator.twoPI*localWavePosition + oscillator.halfPI*output\n                                                                );\n                                                            }\n                                                \n                                                            return output;\n                                                        },\n                                                    };\n                                                }\n                                                registerProcessor('oscillator', oscillator);\n                                            "],{type:"text/javascript"}),class:class extends AudioWorkletNode{constructor(e,t={}){t.numberOfInputs=3,t.numberOfOutputs=1,t.channelCount=1,super(e,"oscillator",t);const n=this;this._state={waveform:"sine",gain_useControl:!1,detune_useControl:!1,dutyCycle_useControl:!1},this._gain_envelope={front:[{destination:1,elapse:0}],back:[{destination:0,elapse:0}]},this._detune_envelope={reporting:!1,front:[{destination:0,elapse:0}],back:[{destination:0,elapse:0}]},this._dutyCycle_envelope={reporting:!1,front:[{destination:.5,elapse:0}],back:[{destination:.5,elapse:0}]},this._reporting={gain:!1,detune:!1,dutyCycle:!1},this._additiveSynthesisSettings={sin:[1],cos:[]},this._phaseModulation_settings=[{mux:2,power:1},{mux:3,power:1}],this.port.onmessage=function(e){if(null==n.onEnvelopeEvent)return;const t=Object.entries(e.data)[0];n.onEnvelopeEvent({aspect:t[0],phase:t[1]})},this.start=function(e=1){this.port.postMessage({start:e})},this.stop=function(){this.port.postMessage({stop:void 0})},this.onEnvelopeEvent=function(){}}get frequency(){return this.parameters.get("frequency")}get gain(){return this.parameters.get("gain")}get detune(){return this.parameters.get("detune")}get dutyCycle(){return this.parameters.get("dutyCycle")}get waveform(){return this._state.waveform}set waveform(e){this._state.waveform=e,this.port.postMessage({waveform:e})}get gain_useControl(){return this._state.gain_useControl}set gain_useControl(e){this._state.gain_useControl=e,this.port.postMessage({gain_useControl:e})}get detune_useControl(){return this._state.detune_useControl}set detune_useControl(e){this._state.detune_useControl=e,this.port.postMessage({detune_useControl:e})}get dutyCycle_useControl(){return this._state.dutyCycle_useControl}set dutyCycle_useControl(e){this._state.dutyCycle_useControl=e,this.port.postMessage({dutyCycle_useControl:e})}get gain_envelope(){return JSON.parse(JSON.stringify(this._gain_envelope))}set gain_envelope(e){this._gain_envelope=e,this.port.postMessage({gain_envelope:e})}get detune_envelope(){return JSON.parse(JSON.stringify(this._detune_envelope))}set detune_envelope(e){this._detune_envelope=e,this.port.postMessage({detune_envelope:e})}get dutyCycle_envelope(){return JSON.parse(JSON.stringify(this._dutyCycle_envelope))}set dutyCycle_envelope(e){this._dutyCycle_envelope=e,this.port.postMessage({dutyCycle_envelope:e})}get gain_envelope_reporting(){return this._reporting.gain}set gain_envelope_reporting(e){this._reporting.gain=e,this.port.postMessage({gain_reporting:e})}get detune_envelope_reporting(){return this._reporting.detune}set detune_envelope_reporting(e){this._reporting.detune=e,this.port.postMessage({detune_reporting:e})}get dutyCycle_envelope_reporting(){return this._reporting.dutyCycle}set dutyCycle_envelope_reporting(e){this._reporting.dutyCycle=e,this.port.postMessage({dutyCycle_reporting:e})}get additiveSynthesis_sin(){return JSON.parse(JSON.stringify(this._additiveSynthesisSettings.sin))}set additiveSynthesis_sin(e){this._additiveSynthesisSettings.sin=e,this.port.postMessage({additiveSynthesis_sin:e})}get additiveSynthesis_cos(){return JSON.parse(JSON.stringify(this._additiveSynthesisSettings.cos))}set additiveSynthesis_cos(e){this._additiveSynthesisSettings.cos=e,this.port.postMessage({additiveSynthesis_cos:e})}get phaseModulation_settings(){return JSON.parse(JSON.stringify(this._phaseModulation_settings))}set phaseModulation_settings(e){this._phaseModulation_settings=e,this.port.postMessage({_phaseModulation_settings:e})}}},{name:"nothing",worklet:new Blob(["\n                                                class nothing extends AudioWorkletProcessor{\n                                                    constructor(options){\n                                                        //construct class instance\n                                                            super(options);\n                                                \n                                                        //instance state\n                                                            this.shutdown = false;\n                                                \n                                                        //setup message receiver\n                                                            const self = this;\n                                                            this.port.onmessage = function(event){\n                                                                switch(event.data.command){\n                                                                    //shutdown\n                                                                        case 'shutdown':\n                                                                            self.shutdown = true;\n                                                                        break;\n                                                                }\n                                                            };\n                                                    }\n                                                \n                                                    process(inputs, outputs, parameters){\n                                                        if(this.shutdown){ return false; }\n                                                        \n                                                        const input = inputs[0];\n                                                        const output = outputs[0];\n                                                \n                                                        for(let channel = 0; channel < input.length; channel++){\n                                                            output[channel].set(input[channel]);\n                                                        }\n                                                \n                                                        return true;\n                                                    }\n                                                }\n                                                registerProcessor('nothing', nothing);\n                                            "],{type:"text/javascript"}),class:class extends AudioWorkletNode{constructor(e,t={}){t.numberOfInputs=1,t.numberOfOutputs=1,t.channelCount=1,super(e,"nothing",t),this.shutdown=function(){this.port.postMessage({command:"shutdown"}),this.port.close()}}}},{name:"momentaryAmplitudeMeter",worklet:new Blob(["\n                                                class momentaryAmplitudeMeter extends AudioWorkletProcessor{\n                                                    static get parameterDescriptors(){\n                                                        return [\n                                                            {\n                                                                name: 'active',\n                                                                defaultValue: 1, // 0 - off / 1 - on\n                                                                minValue: 0,\n                                                                maxValue: 1,\n                                                                automationRate: 'k-rate',\n                                                            },{\n                                                                name: 'fullSample',\n                                                                defaultValue: 0, // 0 - only use the current frame / 1 - collect and use all the data from every frame since the last time a value was returned\n                                                                minValue: 0,\n                                                                maxValue: 1,\n                                                                automationRate: 'k-rate',\n                                                            },{\n                                                                name: 'updateMode',\n                                                                defaultValue: 0, // 0 - by timer / 1 - by request\n                                                                minValue: 0,\n                                                                maxValue: 1,\n                                                                automationRate: 'k-rate',\n                                                            },{\n                                                                name: 'updateDelay',\n                                                                defaultValue: 100,\n                                                                minValue: 1,\n                                                                maxValue: 1000,\n                                                                automationRate: 'k-rate',\n                                                            },{\n                                                                name: 'calculationMode',\n                                                                defaultValue: 3, //max, min, average, absMax, absMin, absAverage\n                                                                minValue: 0,\n                                                                maxValue: 5,\n                                                                automationRate: 'k-rate',\n                                                            }\n                                                        ];\n                                                    }\n                                                \n                                                    constructor(options){\n                                                        super(options);\n                                                        const self = this;\n                                                        this._lastUpdate = currentTime;\n                                                        this._dataArray = [];\n                                                        this._readingRequested = false;\n                                                        this._sync = false;\n                                                \n                                                        this.port.onmessage = function(event){\n                                                            if(event.data == 'sync'){\n                                                                self._sync = true;\n                                                            }\n                                                            if(event.data == 'readingRequest'){\n                                                                self._readingRequested = true;\n                                                            }\n                                                        };\n                                                        this.port.start();\n                                                    }\n                                                \n                                                    process(inputs, outputs, parameters){\n                                                        const input = inputs[0];\n                                                        if(input.length == 0){ return true; }\n                                                \n                                                        const fullSample = parameters.fullSample[0];\n                                                        const updateDelay = parameters.updateDelay[0];\n                                                        const calculationMode = parameters.calculationMode[0];\n                                                \n                                                        if( parameters.active[0] == 0 ){ return true; }\n                                                \n                                                        if(fullSample){\n                                                            this._dataArray.push(...input[0]);\n                                                        }else{\n                                                            this._dataArray = new Array(...input[0]);\n                                                        }\n                                                \n                                                        if( \n                                                            this._sync ||\n                                                            (parameters.updateMode[0] == 0 && (currentTime - this._lastUpdate > updateDelay/1000)) ||\n                                                            (parameters.updateMode[0] == 1 && this._readingRequested)\n                                                        ){\n                                                            this._sync = false;\n                                                            this._readingRequested = false;\n                                                            this._lastUpdate = currentTime;\n                                                \n                                                            switch(calculationMode[0]){\n                                                                case 0: default:\n                                                                    this.port.postMessage( Math.max(...this._dataArray) );\n                                                                break;\n                                                                case 1:\n                                                                    this.port.postMessage( Math.min(...this._dataArray) );\n                                                                break;\n                                                                case 2:\n                                                                    this.port.postMessage( this._dataArray.reduce((a,b) => a + b, 0) / this._dataArray.length );\n                                                                break;\n                                                                case 3:\n                                                                    this.port.postMessage( Math.max(...(this._dataArray).map(a => Math.abs(a)) ) );\n                                                                break;\n                                                                case 4:\n                                                                    this.port.postMessage( Math.min(...(this._dataArray).map(a => Math.abs(a)) ) );\n                                                                break;\n                                                                case 5:\n                                                                    this.port.postMessage( this._dataArray.map(a => Math.abs(a)).reduce((a,b) => a + b, 0) / this._dataArray.length );\n                                                                break;\n                                                            }\n                                                \n                                                            if(fullSample){\n                                                                this._dataArray = [];\n                                                            }\n                                                        }\n                                                \n                                                        return true;\n                                                    }\n                                                }\n                                                registerProcessor('momentaryAmplitudeMeter', momentaryAmplitudeMeter);\n                                            "],{type:"text/javascript"}),class:class extends AudioWorkletNode{constructor(e,t={}){t.numberOfInputs=1,t.numberOfOutputs=0,t.channelCount=1,super(e,"momentaryAmplitudeMeter",t);const n=this;this._active=!0,this._fullSample=!1,this._updateMode=0,this._updateDelay=100,this._calculationMode=3,this.reading=function(){},this.port.onmessage=function(e){try{n.reading(e.data)}catch(e){}},this.port.start(),this.requestReading=function(){this.port.postMessage("readingRequest")},this.sync=function(){this.port.postMessage("sync")}}get active(){return this._active}set active(e){this._active=e,this.parameters.get("active").setValueAtTime(this._active?1:0,0)}get fullSample(){return this._fullSample}set fullSample(e){this._fullSample=e,this.parameters.get("fullSample").setValueAtTime(this._fullSample?1:0,0)}get updateMode(){return this._updateMode}set updateMode(e){this._updateMode=e,this.parameters.get("updateMode").setValueAtTime(this._updateMode,0)}get updateDelay(){return this._updateDelay}set updateDelay(e){this._updateDelay=e,this.parameters.get("updateDelay").setValueAtTime(this._updateDelay,0)}get calculationMode(){return this._calculationMode}set calculationMode(e){this._calculationMode=e,this.parameters.get("calculationMode").setValueAtTime(this._calculationMode,0)}}}],readyCount:0},wasm:{list:[{name:"audio_buffer_type_1",worklet:new Blob(["\n                                                class audio_buffer_type_1 extends AudioWorkletProcessor {\n                                                    static get parameterDescriptors(){\n                                                        return [\n                                                            {\n                                                                name: 'rate',\n                                                                defaultValue: 1,\n                                                                minValue: -8,\n                                                                maxValue: 8,\n                                                                automationRate: 'a-rate',\n                                                            },\n                                                        ];\n                                                    }\n                                                \n                                                    attachBuffers(){\n                                                        this.playheadPositionReadout = { pointer: this.wasm.exports.get_playhead_position_readout_pointer() };\n                                                        this.playheadPositionReadout.buffer = new Uint32Array(this.wasm.exports.memory.buffer, this.playheadPositionReadout.pointer, 1);\n                                                        this.outputFrame = { pointer: this.wasm.exports.get_output_pointer() };\n                                                        this.outputFrame.buffer = new Float32Array(this.wasm.exports.memory.buffer, this.outputFrame.pointer, 128);\n                                                        this.rateFrame = { pointer: this.wasm.exports.get_rate_pointer() };\n                                                        this.rateFrame.buffer = new Float32Array(this.wasm.exports.memory.buffer, this.rateFrame.pointer, 128);\n                                                    }\n                                                \n                                                    constructor(options){\n                                                        //construct class instance\n                                                            super(options);\n                                                \n                                                        //instance state\n                                                            this.shutdown = false;\n                                                            this._state = {\n                                                                nodeConstructorTime: undefined,\n                                                                temporaryAudioData: undefined,\n                                                                rate_useControl: false,\n                                                            };\n                                                \n                                                        //setup message receiver\n                                                            const self = this;\n                                                            this.port.onmessage = function(event){\n                                                                switch(event.data.command){\n                                                                    //time sync\n                                                                        case 'log_nodeConstructorTime':\n                                                                            self._state.nodeConstructorTime = event.data.value;\n                                                                        break;\n                                                \n                                                                    //wasm initialization\n                                                                        case 'loadUncompiledWasm':\n                                                                            WebAssembly.compile(event.data.value).then(module => {\n                                                                                WebAssembly.instantiate(\n                                                                                    module,\n                                                                                    { env: {\n                                                                                        _onEnd: function(playhead_id){ self.port.postMessage({ command:'onEnd', value:playhead_id }); },\n                                                                                        _onLoop: function(playhead_id){ self.port.postMessage({ command:'onLoop', value:playhead_id }); },\n                                                    \n                                                                                        debug_: function(id, ...args){ console.log(id+':', args.join(' ')); },\n                                                                                    } },\n                                                                                ).then(result => {\n                                                                                    //save wasm processor to instance\n                                                                                        self.wasm = result;\n                                                    \n                                                                                    //attach buffers\n                                                                                        self.attachBuffers();\n                                                    \n                                                                                    //assemble additional wasm buffers\n                                                                                        self.audioBufferShovelFrame = { pointer: self.wasm.exports.get_audio_buffer_shovel_pointer() };\n                                                    \n                                                                                    //load data if necessary\n                                                                                        if(self._state.temporaryAudioData != undefined){\n                                                                                            self.transferAudioBufferDataIn(\n                                                                                                self._state.temporaryAudioData\n                                                                                            );\n                                                                                            self._state.temporaryAudioData = undefined;\n                                                                                        }\n                                                                                });\n                                                                            });\n                                                                        break;\n                                                                        case 'loadWasm':\n                                                                            WebAssembly.instantiate(\n                                                                                event.data.value,\n                                                                                { env: {\n                                                                                    _onEnd: function(playhead_id){ self.port.postMessage({ command:'onEnd', value:playhead_id }); },\n                                                                                    _onLoop: function(playhead_id){ self.port.postMessage({ command:'onLoop', value:playhead_id }); },\n                                                \n                                                                                    debug_: function(id, ...args){ console.log(id+':', args.join(' ')); },\n                                                                                } },\n                                                                            ).then(result => {\n                                                                                //save wasm processor to instance\n                                                                                    self.wasm = result;\n                                                \n                                                                                //attach buffers\n                                                                                    self.attachBuffers();\n                                                \n                                                                                //assemble additional wasm buffers\n                                                                                    self.audioBufferShovelFrame = { pointer: self.wasm.exports.get_audio_buffer_shovel_pointer() };\n                                                \n                                                                                //load data if necessary\n                                                                                    if(self._state.temporaryAudioData != undefined){\n                                                                                        self.transferAudioBufferDataIn(\n                                                                                            self._state.temporaryAudioData\n                                                                                        );\n                                                                                        self._state.temporaryAudioData = undefined;\n                                                                                    }\n                                                                            });\n                                                                        break;\n                                                                    \n                                                                    //load data\n                                                                        case \"loadAudioData\":\n                                                                            if(self.wasm == undefined){\n                                                                                self._state.temporaryAudioData = event.data.value;\n                                                                            } else {\n                                                                                self.transferAudioBufferDataIn(event.data.value);\n                                                                            }\n                                                \n                                                                            self.port.postMessage({\n                                                                                command: 'loadAudioData_loadComplete', \n                                                                                value: undefined,\n                                                                            });\n                                                                        break;\n                                                \n                                                                    //performance control\n                                                                        case 'play':\n                                                                            self.wasm.exports.play();\n                                                                        break;\n                                                                        case 'stop':\n                                                                            self.wasm.exports.stop();\n                                                                        break;\n                                                \n                                                                        case 'set_loop_active':\n                                                                            self.wasm.exports.set_loop_active(event.data.value);\n                                                                        break;\n                                                \n                                                                        case 'set_playhead_position':\n                                                                            self.wasm.exports.set_playhead_position(event.data.value);\n                                                                        break;\n                                                                        case 'got_to_start':\n                                                                            self.wasm.exports.got_to_start();\n                                                                        break;\n                                                                        case 'got_to_end':\n                                                                            self.wasm.exports.got_to_end();\n                                                                        break;\n                                                \n                                                                        case 'section_start':\n                                                                            console.log(\"section_start:\", event.data.value);\n                                                                            self.wasm.exports.section_start(event.data.value);\n                                                                        break;\n                                                                        case 'section_end':\n                                                                            console.log(\"section_end:\", event.data.value);\n                                                                            self.wasm.exports.section_end(event.data.value);\n                                                                        break;\n                                                                        case 'maximize_section':\n                                                                            self.wasm.exports.maximize_section();\n                                                                        break;\n                                                                        case 'invert_section':\n                                                                            self.wasm.exports.invert_section();\n                                                                        break;\n                                                \n                                                                    //status\n                                                                        case 'getPlayheadPosition':\n                                                                            if(event.data.value.calculateDelay){\n                                                                                const calculatedPresentTime = globalThis.currentTime*1000 + self._state.nodeConstructorTime;\n                                                                                const sendingDelay = calculatedPresentTime - event.data.sendTime;\n                                                    \n                                                                                self.port.postMessage({\n                                                                                    command:'getPlayheadPosition_return', \n                                                                                    value: {\n                                                                                        playheadPosition: self.playheadPositionReadout.buffer[0],\n                                                                                        sendingDelay: sendingDelay,\n                                                                                    },\n                                                                                    sendTime: globalThis.currentTime*1000,\n                                                                                });\n                                                                            } else {\n                                                                                self.port.postMessage({\n                                                                                    command:'getPlayheadPosition_return', \n                                                                                    value: {\n                                                                                        playheadPosition: self.playheadPositionReadout.buffer[0],\n                                                                                    },\n                                                                                });\n                                                                            }\n                                                                        break;\n                                                \n                                                                    //use control\n                                                                        case 'rate_useControl': \n                                                                            self._state.rate_useControl = event.data.value;\n                                                                        break;\n                                                \n                                                                    //shutdown\n                                                                        case 'shutdown':\n                                                                            self.shutdown = true;\n                                                                        break;\n                                                                }\n                                                            };\n                                                    }\n                                                \n                                                    transferAudioBufferDataIn(audio_data){\n                                                        this.wasm.exports.clear_audio_buffer();\n                                                \n                                                        const shovelSize = this.wasm.exports.get_shovel_size();\n                                                        const block_count = (Math.floor(audio_data.length / shovelSize) + 1);\n                                                        for(let block = 0; block < block_count; block++) {\n                                                            //reattach shovel buffer \n                                                                this.audioBufferShovelFrame.buffer = new Float32Array(\n                                                                    this.wasm.exports.memory.buffer, \n                                                                    this.wasm.exports.get_audio_buffer_shovel_pointer(), \n                                                                    shovelSize\n                                                                );\n                                                \n                                                            //shovel block in\n                                                                const data_to_send = audio_data.slice( block*shovelSize, (block+1)*shovelSize );\n                                                                this.audioBufferShovelFrame.buffer.set(data_to_send);\n                                                                this.wasm.exports.shovel_audio_data_in(data_to_send.length);\n                                                        }\n                                                \n                                                        this.attachBuffers();\n                                                    }\n                                                \n                                                    process(inputs, outputs, parameters){\n                                                        if(this.shutdown){ return false; }\n                                                        if(this.wasm == undefined){ return true; }\n                                                \n                                                        //collect inputs/outputs\n                                                            const output = outputs[0];\n                                                            const rateControl = inputs[0];\n                                                \n                                                        //populate input buffers\n                                                            const rate_useFirstOnly = this._state.rate_useControl ? false : parameters.rate.length == 1;\n                                                            this.rateFrame.buffer.set( this._state.rate_useControl && rateControl[0] != undefined ? rateControl[0] : parameters.rate );\n                                                \n                                                        //have wasm process data, and copy results to channels\n                                                            this.wasm.exports.process(\n                                                                rate_useFirstOnly,\n                                                            );\n                                                            for(let channel = 0; channel < output.length; channel++){\n                                                                output[channel].set(this.outputFrame.buffer);\n                                                            }\n                                                \n                                                        return true;\n                                                    }\n                                                }\n                                                registerProcessor('audio_buffer_type_1', audio_buffer_type_1);\n                                            "],{type:"text/javascript"}),class:class e extends AudioWorkletNode{static wasm_url="wasm/audio_processing/audio_buffer_type_1.production.wasm";static fetch_promise;static compiled_wasm;constructor(n,o={}){const r=performance.now();let a,i;o.numberOfInputs=1,o.numberOfOutputs=1,o.channelCount=1,super(n,"audio_buffer_type_1",o),this.nodeConstructorTime=r,this.port.postMessage({command:"log_nodeConstructorTime",value:this.nodeConstructorTime}),t.audioWorklet.requestWasm(e,this),this._state={audioFileLength:void 0,loop:!1,section:{start:0,end:1}},this.loadAudioData=function(e){let t=0==this._state.section.start&&this._state.section.end==this._state.audioFileLength;return this._state.audioFileLength=e.length,(t||this._state.audioFileLength<this._state.section.start&&this._state.audioFileLength<this._state.section.end)&&(this._state.section.start=0,this._state.section.end=this._state.audioFileLength),this._state.audioFileLength<this._state.section.start&&(this._state.section.start=this._state.audioFileLength),this._state.audioFileLength<this._state.section.end&&(this._state.section.end=this._state.audioFileLength),this.port.postMessage({command:"loadAudioData",value:e}),new Promise((e,t)=>{a=e})},this.play=function(){this.port.postMessage({command:"play",value:void 0})},this.stop=function(){this.port.postMessage({command:"stop",value:void 0})},this.gotoStart=function(){this.port.postMessage({command:"go_to_start",value:void 0})},this.gotoEnd=function(){this.port.postMessage({command:"go_to_end",value:void 0})},this.maximizeSection=function(){this._state.section.start=0,this._state.section.end=this._state.audioFileLength,this.port.postMessage({command:"maximize_section",value:void 0})},this.invertSection=function(){const e=this._state.section.start;this._state.section.start=this._state.section.end,this._state.section.end=e,this.port.postMessage({command:"invert_section",value:void 0})},this.getPlayheadPosition=function(e=!1){return this.port.postMessage({command:"getPlayheadPosition",value:{calculateDelay:e},sendTime:performance.now()}),new Promise((e,t)=>{i=e})},this.shutdown=function(){this.port.postMessage({command:"shutdown",value:void 0}),this.port.close()},this.onEnd=function(){},this.onLoop=function(){};const s=this;this.port.onmessage=function(e){switch(e.data.command){case"onEnd":s.onEnd(e.data.value);break;case"onLoop":s.onLoop(e.data.value);break;case"getPlayheadPosition_return":if(null!=i){if(null==e.data.value.sendingDelay)i(e.data.value.playheadPosition);else{const t=e.data.sendTime+r-performance.now(),n=e.data.value.sendingDelay+t;i({playheadPosition:e.data.value,resultDelay:n})}i=void 0}break;case"loadAudioData_loadComplete":a(),a=void 0}}}get length(){return this._state.audioFileLength}set playheadPosition(e){this.port.postMessage({command:"set_playhead_position",value:e})}get loop(){return this._state.loop}set loop(e){this._state.loop=e,this.port.postMessage({command:"set_loop_active",value:e})}get sectionStart(){return this._state.section.start}set sectionStart(e){e>this._state.audioFileLength-1&&(console.warn('audio_buffer_type_1 - attempting to select a section start position "'+e+'" which exceeds the audio data length "'+(this._state.audioFileLength-1)+'". Position will be corrected'),e=this._state.audioFileLength-1),e<0&&(console.warn("audio_buffer_type_1 - attempting to select a section start position below zero. Position will be corrected"),e=0),this._state.section.start=e,this.port.postMessage({command:"section_start",value:e})}get sectionEnd(){return this._state.section.end}set sectionEnd(e){e>this._state.audioFileLength-1&&(console.warn('audio_buffer_type_1 - attempting to select a section end position "'+e+'" which exceeds the audio data length "'+(this._state.audioFileLength-1)+'". Position will be corrected'),e=this._state.audioFileLength-1),e<0&&(console.warn("audio_buffer_type_1 - attempting to select a section end position below zero. Position will be corrected"),e=0),this._state.section.end=e,this.port.postMessage({command:"section_end",value:e})}get rate(){return this.parameters.get("rate")}get rate_useControl(){return this._state.rate_useControl}set rate_useControl(e){this._state.rate_useControl=e,this.port.postMessage({command:"rate_useControl",value:e})}}},{name:"oscillator_type_1",worklet:new Blob(["\n                                                const debug = function(id, ...args){ console.log(id+':', args.join(' ')); };\n                                                \n                                                class oscillator_type_1 extends AudioWorkletProcessor {\n                                                    static starterFrequency = 440;\n                                                    static maxFrequency = 20000;\n                                                    static detuneMux = 0.1;\n                                                    static detuneBounds = 1/oscillator_type_1.detuneMux;\n                                                    static availableWaveforms = ['sine', 'square', 'triangle', 'noise'];\n                                                \n                                                    static get parameterDescriptors(){\n                                                        return [\n                                                            {\n                                                                name: 'frequency',\n                                                                defaultValue: oscillator_type_1.starterFrequency,\n                                                                minValue: 0,\n                                                                maxValue: oscillator_type_1.maxFrequency,\n                                                                automationRate: 'a-rate',\n                                                            },{\n                                                                name: 'gain',\n                                                                defaultValue: 1,\n                                                                minValue: -1,\n                                                                maxValue: 1,\n                                                                automationRate: 'a-rate',\n                                                            },{\n                                                                name: 'detune',\n                                                                defaultValue: 0,\n                                                                minValue: -oscillator_type_1.detuneBounds,\n                                                                maxValue: oscillator_type_1.detuneBounds,\n                                                                automationRate: 'a-rate',\n                                                            },{\n                                                                name: 'dutyCycle',\n                                                                defaultValue: 0.5,\n                                                                minValue: 0,\n                                                                maxValue: 1,\n                                                                automationRate: 'a-rate',\n                                                            },\n                                                        ];\n                                                    }\n                                                \n                                                    constructor(options){\n                                                        //construct class instance\n                                                            super(options);\n                                                \n                                                        //instance state\n                                                            this.shutdown = false;\n                                                            this._state = {\n                                                                gain_useControl: false,\n                                                                detune_useControl: false,\n                                                                dutyCycle_useControl: false,\n                                                \n                                                                selected_waveform: 0,\n                                                            };\n                                                \n                                                        //setup message receiver\n                                                            const self = this;\n                                                            this.port.onmessage = function(event){\n                                                                switch(event.data.command){\n                                                                    //wasm initialization\n                                                                        case 'loadUncompiledWasm':\n                                                                            WebAssembly.compile(event.data.value).then(module => {\n                                                                                WebAssembly.instantiate(\n                                                                                    module,\n                                                                                    { env: { Math_random: Math.random, debug_: debug, } },\n                                                                                ).then(result => {\n                                                                                    //save wasm processor to instance\n                                                                                        self.wasm = result;\n                                                    \n                                                                                    //assemble wasm buffers\n                                                                                        self.frequencyFrame = { pointer: self.wasm.exports.get_frequency_pointer() };\n                                                                                        self.frequencyFrame.buffer = new Float32Array(self.wasm.exports.memory.buffer, self.frequencyFrame.pointer, 128);\n                                                                                        self.gainFrame = { pointer: self.wasm.exports.get_gain_pointer() };\n                                                                                        self.gainFrame.buffer = new Float32Array(self.wasm.exports.memory.buffer, self.gainFrame.pointer, 128);\n                                                                                        self.detuneFrame = { pointer: self.wasm.exports.get_detune_pointer() };\n                                                                                        self.detuneFrame.buffer = new Float32Array(self.wasm.exports.memory.buffer, self.detuneFrame.pointer, 128);\n                                                                                        self.dutyCycleFrame = { pointer: self.wasm.exports.get_duty_cycle_pointer() };\n                                                                                        self.dutyCycleFrame.buffer = new Float32Array(self.wasm.exports.memory.buffer, self.dutyCycleFrame.pointer, 128);\n                                                                                        self.outputFrame = { pointer: self.wasm.exports.get_output_pointer() };\n                                                                                        self.outputFrame.buffer = new Float32Array(self.wasm.exports.memory.buffer, self.outputFrame.pointer, 128);\n                                                    \n                                                                                    //re-send waveform selection (just incase)\n                                                                                        self.wasm.exports.select_waveform(self._state.selected_waveform);\n                                                                                });\n                                                                            });\n                                                                        break;\n                                                                        case 'loadWasm':\n                                                                            WebAssembly.instantiate(\n                                                                                event.data.value,\n                                                                                { env: { Math_random: Math.random, debug_: debug, } },\n                                                                            ).then(result => {\n                                                                                //save wasm processor to instance\n                                                                                    self.wasm = result;\n                                                \n                                                                                //assemble wasm buffers\n                                                                                    self.frequencyFrame = { pointer: self.wasm.exports.get_frequency_pointer() };\n                                                                                    self.frequencyFrame.buffer = new Float32Array(self.wasm.exports.memory.buffer, self.frequencyFrame.pointer, 128);\n                                                                                    self.gainFrame = { pointer: self.wasm.exports.get_gain_pointer() };\n                                                                                    self.gainFrame.buffer = new Float32Array(self.wasm.exports.memory.buffer, self.gainFrame.pointer, 128);\n                                                                                    self.detuneFrame = { pointer: self.wasm.exports.get_detune_pointer() };\n                                                                                    self.detuneFrame.buffer = new Float32Array(self.wasm.exports.memory.buffer, self.detuneFrame.pointer, 128);\n                                                                                    self.dutyCycleFrame = { pointer: self.wasm.exports.get_duty_cycle_pointer() };\n                                                                                    self.dutyCycleFrame.buffer = new Float32Array(self.wasm.exports.memory.buffer, self.dutyCycleFrame.pointer, 128);\n                                                                                    self.outputFrame = { pointer: self.wasm.exports.get_output_pointer() };\n                                                                                    self.outputFrame.buffer = new Float32Array(self.wasm.exports.memory.buffer, self.outputFrame.pointer, 128);\n                                                \n                                                                                //re-send waveform selection (just incase)\n                                                                                    self.wasm.exports.select_waveform(self._state.selected_waveform);\n                                                                            });\n                                                                        break;\n                                                                    \n                                                                    //shutdown\n                                                                        case 'shutdown':\n                                                                            self.shutdown = true;\n                                                                        break;\n                                                \n                                                                    //use control\n                                                                        case 'gain_useControl': \n                                                                            self._state.gain_useControl = event.data.value;\n                                                                        break;\n                                                                        case 'detune_useControl': \n                                                                            self._state.detune_useControl = event.data.value;\n                                                                        break;\n                                                                        case 'dutyCycle_useControl': \n                                                                            self._state.dutyCycle_useControl = event.data.value;\n                                                                        break;\n                                                \n                                                                    //waveform\n                                                                        case 'waveform':\n                                                                            self._state.selected_waveform = oscillator_type_1.availableWaveforms.indexOf(event.data.value);\n                                                                            if(self.wasm == undefined){ return; }\n                                                                            self.wasm.exports.select_waveform(self._state.selected_waveform);\n                                                                        break;\n                                                                }\n                                                            };\n                                                    }\n                                                \n                                                    process(inputs, outputs, parameters){\n                                                        if(this.shutdown){ return false; }\n                                                        if(this.wasm == undefined){ return true; }\n                                                \n                                                        //collect inputs/outputs\n                                                            const output = outputs[0];\n                                                            const gainControl = inputs[0];\n                                                            const detuneControl = inputs[1];\n                                                            const dutyCycleControl = inputs[2];\n                                                \n                                                        //populate input buffers\n                                                            const frequency_useFirstOnly = parameters.frequency.length == 1;\n                                                            this.frequencyFrame.buffer.set( parameters.frequency );\n                                                \n                                                            const gain_useFirstOnly = this._state.gain_useControl ? false : parameters.gain.length == 1;\n                                                            this.gainFrame.buffer.set( this._state.gain_useControl ? gainControl[0] : parameters.gain );\n                                                \n                                                            const detune_useFirstOnly = this._state.detune_useControl ? false : parameters.detune.length == 1;\n                                                            this.detuneFrame.buffer.set( this._state.detune_useControl ? detuneControl[0] : parameters.detune );\n                                                \n                                                            const dutyCycle_useFirstOnly = this._state.dutyCycle_useControl ? false : parameters.dutyCycle.length == 1;\n                                                            this.dutyCycleFrame.buffer.set( this._state.dutyCycle_useControl ? dutyCycleControl[0] : parameters.dutyCycle );\n                                                \n                                                        //process data, and copy results to channels\n                                                            this.wasm.exports.process(\n                                                                frequency_useFirstOnly,\n                                                                gain_useFirstOnly,\n                                                                detune_useFirstOnly,\n                                                                dutyCycle_useFirstOnly,\n                                                            );\n                                                            output[0].set(this.outputFrame.buffer);\n                                                        \n                                                        return true;\n                                                    }\n                                                }\n                                                registerProcessor('oscillator_type_1', oscillator_type_1);\n                                            "],{type:"text/javascript"}),class:class e extends AudioWorkletNode{static wasm_url="wasm/audio_processing/oscillator_type_1.production.wasm";static fetch_promise;static compiled_wasm;constructor(n,o={}){o.numberOfInputs=3,o.numberOfOutputs=1,o.channelCount=1,super(n,"oscillator_type_1",o),t.audioWorklet.requestWasm(e,this),this._state={gain_useControl:!1,detune_useControl:!1,dutyCycle_useControl:!1,waveform:"sine"},this.shutdown=function(){this.port.postMessage({command:"shutdown",value:void 0}),this.port.close()}}get frequency(){return this.parameters.get("frequency")}get gain(){return this.parameters.get("gain")}get gain_useControl(){return this._state.gain_useControl}set gain_useControl(e){this._state.gain_useControl=e,this.port.postMessage({command:"gain_useControl",value:e})}get detune(){return this.parameters.get("detune")}get detune_useControl(){return this._state.detune_useControl}set detune_useControl(e){this._state.detune_useControl=e,this.port.postMessage({command:"detune_useControl",value:e})}get dutyCycle(){return this.parameters.get("dutyCycle")}get dutyCycle_useControl(){return this._state.dutyCycle_useControl}set dutyCycle_useControl(e){this._state.dutyCycle_useControl=e,this.port.postMessage({command:"dutyCycle_useControl",value:e})}get waveform(){return this._state.waveform}set waveform(e){this._state.waveform=e,this.port.postMessage({command:"waveform",value:e})}}},{name:"amplitudeModifier",worklet:new Blob(["\n                                                class amplitudeModifier extends AudioWorkletProcessor{\n                                                    static get parameterDescriptors(){\n                                                        return [\n                                                            {\n                                                                name: 'invert',\n                                                                defaultValue: 0,\n                                                                minValue: 0,\n                                                                maxValue: 1,\n                                                                automationRate: 'k-rate',\n                                                            },{\n                                                                name: 'offset',\n                                                                defaultValue: 0,\n                                                                minValue: -10,\n                                                                maxValue: 10,\n                                                                automationRate: 'a-rate',\n                                                            },{\n                                                                name: 'divisor',\n                                                                defaultValue: 1,\n                                                                minValue: 1,\n                                                                maxValue: 16,\n                                                                automationRate: 'a-rate',\n                                                            },{\n                                                                name: 'ceiling',\n                                                                defaultValue: 10,\n                                                                minValue: -10,\n                                                                maxValue: 10,\n                                                                automationRate: 'a-rate',\n                                                            },{\n                                                                name: 'floor',\n                                                                defaultValue: -10,\n                                                                minValue: -10,\n                                                                maxValue: 10,\n                                                                automationRate: 'a-rate',\n                                                            }\n                                                        ];\n                                                    }\n                                                    \n                                                    constructor(options){\n                                                        //construct class instance\n                                                            super(options);\n                                                \n                                                        //instance state\n                                                            this.shutdown = false;\n                                                \n                                                        //setup message receiver\n                                                            const self = this;\n                                                            this.port.onmessage = function(event){\n                                                                switch(event.data.command){\n                                                                    //wasm initialization\n                                                                        case 'loadUncompiledWasm':\n                                                                            WebAssembly.compile(event.data.value)\n                                                                                .then(WebAssembly.instantiate)\n                                                                                .then(result => {\n                                                                                    self.wasm = result;\n                                                    \n                                                                                    self.inputFrame = {};\n                                                                                    self.inputFrame.pointer = self.wasm.exports.get_input_pointer();\n                                                                                    self.inputFrame.buffer = new Float32Array(self.wasm.exports.memory.buffer, self.inputFrame.pointer, 128);\n                                                    \n                                                                                    self.outputFrame = {};\n                                                                                    self.outputFrame.pointer = self.wasm.exports.get_output_pointer();\n                                                                                    self.outputFrame.buffer = new Float32Array(self.wasm.exports.memory.buffer, self.outputFrame.pointer, 128);\n                                                    \n                                                                                    self.divisorFrame = {};\n                                                                                    self.divisorFrame.pointer = self.wasm.exports.get_divisor_pointer();\n                                                                                    self.divisorFrame.buffer = new Float32Array(self.wasm.exports.memory.buffer, self.divisorFrame.pointer, 128);\n                                                                                    self.offsetFrame = {};\n                                                                                    self.offsetFrame.pointer = self.wasm.exports.get_offset_pointer();\n                                                                                    self.offsetFrame.buffer = new Float32Array(self.wasm.exports.memory.buffer, self.offsetFrame.pointer, 128);\n                                                                                    self.floorFrame = {};\n                                                                                    self.floorFrame.pointer = self.wasm.exports.get_floor_pointer();\n                                                                                    self.floorFrame.buffer = new Float32Array(self.wasm.exports.memory.buffer, self.floorFrame.pointer, 128);\n                                                                                    self.ceilingFrame = {};\n                                                                                    self.ceilingFrame.pointer = self.wasm.exports.get_ceiling_pointer();\n                                                                                    self.ceilingFrame.buffer = new Float32Array(self.wasm.exports.memory.buffer, self.ceilingFrame.pointer, 128);\n                                                                                });\n                                                                        break;\n                                                                        case 'loadWasm':\n                                                                            WebAssembly.instantiate(event.data.value).then(result => {\n                                                                                self.wasm = result;\n                                                \n                                                                                self.inputFrame = {};\n                                                                                self.inputFrame.pointer = self.wasm.exports.get_input_pointer();\n                                                                                self.inputFrame.buffer = new Float32Array(self.wasm.exports.memory.buffer, self.inputFrame.pointer, 128);\n                                                \n                                                                                self.outputFrame = {};\n                                                                                self.outputFrame.pointer = self.wasm.exports.get_output_pointer();\n                                                                                self.outputFrame.buffer = new Float32Array(self.wasm.exports.memory.buffer, self.outputFrame.pointer, 128);\n                                                \n                                                                                self.divisorFrame = {};\n                                                                                self.divisorFrame.pointer = self.wasm.exports.get_divisor_pointer();\n                                                                                self.divisorFrame.buffer = new Float32Array(self.wasm.exports.memory.buffer, self.divisorFrame.pointer, 128);\n                                                                                self.offsetFrame = {};\n                                                                                self.offsetFrame.pointer = self.wasm.exports.get_offset_pointer();\n                                                                                self.offsetFrame.buffer = new Float32Array(self.wasm.exports.memory.buffer, self.offsetFrame.pointer, 128);\n                                                                                self.floorFrame = {};\n                                                                                self.floorFrame.pointer = self.wasm.exports.get_floor_pointer();\n                                                                                self.floorFrame.buffer = new Float32Array(self.wasm.exports.memory.buffer, self.floorFrame.pointer, 128);\n                                                                                self.ceilingFrame = {};\n                                                                                self.ceilingFrame.pointer = self.wasm.exports.get_ceiling_pointer();\n                                                                                self.ceilingFrame.buffer = new Float32Array(self.wasm.exports.memory.buffer, self.ceilingFrame.pointer, 128);\n                                                                            });\n                                                                        break;\n                                                                    \n                                                                    //shutdown\n                                                                        case 'shutdown':\n                                                                            self.shutdown = true;\n                                                                        break;\n                                                                }\n                                                            };\n                                                    }\n                                                \n                                                    process(inputs, outputs, parameters){\n                                                        if(this.shutdown){ return false; }\n                                                        if(this.wasm == undefined){ return true; }\n                                                \n                                                        //collect inputs/outputs\n                                                            const input = inputs[0];\n                                                            const output = outputs[0];\n                                                \n                                                        //pre-calculations\n                                                            const sign = parameters.invert[0] == 1 ? -1 : 1;\n                                                            const divisor_useFirstOnly = parameters.divisor.length == 1;\n                                                            const offset_useFirstOnly = parameters.offset.length == 1;\n                                                            const floor_useFirstOnly = parameters.floor.length == 1;\n                                                            const ceiling_useFirstOnly = parameters.ceiling.length == 1;\n                                                \n                                                        //populate input buffers\n                                                            this.divisorFrame.buffer.set( divisor_useFirstOnly ? [parameters.divisor[0]] : parameters.divisor );\n                                                            this.offsetFrame.buffer.set( offset_useFirstOnly ? [parameters.offset[0]] : parameters.offset );\n                                                            this.floorFrame.buffer.set( floor_useFirstOnly ? [parameters.floor[0]] : parameters.floor );\n                                                            this.ceilingFrame.buffer.set( ceiling_useFirstOnly ? [parameters.ceiling[0]] : parameters.ceiling );\n                                                \n                                                        //process data, and copy results to channels\n                                                            for(let channel = 0; channel < input.length; channel++){\n                                                                this.inputFrame.buffer.set(input[channel]);\n                                                                this.wasm.exports.process(\n                                                                    sign,\n                                                                    divisor_useFirstOnly,\n                                                                    offset_useFirstOnly,\n                                                                    floor_useFirstOnly,\n                                                                    ceiling_useFirstOnly,\n                                                                );\n                                                                output[channel].set(this.outputFrame.buffer);\n                                                            }\n                                                \n                                                        return true;\n                                                    }\n                                                }\n                                                registerProcessor('amplitudeModifier', amplitudeModifier);\n                                            "],{type:"text/javascript"}),class:class e extends AudioWorkletNode{static wasm_url="wasm/audio_processing/amplitude_modifier.production.wasm";static fetch_promise;static compiled_wasm;constructor(n,o={}){o.numberOfInputs=1,o.numberOfOutputs=1,o.channelCount=1,super(n,"amplitudeModifier",o),t.audioWorklet.requestWasm(e,this),this._invert=!1,this.shutdown=function(){this.port.postMessage({command:"shutdown",value:void 0}),this.port.close()}}get invert(){return this._invert}set invert(e){this._invert=e,this.parameters.get("invert").setValueAtTime(this._invert?1:0,0)}get offset(){return this.parameters.get("offset")}get divisor(){return this.parameters.get("divisor")}get ceiling(){return this.parameters.get("ceiling")}get floor(){return this.parameters.get("floor")}}},{name:"streamAdder",worklet:new Blob(["\n                                                class streamAdder extends AudioWorkletProcessor{\n                                                    static get parameterDescriptors(){\n                                                        return [\n                                                            {\n                                                                name: 'mode',\n                                                                defaultValue: 0, // 0 - manual / 1 - automatic\n                                                                minValue: 0,\n                                                                maxValue: 1,\n                                                                automationRate: 'k-rate',\n                                                            },{\n                                                                name: 'mix',\n                                                                defaultValue: 0.5,\n                                                                minValue: 0,\n                                                                maxValue: 1,\n                                                                automationRate: 'a-rate',\n                                                            }\n                                                        ];\n                                                    }\n                                                    \n                                                    constructor(options){\n                                                        //construct class instance\n                                                            super(options);\n                                                \n                                                \n                                                        //instance state\n                                                            this.shutdown = false;\n                                                \n                                                        //setup message receiver\n                                                            const self = this;\n                                                            this.port.onmessage = function(event){\n                                                                switch(event.data.command){\n                                                                    //wasm initialization\n                                                                        case 'loadUncompiledWasm':\n                                                                            WebAssembly.compile(event.data.value)\n                                                                                .then(WebAssembly.instantiate)\n                                                                                .then(result => {\n                                                                                    self.wasm = result;\n                                                    \n                                                                                    self.input1Frame = {};\n                                                                                    self.input1Frame.pointer = self.wasm.exports.get_input_1_pointer();\n                                                                                    self.input1Frame.buffer = new Float32Array(self.wasm.exports.memory.buffer, self.input1Frame.pointer, 128);\n                                                    \n                                                                                    self.input2Frame = {};\n                                                                                    self.input2Frame.pointer = self.wasm.exports.get_input_2_pointer();\n                                                                                    self.input2Frame.buffer = new Float32Array(self.wasm.exports.memory.buffer, self.input2Frame.pointer, 128);\n                                                    \n                                                                                    self.mixControlFrame = {};\n                                                                                    self.mixControlFrame.pointer = self.wasm.exports.get_mix_control_pointer();\n                                                                                    self.mixControlFrame.buffer = new Float32Array(self.wasm.exports.memory.buffer, self.mixControlFrame.pointer, 128);\n                                                    \n                                                                                    self.outputFrame = {};\n                                                                                    self.outputFrame.pointer = self.wasm.exports.get_output_pointer();\n                                                                                    self.outputFrame.buffer = new Float32Array(self.wasm.exports.memory.buffer, self.outputFrame.pointer, 128);\n                                                                                });\n                                                                        break;\n                                                                        case 'loadWasm':\n                                                                            WebAssembly.instantiate(event.data.value).then(result => {\n                                                                                self.wasm = result;\n                                                \n                                                                                self.input1Frame = {};\n                                                                                self.input1Frame.pointer = self.wasm.exports.get_input_1_pointer();\n                                                                                self.input1Frame.buffer = new Float32Array(self.wasm.exports.memory.buffer, self.input1Frame.pointer, 128);\n                                                \n                                                                                self.input2Frame = {};\n                                                                                self.input2Frame.pointer = self.wasm.exports.get_input_2_pointer();\n                                                                                self.input2Frame.buffer = new Float32Array(self.wasm.exports.memory.buffer, self.input2Frame.pointer, 128);\n                                                \n                                                                                self.mixControlFrame = {};\n                                                                                self.mixControlFrame.pointer = self.wasm.exports.get_mix_control_pointer();\n                                                                                self.mixControlFrame.buffer = new Float32Array(self.wasm.exports.memory.buffer, self.mixControlFrame.pointer, 128);\n                                                \n                                                                                self.outputFrame = {};\n                                                                                self.outputFrame.pointer = self.wasm.exports.get_output_pointer();\n                                                                                self.outputFrame.buffer = new Float32Array(self.wasm.exports.memory.buffer, self.outputFrame.pointer, 128);\n                                                                            });\n                                                                        break;\n                                                                    \n                                                                    //shutdown\n                                                                        case 'shutdown':\n                                                                            self.shutdown = true;\n                                                                        break;\n                                                                }\n                                                            };\n                                                    }\n                                                \n                                                    process(inputs, outputs, parameters){\n                                                        if(this.shutdown){ return false; }\n                                                        if(this.wasm == undefined){ return true; }\n                                                \n                                                        //collect inputs/outputs\n                                                            const input_1 = inputs[0];\n                                                            const input_2 = inputs[1];\n                                                            const mixControl = inputs[2];\n                                                            const output = outputs[0];\n                                                \n                                                        //pre-calculation\n                                                            const mixControl_useFirstOnly = parameters.mode[0] == 0 ? parameters.mix.length == 1 : false;\n                                                \n                                                        //populate input buffers, process data, and copy results to channels\n                                                            for(let channel = 0; channel < input_1.length; channel++){\n                                                                this.input1Frame.buffer.set(input_1[channel]);\n                                                                this.input2Frame.buffer.set(input_2[channel]);\n                                                                this.mixControlFrame.buffer.set(parameters.mode[0] == 0 ? [(mixControl_useFirstOnly ? parameters.mix[0] : parameters.mix[a])] : mixControl[channel]);\n                                                                this.wasm.exports.process(\n                                                                    mixControl_useFirstOnly\n                                                                );\n                                                                output[channel].set(this.outputFrame.buffer);\n                                                            }\n                                                \n                                                        return true;\n                                                    }\n                                                }\n                                                registerProcessor('streamAdder', streamAdder);\n                                            "],{type:"text/javascript"}),class:class e extends AudioWorkletNode{static wasm_url="wasm/audio_processing/stream_adder.production.wasm";static fetch_promise;static compiled_wasm;constructor(n,o={}){o.numberOfInputs=3,o.numberOfOutputs=1,o.channelCount=1,super(n,"streamAdder",o),t.audioWorklet.requestWasm(e,this),this._mode=!1,this.shutdown=function(){this.port.postMessage({command:"shutdown",value:void 0}),this.port.close()}}get mode(){return this._mode}set mode(e){this._mode=e,this.parameters.get("mode").setValueAtTime(this._mode?1:0,0)}get mix(){return this.parameters.get("mix")}}},{name:"gain",worklet:new Blob(["\n                                                class gain extends AudioWorkletProcessor{\n                                                    static get parameterDescriptors(){\n                                                        return [\n                                                            {\n                                                                name: 'mode',\n                                                                defaultValue: 0,\n                                                                minValue: 0,\n                                                                maxValue: 1,\n                                                                automationRate: 'k-rate',\n                                                            },{\n                                                                name: 'gain',\n                                                                defaultValue: 1,\n                                                                minValue: -100,\n                                                                maxValue: 100,\n                                                                automationRate: 'a-rate',\n                                                            }\n                                                        ];\n                                                    }\n                                                    \n                                                    constructor(options){\n                                                        //construct class instance\n                                                            super(options);\n                                                \n                                                        //instance state\n                                                            this.shutdown = false;\n                                                \n                                                        //setup message receiver\n                                                            const self = this;\n                                                            this.port.onmessage = function(event){\n                                                                switch(event.data.command){\n                                                                    //wasm initialization\n                                                                        case 'loadUncompiledWasm':\n                                                                            WebAssembly.compile(event.data.value)\n                                                                                .then(WebAssembly.instantiate)\n                                                                                .then(result => {\n                                                                                    self.wasm = result;\n                                                    \n                                                                                    self.input1Frame = {};\n                                                                                    self.input1Frame.pointer = self.wasm.exports.get_input_1_pointer();\n                                                                                    self.input1Frame.buffer = new Float32Array(self.wasm.exports.memory.buffer, self.input1Frame.pointer, 128);\n                                                    \n                                                                                    self.input2Frame = {};\n                                                                                    self.input2Frame.pointer = self.wasm.exports.get_input_2_pointer();\n                                                                                    self.input2Frame.buffer = new Float32Array(self.wasm.exports.memory.buffer, self.input2Frame.pointer, 128);\n                                                    \n                                                                                    self.outputFrame = {};\n                                                                                    self.outputFrame.pointer = self.wasm.exports.get_output_pointer();\n                                                                                    self.outputFrame.buffer = new Float32Array(self.wasm.exports.memory.buffer, self.outputFrame.pointer, 128);\n                                                                                });\n                                                                        break;\n                                                                        case 'loadWasm':\n                                                                            WebAssembly.instantiate(event.data.value).then(result => {\n                                                                                self.wasm = result;\n                                                \n                                                                                self.input1Frame = {};\n                                                                                self.input1Frame.pointer = self.wasm.exports.get_input_1_pointer();\n                                                                                self.input1Frame.buffer = new Float32Array(self.wasm.exports.memory.buffer, self.input1Frame.pointer, 128);\n                                                \n                                                                                self.input2Frame = {};\n                                                                                self.input2Frame.pointer = self.wasm.exports.get_input_2_pointer();\n                                                                                self.input2Frame.buffer = new Float32Array(self.wasm.exports.memory.buffer, self.input2Frame.pointer, 128);\n                                                \n                                                                                self.outputFrame = {};\n                                                                                self.outputFrame.pointer = self.wasm.exports.get_output_pointer();\n                                                                                self.outputFrame.buffer = new Float32Array(self.wasm.exports.memory.buffer, self.outputFrame.pointer, 128);\n                                                                            });\n                                                                        break;\n                                                                    \n                                                                    //shutdown\n                                                                        case 'shutdown':\n                                                                            self.shutdown = true;\n                                                                        break;\n                                                                }\n                                                            };\n                                                    }\n                                                \n                                                    process(inputs, outputs, parameters){\n                                                        if(this.shutdown){ return false; }\n                                                        if(this.wasm == undefined){ return true; }\n                                                \n                                                        //collect inputs/outputs\n                                                            const input_1 = inputs[0];\n                                                            const input_2 = inputs[1];\n                                                            const output = outputs[0];\n                                                \n                                                        if( parameters.mode[0] == 1 ){\n                                                            //automatic\n                                                            for(let channel = 0; channel < input_1.length; channel++){\n                                                                this.input1Frame.buffer.set(input_1[channel]);\n                                                                if(input_2[channel] != undefined){\n                                                                    this.input2Frame.buffer.set(input_2[channel]);\n                                                                }\n                                                                this.wasm.exports.process(false);\n                                                                output[channel].set(this.outputFrame.buffer);\n                                                            }\n                                                        } else {\n                                                            //manual\n                                                            const gain_useFirstOnly = parameters.gain.length == 1;\n                                                            this.input2Frame.buffer.set(parameters.gain);\n                                                \n                                                            for(let channel = 0; channel < input_1.length; channel++){\n                                                                this.input1Frame.buffer.set(input_1[channel]);\n                                                                this.wasm.exports.process(gain_useFirstOnly);\n                                                                output[channel].set(this.outputFrame.buffer);\n                                                            }\n                                                        }\n                                                \n                                                        return true;\n                                                    }\n                                                }\n                                                registerProcessor('gain', gain);\n                                            "],{type:"text/javascript"}),class:class e extends AudioWorkletNode{static wasm_url="wasm/audio_processing/gain.production.wasm";static fetch_promise;static compiled_wasm;constructor(n,o={}){o.numberOfInputs=2,o.numberOfOutputs=1,o.channelCount=1,super(n,"gain",o),t.audioWorklet.requestWasm(e,this),this._mode=!1,this.shutdown=function(){this.port.postMessage({command:"shutdown",value:void 0}),this.port.close()}}get mode(){return this._mode}set mode(e){this._mode=e,this.parameters.get("mode").setValueAtTime(this._mode?1:0,0)}get gain(){return this.parameters.get("gain")}}},{name:"integrated_synthesizer_type_1",worklet:new Blob(["\n                                                const debug = function(id, ...args){ console.log(id+':', args.join(' ')); };\n                                                \n                                                class integrated_synthesizer_type_1 extends AudioWorkletProcessor {\n                                                    static detuneMux = 0.1;\n                                                    static detuneBounds = 1/integrated_synthesizer_type_1.detuneMux;\n                                                    static availableWaveforms = ['sine', 'square', 'triangle'];\n                                                \n                                                    static get parameterDescriptors(){\n                                                        return [\n                                                            {\n                                                                name: 'gain',\n                                                                defaultValue: 1,\n                                                                minValue: -1,\n                                                                maxValue: 1,\n                                                                automationRate: 'a-rate',\n                                                            },{\n                                                                name: 'detune',\n                                                                defaultValue: 0,\n                                                                minValue: -integrated_synthesizer_type_1.detuneBounds,\n                                                                maxValue: integrated_synthesizer_type_1.detuneBounds,\n                                                                automationRate: 'a-rate',\n                                                            },{\n                                                                name: 'dutyCycle',\n                                                                defaultValue: 0.5,\n                                                                minValue: 0,\n                                                                maxValue: 1,\n                                                                automationRate: 'a-rate',\n                                                            },\n                                                        ];\n                                                    }\n                                                \n                                                    constructor(options){\n                                                        //construct class instance\n                                                            super(options);\n                                                \n                                                        //instance state\n                                                            this.shutdown = false;\n                                                            this._state = {\n                                                                gain_useControl: false,\n                                                                detune_useControl: false,\n                                                                dutyCycle_useControl: false,\n                                                \n                                                                selected_waveform: 0,\n                                                            };\n                                                \n                                                            //setup message receiver\n                                                                const self = this;\n                                                                this.port.onmessage = function(event){\n                                                                    // console.log(event);\n                                                                    switch(event.data.command){\n                                                                        //wasm initialization\n                                                                            case 'loadUncompiledWasm':\n                                                                                WebAssembly.compile(event.data.value).then(module => {\n                                                                                    WebAssembly.instantiate(\n                                                                                        module,\n                                                                                        { env: { Math_random: Math.random, debug_: debug, } },\n                                                                                    ).then(result => {\n                                                                                        //save wasm processor to instance\n                                                                                            self.wasm = result;\n                                                        \n                                                                                        //assemble wasm buffers\n                                                                                            self.gainFrame = { pointer: self.wasm.exports.get_gain_pointer() };\n                                                                                            self.gainFrame.buffer = new Float32Array(self.wasm.exports.memory.buffer, self.gainFrame.pointer, 128);\n                                                                                            self.detuneFrame = { pointer: self.wasm.exports.get_detune_pointer() };\n                                                                                            self.detuneFrame.buffer = new Float32Array(self.wasm.exports.memory.buffer, self.detuneFrame.pointer, 128);\n                                                                                            self.dutyCycleFrame = { pointer: self.wasm.exports.get_duty_cycle_pointer() };\n                                                                                            self.dutyCycleFrame.buffer = new Float32Array(self.wasm.exports.memory.buffer, self.dutyCycleFrame.pointer, 128);\n                                                                                            self.outputFrame = { pointer: self.wasm.exports.get_output_pointer() };\n                                                                                            self.outputFrame.buffer = new Float32Array(self.wasm.exports.memory.buffer, self.outputFrame.pointer, 128);\n                                                        \n                                                                                        //re-send waveform selection (just incase)\n                                                                                            self.wasm.exports.select_waveform(self._state.selected_waveform);\n                                                                                    });\n                                                                                });\n                                                                            break;\n                                                                            case 'loadWasm':\n                                                                                WebAssembly.instantiate(\n                                                                                    event.data.value,\n                                                                                    { env: { Math_random: Math.random, debug_: debug, } },\n                                                                                ).then(result => {\n                                                                                    //save wasm processor to instance\n                                                                                        self.wasm = result;\n                                                    \n                                                                                    //assemble wasm buffers\n                                                                                        self.gainFrame = { pointer: self.wasm.exports.get_gain_pointer() };\n                                                                                        self.gainFrame.buffer = new Float32Array(self.wasm.exports.memory.buffer, self.gainFrame.pointer, 128);\n                                                                                        self.detuneFrame = { pointer: self.wasm.exports.get_detune_pointer() };\n                                                                                        self.detuneFrame.buffer = new Float32Array(self.wasm.exports.memory.buffer, self.detuneFrame.pointer, 128);\n                                                                                        self.dutyCycleFrame = { pointer: self.wasm.exports.get_duty_cycle_pointer() };\n                                                                                        self.dutyCycleFrame.buffer = new Float32Array(self.wasm.exports.memory.buffer, self.dutyCycleFrame.pointer, 128);\n                                                                                        self.outputFrame = { pointer: self.wasm.exports.get_output_pointer() };\n                                                                                        self.outputFrame.buffer = new Float32Array(self.wasm.exports.memory.buffer, self.outputFrame.pointer, 128);\n                                                    \n                                                                                    //re-send waveform selection (just incase)\n                                                                                        self.wasm.exports.select_waveform(self._state.selected_waveform);\n                                                                                });\n                                                                            break;\n                                                                        \n                                                                        //performance control\n                                                                            case 'perform':\n                                                                                self.wasm.exports.perform(event.data.value.frequency, event.data.value.velocity);\n                                                                            break;\n                                                                            case 'stopAll':\n                                                                                self.wasm.exports.stop_all();\n                                                                            break;\n                                                \n                                                                        //shutdown\n                                                                            case 'shutdown':\n                                                                                self.shutdown = true;\n                                                                            break;\n                                                    \n                                                                        //use control\n                                                                            case 'gain_useControl': \n                                                                                self._state.gain_useControl = event.data.value;\n                                                                            break;\n                                                                            case 'detune_useControl': \n                                                                                self._state.detune_useControl = event.data.value;\n                                                                            break;\n                                                                            case 'dutyCycle_useControl': \n                                                                                self._state.dutyCycle_useControl = event.data.value;\n                                                                            break;\n                                                    \n                                                                        //waveform\n                                                                            case 'waveform':\n                                                                                self._state.selected_waveform = integrated_synthesizer_type_1.availableWaveforms.indexOf(event.data.value);\n                                                                                if(self.wasm == undefined){ return; }\n                                                                                self.wasm.exports.select_waveform(self._state.selected_waveform);\n                                                                            break;\n                                                                    }\n                                                                };\n                                                    }\n                                                \n                                                    process(inputs, outputs, parameters){\n                                                        if(this.shutdown){ return false; }\n                                                        if(this.wasm == undefined){ return true; }\n                                                \n                                                        //collect inputs/outputs\n                                                            const output = outputs[0];\n                                                            const gainControl = inputs[0];\n                                                            const detuneControl = inputs[1];\n                                                            const dutyCycleControl = inputs[2];\n                                                \n                                                        //populate input buffers\n                                                            const gain_useFirstOnly = this._state.gain_useControl ? false : parameters.gain.length == 1;\n                                                            this.gainFrame.buffer = new Float32Array(this.wasm.exports.memory.buffer, this.gainFrame.pointer, 128);\n                                                            this.gainFrame.buffer.set( this._state.gain_useControl && gainControl[0] != undefined ? gainControl[0] : parameters.gain );\n                                                \n                                                            const detune_useFirstOnly = this._state.detune_useControl ? false : parameters.detune.length == 1;\n                                                            this.detuneFrame.buffer = new Float32Array(this.wasm.exports.memory.buffer, this.detuneFrame.pointer, 128);\n                                                            this.detuneFrame.buffer.set( this._state.detune_useControl && detuneControl[0] != undefined ? detuneControl[0] : parameters.detune );\n                                                \n                                                            const dutyCycle_useFirstOnly = this._state.dutyCycle_useControl ? false : parameters.dutyCycle.length == 1;\n                                                            this.dutyCycleFrame.buffer = new Float32Array(this.wasm.exports.memory.buffer, this.dutyCycleFrame.pointer, 128);\n                                                            this.dutyCycleFrame.buffer.set( this._state.dutyCycle_useControl && dutyCycleControl[0] != undefined ? dutyCycleControl[0] : parameters.dutyCycle );\n                                                \n                                                        //process data, and copy results to channels\n                                                            for(let channel = 0; channel < output.length; channel++){\n                                                                this.wasm.exports.process(\n                                                                    gain_useFirstOnly,\n                                                                    detune_useFirstOnly,\n                                                                    dutyCycle_useFirstOnly,\n                                                                );\n                                                                this.outputFrame.buffer = new Float32Array(this.wasm.exports.memory.buffer, this.outputFrame.pointer, 128);\n                                                                output[channel].set(this.outputFrame.buffer);\n                                                            }\n                                                        \n                                                        return true;\n                                                    }\n                                                }\n                                                registerProcessor('integrated_synthesizer_type_1', integrated_synthesizer_type_1);\n                                            "],{type:"text/javascript"}),class:class e extends AudioWorkletNode{static wasm_url="wasm/audio_processing/integrated_synthesizer_type_1.production.wasm";static fetch_promise;static compiled_wasm;constructor(n,o={}){o.numberOfInputs=3,o.numberOfOutputs=1,o.channelCount=1,super(n,"integrated_synthesizer_type_1",o),t.audioWorklet.requestWasm(e,this),this._state={gain_useControl:!1,detune_useControl:!1,dutyCycle_useControl:!1,waveform:"sine"},this.perform=function(e,t=1){this.port.postMessage({command:"perform",value:{frequency:e,velocity:t}})},this.stopAll=function(){this.port.postMessage({command:"stopAll",value:void 0})},this.shutdown=function(){this.port.postMessage({command:"shutdown",value:void 0}),this.port.close()}}get gain(){return this.parameters.get("gain")}get gain_useControl(){return this._state.gain_useControl}set gain_useControl(e){this._state.gain_useControl=e,this.port.postMessage({command:"gain_useControl",value:e})}get detune(){return this.parameters.get("detune")}get detune_useControl(){return this._state.detune_useControl}set detune_useControl(e){this._state.detune_useControl=e,this.port.postMessage({command:"detune_useControl",value:e})}get dutyCycle(){return this.parameters.get("dutyCycle")}get dutyCycle_useControl(){return this._state.dutyCycle_useControl}set dutyCycle_useControl(e){this._state.dutyCycle_useControl=e,this.port.postMessage({command:"dutyCycle_useControl",value:e})}get waveform(){return this._state.waveform}set waveform(e){this._state.waveform=e,this.port.postMessage({command:"waveform",value:e})}}},{name:"sigmoid",worklet:new Blob(["\n                                                class sigmoid extends AudioWorkletProcessor{\n                                                    static get parameterDescriptors(){\n                                                        return [\n                                                            {\n                                                                name: 'gain',\n                                                                defaultValue: 1,\n                                                                minValue: 0,\n                                                                maxValue: 1,\n                                                                automationRate: 'a-rate',\n                                                            },\n                                                            {\n                                                                name: 'sharpness',\n                                                                defaultValue: 0,\n                                                                minValue: 0,\n                                                                maxValue: 1,\n                                                                automationRate: 'a-rate',\n                                                            }\n                                                        ];\n                                                    }\n                                                \n                                                    constructor(options){\n                                                        //construct class instance\n                                                            super(options);\n                                                \n                                                        //instance state\n                                                            this.shutdown = false;\n                                                \n                                                        //setup message receiver\n                                                \t\t    const self = this;\n                                                            this.port.onmessage = function(event){\n                                                                switch(event.data.command){\n                                                                    //wasm initialization\n                                                                        case 'loadUncompiledWasm':\n                                                                            WebAssembly.compile(event.data.value)\n                                                                                .then(WebAssembly.instantiate)\n                                                                                .then(result => {\n                                                                                    self.wasm = result;\n                                                    \n                                                                                    self.inputFrame = {};\n                                                                                    self.inputFrame.pointer = self.wasm.exports.get_input_pointer();\n                                                                                    self.inputFrame.buffer = new Float32Array(self.wasm.exports.memory.buffer, self.inputFrame.pointer, 128);\n                                                    \n                                                                                    self.outputFrame = {};\n                                                                                    self.outputFrame.pointer = self.wasm.exports.get_output_pointer();\n                                                                                    self.outputFrame.buffer = new Float32Array(self.wasm.exports.memory.buffer, self.outputFrame.pointer, 128);\n                                                    \n                                                                                    self.gainBuffer = {};\n                                                                                    self.gainBuffer.pointer = self.wasm.exports.get_gain_pointer();\n                                                                                    self.gainBuffer.buffer = new Float32Array(self.wasm.exports.memory.buffer, self.gainBuffer.pointer, 128);\n                                                    \n                                                                                    self.sharpnessBuffer = {};\n                                                                                    self.sharpnessBuffer.pointer = self.wasm.exports.get_sharpness_pointer();\n                                                                                    self.sharpnessBuffer.buffer = new Float32Array(self.wasm.exports.memory.buffer, self.sharpnessBuffer.pointer, 128);\n                                                                                });\n                                                                        break;\n                                                                        case 'loadWasm':\n                                                                            WebAssembly.instantiate(event.data.value).then(result => {\n                                                                                self.wasm = result;\n                                                \n                                                                                self.inputFrame = {};\n                                                                                self.inputFrame.pointer = self.wasm.exports.get_input_pointer();\n                                                                                self.inputFrame.buffer = new Float32Array(self.wasm.exports.memory.buffer, self.inputFrame.pointer, 128);\n                                                \n                                                                                self.outputFrame = {};\n                                                                                self.outputFrame.pointer = self.wasm.exports.get_output_pointer();\n                                                                                self.outputFrame.buffer = new Float32Array(self.wasm.exports.memory.buffer, self.outputFrame.pointer, 128);\n                                                \n                                                                                self.gainBuffer = {};\n                                                                                self.gainBuffer.pointer = self.wasm.exports.get_gain_pointer();\n                                                                                self.gainBuffer.buffer = new Float32Array(self.wasm.exports.memory.buffer, self.gainBuffer.pointer, 128);\n                                                \n                                                                                self.sharpnessBuffer = {};\n                                                                                self.sharpnessBuffer.pointer = self.wasm.exports.get_sharpness_pointer();\n                                                                                self.sharpnessBuffer.buffer = new Float32Array(self.wasm.exports.memory.buffer, self.sharpnessBuffer.pointer, 128);\n                                                                            });\n                                                                        break;\n                                                                \n                                                                    //shutdown\n                                                                        case 'shutdown':\n                                                                            self.shutdown = true;\n                                                                        break;\n                                                                }\n                                                            };\n                                                    }\n                                                \n                                                    process(inputs, outputs, parameters){\n                                                        if(this.shutdown){ return false; }\n                                                        if(this.wasm == undefined){ return true; }\n                                                \n                                                        //collect inputs/outputs\n                                                            const input = inputs[0];\n                                                            const output = outputs[0];\n                                                \n                                                        //populate input buffers\n                                                            const gain_useFirstOnly = parameters.gain.length == 1;\n                                                            const sharpness_useFirstOnly = parameters.sharpness.length == 1;\n                                                            this.gainBuffer.buffer.set(parameters.gain);\n                                                            this.sharpnessBuffer.buffer.set(parameters.sharpness);\n                                                \n                                                        //copy data in, process data, and copy results to channels\n                                                            for(let channel = 0; channel < input.length; channel++){\n                                                                this.inputFrame.buffer.set(input[channel]);\n                                                                this.wasm.exports.process(\n                                                                    gain_useFirstOnly,\n                                                                    sharpness_useFirstOnly,\n                                                                );\n                                                                output[channel].set(this.outputFrame.buffer);\n                                                            }\n                                                \n                                                        return true;\n                                                    }\n                                                }\n                                                registerProcessor('sigmoid', sigmoid);\n                                            "],{type:"text/javascript"}),class:class e extends AudioWorkletNode{static wasm_url="wasm/audio_processing/sigmoid.production.wasm";static fetch_promise;static compiled_wasm;constructor(n,o={}){o.numberOfInputs=1,o.numberOfOutputs=1,o.channelCount=1,super(n,"sigmoid",o),t.audioWorklet.requestWasm(e,this),this.shutdown=function(){this.port.postMessage({command:"shutdown",value:void 0}),this.port.close()}}get gain(){return this.parameters.get("gain")}get sharpness(){return this.parameters.get("sharpness")}}},{name:"lagProcessor",worklet:new Blob(["\n                                                class lagProcessor extends AudioWorkletProcessor{\n                                                    static get parameterDescriptors(){\n                                                        return [{\n                                                                name: 'samples',\n                                                                defaultValue: 1,\n                                                                minValue: 1,\n                                                                maxValue: 100,\n                                                                automationRate: 'k-rate',\n                                                            }\n                                                        ];\n                                                    }\n                                                \n                                                    constructor(options){\n                                                        //construct class instance\n                                                            super(options);\n                                                \n                                                        //instance state\n                                                            this.shutdown = false;\n                                                \n                                                        //setup message receiver\n                                                            const self = this;\n                                                            this.port.onmessage = function(event){\n                                                                switch(event.data.command){\n                                                                    //wasm initialization\n                                                                        case 'loadUncompiledWasm':\n                                                                            WebAssembly.compile(event.data.value)\n                                                                                .then(WebAssembly.instantiate)\n                                                                                .then(result => {\n                                                                                    self.wasm = result;\n                                                    \n                                                                                    self.inputFrame = {};\n                                                                                    self.inputFrame.pointer = self.wasm.exports.get_input_pointer();\n                                                                                    self.inputFrame.buffer = new Float32Array(self.wasm.exports.memory.buffer, self.inputFrame.pointer, 128);\n                                                    \n                                                                                    self.outputFrame = {};\n                                                                                    self.outputFrame.pointer = self.wasm.exports.get_output_pointer();\n                                                                                    self.outputFrame.buffer = new Float32Array(self.wasm.exports.memory.buffer, self.outputFrame.pointer, 128);\n                                                                                });\n                                                                        break;\n                                                                        case 'loadWasm':\n                                                                            WebAssembly.instantiate(event.data.value).then(result => {\n                                                                                self.wasm = result;\n                                                \n                                                                                self.inputFrame = {};\n                                                                                self.inputFrame.pointer = self.wasm.exports.get_input_pointer();\n                                                                                self.inputFrame.buffer = new Float32Array(self.wasm.exports.memory.buffer, self.inputFrame.pointer, 128);\n                                                \n                                                                                self.outputFrame = {};\n                                                                                self.outputFrame.pointer = self.wasm.exports.get_output_pointer();\n                                                                                self.outputFrame.buffer = new Float32Array(self.wasm.exports.memory.buffer, self.outputFrame.pointer, 128);\n                                                                            });\n                                                                        break;\n                                                                    \n                                                                    //shutdown\n                                                                        case 'shutdown':\n                                                                            self.shutdown = true;\n                                                                        break;\n                                                                }\n                                                            };\n                                                    }\n                                                \n                                                    process(inputs, outputs, parameters){\n                                                        if(this.shutdown){ return false; }\n                                                        if(this.wasm == undefined){ return true; }\n                                                \n                                                        //collect inputs/outputs\n                                                            const input = inputs[0];\n                                                            const output = outputs[0];\n                                                            const samples = parameters.samples[0];\n                                                \n                                                        //copy data in, process data, and copy results to channels\n                                                            for(let channel = 0; channel < input.length; channel++){\n                                                                this.inputFrame.buffer.set(input[channel]);\n                                                                this.wasm.exports.process(samples);\n                                                                output[channel].set(this.outputFrame.buffer);\n                                                            }\n                                                \n                                                        return true;\n                                                    }\n                                                }\n                                                registerProcessor('lagProcessor', lagProcessor);\n                                            "],{type:"text/javascript"}),class:class e extends AudioWorkletNode{static wasm_url="wasm/audio_processing/lag_processor.production.wasm";static fetch_promise;static compiled_wasm;constructor(n,o={}){o.numberOfInputs=1,o.numberOfOutputs=1,o.channelCount=1,super(n,"lagProcessor",o),t.audioWorklet.requestWasm(e,this),this._samples=1,this.shutdown=function(){this.port.postMessage({command:"shutdown",value:void 0}),this.port.close()}}get samples(){return this._samples}set samples(e){this._samples=Math.round(e),this.parameters.get("samples").setValueAtTime(this._samples,0)}}},{name:"bitcrusher",worklet:new Blob(["\n                                                class bitcrusher extends AudioWorkletProcessor {\n                                                    static get parameterDescriptors(){\n                                                        return [\n                                                            {\n                                                                name: 'amplitudeResolution',\n                                                                defaultValue: 10,\n                                                                minValue: 1,\n                                                                maxValue: 128,\n                                                                automationRate: 'k-rate',\n                                                            },{\n                                                                name: 'sampleFrequency',\n                                                                defaultValue: 16,\n                                                                minValue: 1,\n                                                                maxValue: 128,\n                                                                automationRate: 'k-rate',\n                                                            }\n                                                        ];\n                                                    }\n                                                    \n                                                    constructor(options){\n                                                        //construct class instance\n                                                            super(options);\n                                                \n                                                        //instance state\n                                                            this.shutdown = false;\n                                                \n                                                        //setup message receiver\n                                                            const self = this;\n                                                            this.port.onmessage = function(event){\n                                                                switch(event.data.command){\n                                                                    //wasm initialization\n                                                                        case 'loadUncompiledWasm':\n                                                                            WebAssembly.compile(event.data.value)\n                                                                                .then(WebAssembly.instantiate)\n                                                                                .then(result => {\n                                                                                    self.wasm = result;\n                                                \n                                                                                    self.inputFrame = {};\n                                                                                    self.inputFrame.pointer = self.wasm.exports.get_input_pointer();\n                                                                                    self.inputFrame.buffer = new Float32Array(self.wasm.exports.memory.buffer, self.inputFrame.pointer, 128);\n                                                \n                                                                                    self.outputFrame = {};\n                                                                                    self.outputFrame.pointer = self.wasm.exports.get_output_pointer();\n                                                                                    self.outputFrame.buffer = new Float32Array(self.wasm.exports.memory.buffer, self.outputFrame.pointer, 128);\n                                                                                });\n                                                                        break;\n                                                                        case 'loadWasm':\n                                                                            WebAssembly.instantiate(event.data.value).then(result => {\n                                                                                self.wasm = result;\n                                                \n                                                                                self.inputFrame = {};\n                                                                                self.inputFrame.pointer = self.wasm.exports.get_input_pointer();\n                                                                                self.inputFrame.buffer = new Float32Array(self.wasm.exports.memory.buffer, self.inputFrame.pointer, 128);\n                                                \n                                                                                self.outputFrame = {};\n                                                                                self.outputFrame.pointer = self.wasm.exports.get_output_pointer();\n                                                                                self.outputFrame.buffer = new Float32Array(self.wasm.exports.memory.buffer, self.outputFrame.pointer, 128);\n                                                                            });\n                                                                        break;\n                                                                    \n                                                                    //shutdown\n                                                                        case 'shutdown':\n                                                                            self.shutdown = true;\n                                                                        break;\n                                                                }\n                                                            };\n                                                    }\n                                                \n                                                    process(inputs, outputs, parameters){\n                                                        if(this.shutdown){ return false; }\n                                                        if(this.wasm == undefined){ return true; }\n                                                \n                                                        //collect inputs/outputs\n                                                            const input = inputs[0];\n                                                            const output = outputs[0];\n                                                \n                                                        //process data, and copy results to channels\n                                                            for(let channel = 0; channel < input.length; channel++){\n                                                                this.inputFrame.buffer.set(input[channel]);\n                                                                this.wasm.exports.process( \n                                                                    parameters.amplitudeResolution[0],\n                                                                    parameters.sampleFrequency[0],\n                                                                );\n                                                                output[channel].set(this.outputFrame.buffer);\n                                                            }\n                                                \n                                                        return true;\n                                                    }\n                                                }\n                                                registerProcessor('bitcrusher', bitcrusher);\n                                            "],{type:"text/javascript"}),class:class e extends AudioWorkletNode{static wasm_url="wasm/audio_processing/bitcrusher.production.wasm";static fetch_promise;static compiled_wasm;constructor(n,o={}){o.numberOfInputs=1,o.numberOfOutputs=1,o.channelCount=1,super(n,"bitcrusher",o),t.audioWorklet.requestWasm(e,this),this._amplitudeResolution=10,this._sampleFrequency=16,this.shutdown=function(){this.port.postMessage({command:"shutdown",value:void 0}),this.port.close()}}get amplitudeResolution(){return this._amplitudeResolution}set amplitudeResolution(e){this._amplitudeResolution=e,this.parameters.get("amplitudeResolution").setValueAtTime(this._amplitudeResolution,0)}get sampleFrequency(){return this._sampleFrequency}set sampleFrequency(e){this._sampleFrequency=e,this.parameters.get("sampleFrequency").setValueAtTime(this._sampleFrequency,0)}}}],readyCount:0}},workshop:{only_js:{list:[{name:"osc_1",worklet:new Blob(["\n                                                class osc_1 extends AudioWorkletProcessor{\n                                                    static twoPI = Math.PI*2;\n                                                    static starterFrequency = 440;\n                                                    static maxFrequency = 20000;\n                                                    static detuneMux = 0.1;\n                                                    static detuneBounds = 1/osc_1.detuneMux;\n                                                    static modulationSettings = [\n                                                        {pha:4,amp:1},\n                                                        {pha:3,amp:1},\n                                                        {pha:2,amp:1},\n                                                        {pha:1,amp:1},\n                                                    ];\n                                                \n                                                    static get parameterDescriptors(){\n                                                        return [\n                                                            {\n                                                                name: 'frequency',\n                                                                defaultValue: osc_1.starterFrequency,\n                                                                minValue: 0,\n                                                                maxValue: osc_1.maxFrequency,\n                                                                automationRate: 'a-rate',\n                                                            },{\n                                                                name: 'gain',\n                                                                defaultValue: 1,\n                                                                minValue: -1,\n                                                                maxValue: 1,\n                                                                automationRate: 'a-rate',\n                                                            },{\n                                                                name: 'detune',\n                                                                defaultValue: 0,\n                                                                minValue: -osc_1.detuneBounds,\n                                                                maxValue: osc_1.detuneBounds,\n                                                                automationRate: 'a-rate',\n                                                            },{\n                                                                name: 'gain_mode',\n                                                                defaultValue: 0, // 0 - manual / 1 - automatic\n                                                                minValue: 0,\n                                                                maxValue: 1,\n                                                                automationRate: 'k-rate',\n                                                            },{\n                                                                name: 'detune_mode',\n                                                                defaultValue: 0, // 0 - manual / 1 - automatic\n                                                                minValue: 0,\n                                                                maxValue: 1,\n                                                                automationRate: 'k-rate',\n                                                            }\n                                                        ];\n                                                    }\n                                                \n                                                    constructor(options){\n                                                        super(options);\n                                                        this._wavePosition = 0;\n                                                        // this._modulationSettings = [\n                                                        //     {pha:4,amp:1},\n                                                        //     {pha:3,amp:1},\n                                                        //     {pha:2,amp:1},\n                                                        //     {pha:1,amp:1},\n                                                        // ];\n                                                \n                                                        this.port.onmessage = function(event){\n                                                            osc_1.modulationSettings = event.data;\n                                                            console.log( event.data, osc_1.modulationSettings );\n                                                        };\n                                                    }\n                                                \n                                                    process(inputs, outputs, parameters){\n                                                        const output = outputs[0];\n                                                        const gainControl = inputs[0];\n                                                        const detuneControl = inputs[1];\n                                                \n                                                        const frequency_useFirstOnly = parameters.frequency.length == 1;\n                                                        const detune_useFirstOnly = parameters.detune.length == 1;\n                                                        const gain_useFirstOnly = parameters.gain.length == 1;\n                                                \n                                                        for(let channel = 0; channel < output.length; channel++){\n                                                            for(let a = 0; a < output[channel].length; a++){\n                                                                const gain = parameters.gain_mode[0] == 0 ? (gain_useFirstOnly ? parameters.gain[0] : parameters.gain[a]) : gainControl[channel][a];\n                                                                const frequency = frequency_useFirstOnly ? parameters.frequency[0] : parameters.frequency[a];\n                                                                const detune = parameters.detune_mode[0] == 0 ? (detune_useFirstOnly ? parameters.detune[0] : parameters.detune[a]) : detuneControl[channel][a];\n                                                \n                                                                this._wavePosition += (frequency*(detune*osc_1.detuneMux + 1))/sampleRate;\n                                                                const localWavePosition = this._wavePosition % 1;\n                                                \n                                                                osc_1.modulationSettings.forEach( setting => {\n                                                                    output[channel][a] = Math.sin( osc_1.twoPI*localWavePosition*setting.pha + (Math.PI/2)*setting.amp*output[channel][a] );\n                                                                } );\n                                                                output[channel][a] = gain*output[channel][a];\n                                                            }\n                                                        }\n                                                \n                                                        return true;\n                                                    }\n                                                }\n                                                registerProcessor('osc_1', osc_1);\n                                            "],{type:"text/javascript"}),class:class extends AudioWorkletNode{constructor(e,t={}){t.numberOfInputs=2,t.numberOfOutputs=1,t.channelCount=1,super(e,"osc_1",t),this.data=function(e){this.port.postMessage(e)}}get frequency(){return this.parameters.get("frequency")}get gain(){return this.parameters.get("gain")}get detune(){return this.parameters.get("detune")}}},{name:"osc_2",worklet:new Blob(["\n                                                class osc_2 extends AudioWorkletProcessor{\n                                                    static twoPI = Math.PI*2;\n                                                    static starterFrequency = 440;\n                                                    static maxFrequency = 20000;\n                                                    static detuneMux = 0.1;\n                                                    static detuneBounds = 1/osc_2.detuneMux;\n                                                \n                                                    static get parameterDescriptors(){\n                                                        return [\n                                                            {\n                                                                name: 'frequency',\n                                                                defaultValue: osc_2.starterFrequency,\n                                                                minValue: 0,\n                                                                maxValue: osc_2.maxFrequency,\n                                                                automationRate: 'a-rate',\n                                                            },{\n                                                                name: 'gain',\n                                                                defaultValue: 1,\n                                                                minValue: -1,\n                                                                maxValue: 1,\n                                                                automationRate: 'a-rate',\n                                                            },{\n                                                                name: 'detune',\n                                                                defaultValue: 0,\n                                                                minValue: -osc_2.detuneBounds,\n                                                                maxValue: osc_2.detuneBounds,\n                                                                automationRate: 'a-rate',\n                                                            },{\n                                                                name: 'gain_mode',\n                                                                defaultValue: 0, // 0 - manual / 1 - automatic\n                                                                minValue: 0,\n                                                                maxValue: 1,\n                                                                automationRate: 'k-rate',\n                                                            },{\n                                                                name: 'detune_mode',\n                                                                defaultValue: 0, // 0 - manual / 1 - automatic\n                                                                minValue: 0,\n                                                                maxValue: 1,\n                                                                automationRate: 'k-rate',\n                                                            },\n                                                \n                                                \n                                                \n                                                            {\n                                                                name: 'harmonic_mux_1',\n                                                                defaultValue: 1,\n                                                                minValue: 0,\n                                                                maxValue: 32,\n                                                                automationRate: 'a-rate',\n                                                            },{\n                                                                name: 'harmonic_mux_2',\n                                                                defaultValue: 1,\n                                                                minValue: 0,\n                                                                maxValue: 32,\n                                                                automationRate: 'a-rate',\n                                                            },{\n                                                                name: 'harmonic_power_1',\n                                                                defaultValue: 1,\n                                                                minValue: 0,\n                                                                maxValue: 32,\n                                                                automationRate: 'a-rate',\n                                                            },{\n                                                                name: 'harmonic_power_2',\n                                                                defaultValue: 1,\n                                                                minValue: 0,\n                                                                maxValue: 32,\n                                                                automationRate: 'a-rate',\n                                                            },\n                                                        ];\n                                                    }\n                                                \n                                                    constructor(options){\n                                                        super(options);\n                                                        this._wavePosition = 0;\n                                                    }\n                                                \n                                                    process(inputs, outputs, parameters){\n                                                        const output = outputs[0];\n                                                        const gainControl = inputs[0];\n                                                        const detuneControl = inputs[1];\n                                                \n                                                        const frequency_useFirstOnly = parameters.frequency.length == 1;\n                                                        const detune_useFirstOnly = parameters.detune.length == 1;\n                                                        const gain_useFirstOnly = parameters.gain.length == 1;\n                                                \n                                                        for(let channel = 0; channel < output.length; channel++){\n                                                            for(let a = 0; a < output[channel].length; a++){\n                                                                const gain = parameters.gain_mode[0] == 0 ? (gain_useFirstOnly ? parameters.gain[0] : parameters.gain[a]) : gainControl[channel][a];\n                                                                const frequency = frequency_useFirstOnly ? parameters.frequency[0] : parameters.frequency[a];\n                                                                const detune = parameters.detune_mode[0] == 0 ? (detune_useFirstOnly ? parameters.detune[0] : parameters.detune[a]) : detuneControl[channel][a];\n                                                \n                                                                this._wavePosition += (frequency*(detune*osc_2.detuneMux + 1))/sampleRate;\n                                                                const localWavePosition = this._wavePosition % 1;\n                                                \n                                                                output[channel][a] = gain*parameters.harmonic_power_1[0]*Math.sin(\n                                                                    osc_2.twoPI*localWavePosition*parameters.harmonic_mux_1[0] + (Math.PI/2)*parameters.harmonic_power_2[0]*Math.sin(\n                                                                        osc_2.twoPI*localWavePosition*parameters.harmonic_mux_2[0]\n                                                                    )\n                                                                );\n                                                            }\n                                                        }\n                                                \n                                                        return true;\n                                                    }\n                                                }\n                                                registerProcessor('osc_2', osc_2);\n                                            "],{type:"text/javascript"}),class:class extends AudioWorkletNode{constructor(e,t={}){t.numberOfInputs=2,t.numberOfOutputs=1,t.channelCount=1,super(e,"osc_2",t)}get frequency(){return this.parameters.get("frequency")}get gain(){return this.parameters.get("gain")}get detune(){return this.parameters.get("detune")}get harmonic_mux_1(){return this.parameters.get("harmonic_mux_1")}get harmonic_mux_2(){return this.parameters.get("harmonic_mux_2")}get harmonic_power_1(){return this.parameters.get("harmonic_power_1")}get harmonic_power_2(){return this.parameters.get("harmonic_power_2")}}},{name:"osc_3",worklet:new Blob(["\n                                                class osc_3 extends AudioWorkletProcessor{\n                                                    static twoPI = Math.PI*2;\n                                                    static starterFrequency = 440;\n                                                    static maxFrequency = 20000;\n                                                    static detuneMux = 0.1;\n                                                    static detuneBounds = 1/osc_3.detuneMux;\n                                                    static modulationSettings = [\n                                                        {mux:1,power:1},\n                                                        {mux:1,power:1},\n                                                    ];\n                                                \n                                                    static get parameterDescriptors(){\n                                                        return [\n                                                            {\n                                                                name: 'frequency',\n                                                                defaultValue: osc_3.starterFrequency,\n                                                                minValue: 0,\n                                                                maxValue: osc_3.maxFrequency,\n                                                                automationRate: 'a-rate',\n                                                            },{\n                                                                name: 'gain',\n                                                                defaultValue: 1,\n                                                                minValue: -1,\n                                                                maxValue: 1,\n                                                                automationRate: 'a-rate',\n                                                            },{\n                                                                name: 'detune',\n                                                                defaultValue: 0,\n                                                                minValue: -osc_3.detuneBounds,\n                                                                maxValue: osc_3.detuneBounds,\n                                                                automationRate: 'a-rate',\n                                                            },{\n                                                                name: 'gain_mode',\n                                                                defaultValue: 0, // 0 - manual / 1 - automatic\n                                                                minValue: 0,\n                                                                maxValue: 1,\n                                                                automationRate: 'k-rate',\n                                                            },{\n                                                                name: 'detune_mode',\n                                                                defaultValue: 0, // 0 - manual / 1 - automatic\n                                                                minValue: 0,\n                                                                maxValue: 1,\n                                                                automationRate: 'k-rate',\n                                                            },\n                                                        ];\n                                                    }\n                                                \n                                                    constructor(options){\n                                                        super(options);\n                                                        this._wavePosition = 0;\n                                                \n                                                        this.port.onmessage = function(event){\n                                                            osc_3.modulationSettings = event.data;\n                                                            // console.log( JSON.stringify(osc_3.modulationSettings) );\n                                                        };\n                                                    }\n                                                \n                                                    process(inputs, outputs, parameters){\n                                                        const output = outputs[0];\n                                                        const gainControl = inputs[0];\n                                                        const detuneControl = inputs[1];\n                                                \n                                                        const frequency_useFirstOnly = parameters.frequency.length == 1;\n                                                        const detune_useFirstOnly = parameters.detune.length == 1;\n                                                        const gain_useFirstOnly = parameters.gain.length == 1;\n                                                \n                                                        for(let channel = 0; channel < output.length; channel++){\n                                                            for(let a = 0; a < output[channel].length; a++){\n                                                                const gain = parameters.gain_mode[0] == 0 ? (gain_useFirstOnly ? parameters.gain[0] : parameters.gain[a]) : gainControl[channel][a];\n                                                                const frequency = frequency_useFirstOnly ? parameters.frequency[0] : parameters.frequency[a];\n                                                                const detune = parameters.detune_mode[0] == 0 ? (detune_useFirstOnly ? parameters.detune[0] : parameters.detune[a]) : detuneControl[channel][a];\n                                                \n                                                                this._wavePosition += (frequency*(detune*osc_3.detuneMux + 1))/sampleRate;\n                                                                const localWavePosition = this._wavePosition % 1;\n                                                \n                                                                for(let b = 0; b < osc_3.modulationSettings.length; b++){\n                                                                    output[channel][a] = osc_3.modulationSettings[b].power*Math.sin(\n                                                                        osc_3.twoPI*localWavePosition*osc_3.modulationSettings[b].mux + (Math.PI/2)*output[channel][a]\n                                                                    );\n                                                                }\n                                                                output[channel][a] = gain*output[channel][a];\n                                                            }\n                                                        }\n                                                \n                                                        return true;\n                                                    }\n                                                }\n                                                registerProcessor('osc_3', osc_3);\n                                            "],{type:"text/javascript"}),class:class extends AudioWorkletNode{constructor(e,t={}){t.numberOfInputs=3,t.numberOfOutputs=1,t.channelCount=1,super(e,"osc_3",t),this._modulationSettings=[{mux:1,power:1},{mux:1,power:1}],this.modulationSettings=function(e){if(null==e)return this._modulationSettings;this._modulationSettings=e,this.port.postMessage(e)}}get frequency(){return this.parameters.get("frequency")}get gain(){return this.parameters.get("gain")}get detune(){return this.parameters.get("detune")}}},{name:"osc_4",worklet:new Blob(["\n                                                class osc_4 extends AudioWorkletProcessor{\n                                                    static twoPI = Math.PI*2;\n                                                    static starterFrequency = 440;\n                                                    static maxFrequency = 20000;\n                                                    static detuneMux = 0.1;\n                                                    static detuneBounds = 1/osc_4.detuneMux;\n                                                \n                                                    static get parameterDescriptors(){\n                                                        return [\n                                                            {\n                                                                name: 'frequency',\n                                                                defaultValue: osc_4.starterFrequency,\n                                                                minValue: 0,\n                                                                maxValue: osc_4.maxFrequency,\n                                                                automationRate: 'a-rate',\n                                                            },{\n                                                                name: 'gain',\n                                                                defaultValue: 1,\n                                                                minValue: -1,\n                                                                maxValue: 1,\n                                                                automationRate: 'a-rate',\n                                                            },{\n                                                                name: 'detune',\n                                                                defaultValue: 0,\n                                                                minValue: -osc_4.detuneBounds,\n                                                                maxValue: osc_4.detuneBounds,\n                                                                automationRate: 'a-rate',\n                                                            },{\n                                                                name: 'dutyCycle',\n                                                                defaultValue: 0.5,\n                                                                minValue: 0,\n                                                                maxValue: 1,\n                                                                automationRate: 'a-rate',\n                                                            },\n                                                        ];\n                                                    }\n                                                \n                                                    constructor(options){\n                                                        super(options);\n                                                        const self = this;\n                                                        this._wavePosition = 0;\n                                                \n                                                        this._state = {\n                                                            waveform:'sin',\n                                                            gain_useControl:false,\n                                                            detune_useControl:false,\n                                                            dutyCycle_useControl:false,\n                                                        };\n                                                        this._envelope = {\n                                                            phase:'off', // front - wait - back - off\n                                                            requestedPhase:undefined,\n                                                \n                                                            gainStep:0,\n                                                            previousGain:0,\n                                                            currentGain:0,\n                                                \n                                                            procedure:{\n                                                                index:0,\n                                                                sample:0,\n                                                                front:[ {destination:1, elapse:0, _elapseSamples:1} ],\n                                                                back:[ {destination:0, elapse:0, _elapseSamples:1} ],\n                                                            },\n                                                            defaultProcedurePoint:{\n                                                                front:{destination:1, elapse:0, _elapseSamples:1},\n                                                                back:{destination:0, elapse:0, _elapseSamples:1},\n                                                            },\n                                                        };\n                                                \n                                                        this.port.onmessage = function(event){\n                                                            Object.entries(event.data).forEach(([key,value]) => {\n                                                                switch(key){\n                                                                    case 'command':\n                                                                        switch(value){\n                                                                            case 'start':\n                                                                                if(self._envelope.requestedPhase == 'back' || self._envelope.phase == 'back' || self._envelope.phase == 'off'){\n                                                                                    self._envelope.requestedPhase = 'front';\n                                                                                }\n                                                                            break;\n                                                                            case 'stop':\n                                                                                if(self._envelope.requestedPhase == 'front' || self._envelope.phase == 'front' || self._envelope.phase == 'wait'){\n                                                                                    self._envelope.requestedPhase = 'back';\n                                                                                }\n                                                                            break;\n                                                                        }\n                                                                    break;\n                                                                    case 'waveform': \n                                                                        self._state.waveform = value;\n                                                                    break;\n                                                                    case 'gain_useControl': \n                                                                        self._state.gain_useControl = value;\n                                                                    break;\n                                                                    case 'detune_useControl': \n                                                                        self._state.detune_useControl = value;\n                                                                    break;\n                                                                    case 'dutyCycle_useControl': \n                                                                        self._state.dutyCycle_useControl = value;\n                                                                    break;\n                                                                    case 'envelope':\n                                                                        Object.entries(value).forEach(([phase,points]) => {\n                                                                            if( points != undefined && points.length != 0 ){\n                                                                                self._envelope.procedure[phase] = points.map(point => {\n                                                                                    return {\n                                                                                        destination:point.destination, \n                                                                                        elapse:point.elapse, \n                                                                                        _elapseSamples:point.elapse == 0 ? 1 : sampleRate*point.elapse\n                                                                                    };\n                                                                                });\n                                                                            }else{\n                                                                                self._envelope.procedure[phase] = [self._envelope.defaultProcedurePoint[phase]];\n                                                                            }\n                                                                        });\n                                                                    break;\n                                                                }\n                                                            });\n                                                        };\n                                                        this.port.start();\n                                                    }\n                                                \n                                                    process(inputs, outputs, parameters){\n                                                        //envelope calculation\n                                                            this.activatePhase();\n                                                            if( this._envelope.phase == 'off'){ return true; }\n                                                \n                                                        //io\n                                                            const output = outputs[0];\n                                                            const gainControl = inputs[0];\n                                                            const detuneControl = inputs[1];\n                                                            const dutyCycleControl = inputs[2];\n                                                \n                                                        //oscillation gerneration\n                                                            const frequency_useFirstOnly = parameters.frequency.length == 1;\n                                                            const dutyCycle_useFirstOnly = parameters.dutyCycle.length == 1;\n                                                            const detune_useFirstOnly = parameters.detune.length == 1;\n                                                            const gain_useFirstOnly = parameters.gain.length == 1;\n                                                \n                                                            for(let channel = 0; channel < output.length; channel++){\n                                                                for(let a = 0; a < output[channel].length; a++){\n                                                                    if(this._envelope.phase == 'front' || this._envelope.phase == 'back'){\n                                                                        if( currentFrame+a - this._envelope.procedure.sample >= this._envelope.procedure[this._envelope.phase][this._envelope.procedure.index]._elapseSamples ){\n                                                                            this._envelope.procedure.index++;\n                                                                            this._envelope.procedure.sample = currentFrame+a;\n                                                                            if( this._envelope.procedure.index >= this._envelope.procedure[this._envelope.phase].length){\n                                                                                if(this._envelope.phase == 'front'){\n                                                                                    this._envelope.phase = 'wait';\n                                                                                    this.port.postMessage({phase:'wait'});\n                                                                                    this._envelope.gainStep = 0;\n                                                                                }else if(this._envelope.phase == 'back'){\n                                                                                    this._envelope.phase = 'off';\n                                                                                    this.port.postMessage({phase:'off'});\n                                                                                    this._envelope.gainStep = 0;\n                                                                                }\n                                                                            }else{\n                                                                                this._envelope.previousGain = this._envelope.currentGain;\n                                                                                this._envelope.gainStep = (this._envelope.procedure[this._envelope.phase][this._envelope.procedure.index].destination - this._envelope.previousGain)/this._envelope.procedure[this._envelope.phase][this._envelope.procedure.index]._elapseSamples;                    \n                                                                            }\n                                                                        }\n                                                                    }\n                                                \n                                                                    this._envelope.currentGain += this._envelope.gainStep;\n                                                \n                                                                    const gain = this._envelope.currentGain * (this._state.gain_useControl ? gainControl[channel][a] : (gain_useFirstOnly ? parameters.gain[0] : parameters.gain[a]));\n                                                                    const frequency = frequency_useFirstOnly ? parameters.frequency[0] : parameters.frequency[a];\n                                                                    const detune = this._state.detune_useControl ? detuneControl[channel][a] : (detune_useFirstOnly ? parameters.detune[0] : parameters.detune[a]);\n                                                                    const dutyCycle = this._state.dutyCycle_useControl ? dutyCycleControl[channel][a] : (dutyCycle_useFirstOnly ? parameters.dutyCycle[0] : parameters.dutyCycle[a]);\n                                                \n                                                                    this._wavePosition += (frequency*(detune*osc_4.detuneMux + 1))/sampleRate;\n                                                                    const localWavePosition = this._wavePosition % 1;\n                                                \n                                                                    switch(this._state.waveform){\n                                                                        case 'sin':\n                                                                            output[channel][a] = gain*Math.sin( localWavePosition * osc_4.twoPI );\n                                                                        break;\n                                                                        case 'square':\n                                                                            output[channel][a] = gain*(localWavePosition < dutyCycle ? 1 : -1);\n                                                                        break;\n                                                                        case 'triangle':\n                                                                            if(localWavePosition < dutyCycle/2){\n                                                                                output[channel][a] = gain*(2*localWavePosition / dutyCycle);\n                                                                            }else if(localWavePosition >= 1 - dutyCycle/2){\n                                                                                output[channel][a] = gain*((2*localWavePosition - 2) / dutyCycle);\n                                                                            }else{\n                                                                                output[channel][a] = gain*((2*localWavePosition - 1) / (dutyCycle - 1));\n                                                                            }\n                                                                        break;\n                                                                        case 'noise': default: \n                                                                            output[channel][a] = gain*(Math.random()*2 - 1);\n                                                                        break;\n                                                                    }\n                                                                }\n                                                            }\n                                                \n                                                        return true;\n                                                    }\n                                                \n                                                    activatePhase(){\n                                                        if( this._envelope.requestedPhase != undefined && this._envelope.requestedPhase != this._envelope.phase ){\n                                                            this._envelope.phase = this._envelope.requestedPhase;\n                                                            this.port.postMessage({phase:this._envelope.phase});\n                                                            this._envelope.requestedPhase = undefined;\n                                                            this._envelope.procedure.sample = currentFrame;\n                                                            this._envelope.procedure.index = 0;\n                                                            this._envelope.previousGain = this._envelope.currentGain;\n                                                            this._envelope.gainStep = (this._envelope.procedure[this._envelope.phase][this._envelope.procedure.index].destination - this._envelope.previousGain)/this._envelope.procedure[this._envelope.phase][this._envelope.procedure.index]._elapseSamples;\n                                                            if( this._envelope.phase == 'start' ){ this._wavePosition = 0; }\n                                                        }\n                                                    }\n                                                }\n                                                registerProcessor('osc_4', osc_4);\n                                            "],{type:"text/javascript"}),class:class extends AudioWorkletNode{constructor(e,t={}){t.numberOfInputs=3,t.numberOfOutputs=1,t.channelCount=1,super(e,"osc_4",t);const n=this;this._state={waveform:"sin",gain_useControl:!1,detune_useControl:!1,dutyCycle_useControl:!1},this._envelope={front:[{elapse:.5,gain:5},{elapse:.5,gain:1}],back:[{elapse:.5,gain:5},{elapse:.5,gain:0}]},this.port.onmessage=function(e){null!=n.onEnvelopeEvent&&n.onEnvelopeEvent(e.data.phase)},this.start=function(){this.port.postMessage({command:"start"})},this.stop=function(){this.port.postMessage({command:"stop"})},this.onEnvelopeEvent=function(e){console.log(e)}}get frequency(){return this.parameters.get("frequency")}get gain(){return this.parameters.get("gain")}get detune(){return this.parameters.get("detune")}get dutyCycle(){return this.parameters.get("dutyCycle")}get waveform(){return this._waveform}set waveform(e){this._state.waveform=e,this.port.postMessage({waveform:e})}get gain_useControl(){return this._state.gain_useControl}set gain_useControl(e){this._state.gain_useControl=e,this.port.postMessage({gain_useControl:e})}get detune_useControl(){return this._state.detune_useControl}set detune_useControl(e){this._state.detune_useControl=e,this.port.postMessage({detune_useControl:e})}get dutyCycle_useControl(){return this._state.dutyCycle_useControl}set dutyCycle_useControl(e){this._state.dutyCycle_useControl=e,this.port.postMessage({dutyCycle_useControl:e})}get envelope(){return JSON.parse(JSON.stringify(this._envelope))}set envelope(e){this._envelope=e,this.port.postMessage({envelope:e})}}},{name:"squareWaveGenerator",worklet:new Blob(["\n                                                class squareWaveGenerator extends AudioWorkletProcessor{\n                                                    static get parameterDescriptors(){\n                                                        return [\n                                                            {\n                                                                name: 'frequency',\n                                                                defaultValue: 440,\n                                                                minValue: 0,\n                                                                maxValue: 20000,\n                                                                automationRate: 'a-rate',\n                                                            },{\n                                                                name: 'dutyCycle',\n                                                                defaultValue: 0.5,\n                                                                minValue: 0,\n                                                                maxValue: 1,\n                                                                automationRate: 'a-rate',\n                                                            }\n                                                        ];\n                                                    }\n                                                \n                                                    constructor(options){\n                                                        super(options);\n                                                    }\n                                                \n                                                    process(inputs, outputs, parameters){\n                                                        const output = outputs[0];\n                                                \n                                                        const frequency_useFirstOnly = parameters.frequency.length == 1;\n                                                        const dutyCycle_useFirstOnly = parameters.dutyCycle.length == 1;\n                                                \n                                                        for(let channel = 0; channel < output.length; channel++){\n                                                            for(let a = 0; a < output[channel].length; a++){\n                                                                const frequency = frequency_useFirstOnly ? parameters.frequency[0] : parameters.frequency[a];\n                                                                const dutyCycle = dutyCycle_useFirstOnly ? parameters.dutyCycle[0] : parameters.dutyCycle[a];\n                                                \n                                                                const overallWaveProgressPercentage = (frequency/sampleRate) * (currentFrame+a);\n                                                                const waveProgress = overallWaveProgressPercentage - Math.trunc(overallWaveProgressPercentage);\n                                                                output[channel][a] = waveProgress < dutyCycle ? 1 : -1;\n                                                            }\n                                                        }\n                                                \n                                                        return true;\n                                                    }\n                                                }\n                                                registerProcessor('squareWaveGenerator', squareWaveGenerator);\n                                            "],{type:"text/javascript"}),class:class extends AudioWorkletNode{constructor(e,t={}){t.numberOfInputs=0,t.numberOfOutputs=1,t.channelCount=1,super(e,"squareWaveGenerator",t)}get frequency(){return this.parameters.get("frequency")}get dutyCycle(){return this.parameters.get("dutyCycle")}}},{name:"testWorklet",worklet:new Blob(["\n                                                class testWorklet extends AudioWorkletProcessor{\n                                                    static MinimumValue = -10;\n                                                \n                                                    #privateValue = 100;\n                                                \n                                                    static get parameterDescriptors(){\n                                                        return [\n                                                            {\n                                                                name: 'valueA',\n                                                                defaultValue: 10,\n                                                                minValue: 1,\n                                                                maxValue: 100,\n                                                                automationRate: 'a-rate', //you should use the array, it's the same length as the block\n                                                            },{\n                                                                name: 'valueB',\n                                                                defaultValue: 10,\n                                                                minValue: 1,\n                                                                maxValue: 100,\n                                                                automationRate: 'k-rate', //you should use only the first value in the array\n                                                            }\n                                                        ];\n                                                    }\n                                                    \n                                                    constructor(options){\n                                                        super(options);\n                                                        console.log('<<< constructor >>>');\n                                                        console.log('options:',options);\n                                                \n                                                        this._lastUpdate = currentTime;\n                                                        this._callCount = 0;\n                                                \n                                                        this.port.onmessage = function(event){\n                                                            console.log('worklet.port.onmessage',event);\n                                                        };\n                                                    }\n                                                \n                                                    process(inputs, outputs, parameters){\n                                                        this._callCount++;\n                                                        if( currentTime - this._lastUpdate >= 1 ){\n                                                            console.log('<<< process >>>');\n                                                            console.log('currentTime:',currentTime);\n                                                            console.log('currentFrame:',currentFrame);\n                                                            console.log('calls since last printing:',this._callCount);\n                                                            console.log('samples since last printing:',this._callCount*outputs[0][0].length);\n                                                            console.log(' - number of inputs:',inputs.length);\n                                                            inputs.forEach((input,index) => {\n                                                                console.log('   '+index+' : streams:',input.length,': samples per stream:',input.map(a => a.length));\n                                                            });\n                                                            console.log(' - number of outputs:',outputs.length);\n                                                            outputs.forEach((output,index) => {\n                                                                console.log('   '+index+' : streams:',output.length,': samples per stream:',output.map(a => a.length));\n                                                            });\n                                                \n                                                            console.log( 'parameters:',parameters );\n                                                            console.log( 'parameters.valueA:',parameters.valueA );\n                                                            console.log( 'parameters.valueB:',parameters.valueB );\n                                                \n                                                            // console.log( testWorklet.MinimumValue );\n                                                            // console.log( this.#privateValue );\n                                                \n                                                            this._lastUpdate = currentTime;\n                                                            this._callCount = 0;\n                                                            return false;\n                                                        }\n                                                \n                                                        const input = inputs[0];\n                                                        const output = outputs[0];\n                                                    \n                                                        for(let channel = 0; channel < input.length; channel++){\n                                                            const inputChannel = input[channel];\n                                                            const outputChannel = output[channel];\n                                                    \n                                                            for(let a = 0; a < inputChannel.length; a++){\n                                                                outputChannel[a] = inputChannel[a];\n                                                            }\n                                                        }\n                                                        return true;\n                                                    }\n                                                }\n                                                registerProcessor('testWorklet', testWorklet);\n                                                \n                                                \n                                                \n                                                \n                                                \n                                                \n                                                \n                                                \n                                                \n                                                \n                                                \n                                                \n                                                \n                                                \n                                                \n                                                \n                                                \n                                                \n                                                \n                                                \n                                                \n                                                \n                                                \n                                                \n                                                \n                                                \n                                                \n                                                \n                                                \n                                                \n                                                \n                                                \n                                                \n                                                \n                                                \n                                                \n                                                \n                                                // class squareWaveGenerator extends AudioWorkletProcessor{\n                                                //     static get parameterDescriptors(){\n                                                //         return [];\n                                                //     }\n                                                \n                                                //     constructor(options){\n                                                //         super(options);\n                                                //         this._frequency = 440;\n                                                //         this._phaseMux = (2*this._frequency) / sampleRate;\n                                                //     }\n                                                \n                                                //     process(inputs, outputs, parameters){\n                                                //         const output = outputs[0];\n                                                        \n                                                //         for(let channel = 0; channel < output.length; channel++){\n                                                //             for(let a = 0; a < output[channel].length; a++){\n                                                //                 output[channel][a] = Math.sin( Math.PI * this._phaseMux * (currentFrame+a) );\n                                                //             }\n                                                //         }\n                                                //         return true;\n                                                //     }\n                                                // }\n                                                // registerProcessor('squareWaveGenerator', squareWaveGenerator);\n                                                \n                                                \n                                                \n                                                \n                                                \n                                                \n                                                \n                                                \n                                                \n                                                \n                                                \n                                                \n                                                \n                                                \n                                                \n                                                \n                                                \n                                                \n                                                \n                                                \n                                                \n                                                \n                                                \n                                                \n                                                \n                                                \n                                                \n                                                \n                                                \n                                                \n                                                \n                                                \n                                                \n                                                \n                                                \n                                                \n                                                \n                                                \n                                                \n                                                \n                                                \n                                                \n                                                \n                                                \n                                                \n                                                \n                                                \n                                                \n                                                \n                                                \n                                                // class squareWaveGenerator extends AudioWorkletProcessor{\n                                                //     static get parameterDescriptors(){\n                                                //         return [];\n                                                //     }\n                                                \n                                                //     constructor(options){\n                                                //         super(options);\n                                                \n                                                //         this._frequency = 440;\n                                                //         this._dutyCycle = 0.5;\n                                                //         this._frameCount = 0;\n                                                \n                                                //         this._flip = false;\n                                                \n                                                //         // this._data = [];\n                                                //     }\n                                                \n                                                //     process(inputs, outputs, parameters){\n                                                //         const samplingRate = sampleRate;\n                                                //         const output = outputs[0];\n                                                        \n                                                //         // for(let channel = 0; channel < output.length; channel++){\n                                                //         //     for(let a = 0; a < output[channel].length; a++){\n                                                //         //         if( this._sampleCount >= samplingRate / (this._frequency*2) ){\n                                                //         //             this._sampleCount = 0;\n                                                //         //             this._flip = !this._flip;\n                                                //         //         }else{\n                                                //         //             this._sampleCount++; \n                                                //         //         }\n                                                //         //         output[channel][a] = (this._flip ? 1 : 0) * 0.25\n                                                //         //     }\n                                                //         // }\n                                                \n                                                \n                                                \n                                                //         const phaseMux = (2*this._frequency) / samplingRate;\n                                                //         function sineWave(sampleNumber){\n                                                //             return Math.sin( Math.PI * phaseMux * sampleNumber );\n                                                //         }\n                                                //         for(let channel = 0; channel < output.length; channel++){\n                                                //             for(let a = 0; a < output[channel].length; a++){\n                                                //                 output[channel][a] = sineWave(currentFrame+a);\n                                                //             }\n                                                //             // this._data.push(...output[channel]);\n                                                \n                                                //             // if( this._sampleCount >= samplingRate ){\n                                                //             //     this._sampleCount = 0;\n                                                //             //     // console.log(this._data);\n                                                //             //     // return false;\n                                                //             // }\n                                                \n                                                \n                                                \n                                                \n                                                \n                                                //             // if( this._sampleCount >= 500 ){\n                                                //             //     console.log( JSON.stringify(this._data) );\n                                                //             //     return false;\n                                                //             // }\n                                                //         }\n                                                \n                                                \n                                                \n                                                \n                                                //         // // for(let a = 0; a < outputs[0][0].length; a++){\n                                                //         // //     this._sampleCount++;\n                                                //         // // }\n                                                //         // // if( this._sampleCount%44160 == 0 ){\n                                                //         // //     console.log( currentTime, this._sampleCount );\n                                                //         // // }\n                                                //         // if( this._frameCount%345 == 0 ){\n                                                //         //     console.log( currentTime, this._frameCount, samplingRate );\n                                                //         // }\n                                                \n                                                //         // for(let channel = 0; channel < output.length; channel++){\n                                                //         //     for(let a = 0; a < output[channel].length/2; a++){\n                                                //         //         output[channel][a] = 1;\n                                                //         //     }\n                                                //         //     for(let a = output[channel].length/2; a < output[channel].length; a++){\n                                                //         //         output[channel][a] = -1;\n                                                //         //     }\n                                                //         // }\n                                                \n                                                //         this._frameCount++;\n                                                //         return true;\n                                                //     }\n                                                // }\n                                                // registerProcessor('squareWaveGenerator', squareWaveGenerator);\n                                                \n                                                \n                                                \n                                                \n                                                \n                                                // samplingRate = 44160\n                                                //1hz = a complete waveform takes 44160 samples\n                                                //2hz = a complete waveform takes 22080 samples\n                                                //10hz = a complete waveform takes 4416 samples\n                                                //80hz = a complete waveform takes 552 samples\n                                                //100hz = a complete waveform takes 441.6 samples\n                                                //400hz = a complete waveform takes 110.4 samples\n                                                //440hz = a complete waveform takes 100.3636... samples\n                                                //480hz = a complete waveform takes 92 samples\n                                                \n                                                // samples that a complete waveform takes = samplingRate / frequency of wave\n                                                // frequency of wave = samplingRate / samples that a complete waveform takes\n                                                // frequency of wave * samples that a complete waveform takes = samplingRate\n                                                \n                                                // 441.6hz = a complete waveform takes 100 samples\n                                                // 437.2277227722772hz = a complete waveform takes 101 samples\n                                            "],{type:"text/javascript"}),class:class extends AudioWorkletNode{constructor(e,t={}){t.numberOfInputs=6,t.numberOfOutputs=6,t.channelCount=1,super(e,"testWorklet",t),this._superImportantValue="farts",this.port.onmessage=function(e){console.log("worklet.node.onmessage",e)},this.port.start()}get superImportantValue(){return console.log('getting super important value, which happens to be "'+this._superImportantValue+'"'),this._superImportantValue}set superImportantValue(e){console.log('the super important value is being changed to "'+e+'"'),this._superImportantValue=e,this.port.postMessage({superImportantValue:this._superImportantValue})}doubleTheSuperImportantValue(){console.log("doubling the super important value"),this._superImportantValue=this._superImportantValue+this._superImportantValue,this.port.postMessage({superImportantValue:this._superImportantValue})}}},{name:"amplitudeControlledModulator",worklet:new Blob(["\n                                                class amplitudeControlledModulator extends AudioWorkletProcessor{\n                                                    static get parameterDescriptors(){\n                                                        return [];\n                                                    }\n                                                    \n                                                    constructor(options){\n                                                        super(options);\n                                                    }\n                                                \n                                                    process(inputs, outputs, parameters){\n                                                        const input_1 = inputs[0];\n                                                        const input_2 = inputs[1];\n                                                        const output_1 = outputs[0];\n                                                \n                                                        for(let channel = 0; channel < input_1.length; channel++){    \n                                                            for(let a = 0; a < output_1[channel].length; a++){\n                                                                output_1[channel][a] = input_1[channel][a] * input_2[channel][a];\n                                                            }\n                                                        }\n                                                \n                                                        return true;\n                                                    }\n                                                }\n                                                registerProcessor('amplitudeControlledModulator', amplitudeControlledModulator);\n                                            "],{type:"text/javascript"}),class:class extends AudioWorkletNode{constructor(e,t={}){t.numberOfInputs=2,t.numberOfOutputs=1,t.channelCount=1,super(e,"amplitudeControlledModulator",t)}}}],readyCount:0},wasm:{list:[{name:"squareWaveGenerator_wasm",worklet:new Blob(["\n                                                class squareWaveGenerator_wasm extends AudioWorkletProcessor{\n                                                    static get parameterDescriptors(){\n                                                        return [\n                                                            {\n                                                                name: 'frequency',\n                                                                defaultValue: 440,\n                                                                minValue: 0,\n                                                                maxValue: 20000,\n                                                                automationRate: 'a-rate',\n                                                            },{\n                                                                name: 'dutyCycle',\n                                                                defaultValue: 0.5,\n                                                                minValue: 0,\n                                                                maxValue: 1,\n                                                                automationRate: 'a-rate',\n                                                            }\n                                                        ];\n                                                    }\n                                                \n                                                    constructor(options){\n                                                        super(options);\n                                                \t\tconst self = this;\n                                                \n                                                        this.port.onmessage = function(event){\n                                                            switch(event.data.command){\n                                                                case 'loadWasm':\n                                                                    WebAssembly.instantiate(event.data.value).then(result => {\n                                                                        self.wasm = result;\n                                                \n                                                                        self.outputFrame = {};\n                                                                        self.outputFrame.pointer = self.wasm.exports.alloc_128_f32_wasm_memory();\n                                                                        self.outputFrame.buffer = new Float32Array(self.wasm.exports.memory.buffer, self.outputFrame.pointer, 128);\n                                                \n                                                                        self.frequency = {};\n                                                                        self.frequency.pointer = self.wasm.exports.alloc_128_f32_wasm_memory();\n                                                                        self.frequency.buffer = new Float32Array(self.wasm.exports.memory.buffer, self.frequency.pointer, 128);\n                                                \n                                                                        self.dutyCycle = {};\n                                                                        self.dutyCycle.pointer = self.wasm.exports.alloc_128_f32_wasm_memory();\n                                                                        self.dutyCycle.buffer = new Float32Array(self.wasm.exports.memory.buffer, self.dutyCycle.pointer, 128);\n                                                                    });\n                                                                break;\n                                                            }\n                                                        };\n                                                    }\n                                                \n                                                    process(inputs, outputs, parameters){\n                                                        if(this.wasm){\n                                                            const output = outputs[0];\n                                                \n                                                            const frequency_useFirstOnly = parameters.frequency.length == 1;\n                                                            const dutyCycle_useFirstOnly = parameters.dutyCycle.length == 1;\n                                                \n                                                            this.frequency.buffer.set(parameters.frequency);\n                                                            this.dutyCycle.buffer.set(parameters.dutyCycle);\n                                                \n                                                            for(let channel = 0; channel < output.length; channel++){\n                                                                this.wasm.exports.process(\n                                                                    sampleRate,\n                                                                    currentFrame,\n                                                                    frequency_useFirstOnly,\n                                                                    this.frequency.pointer,\n                                                                    dutyCycle_useFirstOnly,\n                                                                    this.dutyCycle.pointer,\n                                                                    this.outputFrame.pointer\n                                                                );\n                                                                output[channel].set(this.outputFrame.buffer);\n                                                            }\n                                                        }\n                                                        \n                                                        return true;\n                                                    }\n                                                }\n                                                registerProcessor('squareWaveGenerator_wasm', squareWaveGenerator_wasm);\n                                            "],{type:"text/javascript"}),class:class e extends AudioWorkletNode{static wasm_url="wasm/audio_processing/square_wave_generator.production.wasm";static arrayBuffer_wasm;static compiled_wasm;constructor(n,o={}){o.numberOfInputs=0,o.numberOfOutputs=1,o.channelCount=1,super(n,"squareWaveGenerator_wasm",o),t.audioWorklet.requestWasm(e,this)}get frequency(){return this.parameters.get("frequency")}get dutyCycle(){return this.parameters.get("dutyCycle")}}},{name:"audio_buffer_type_2",worklet:new Blob(["\n                                                class audio_buffer_type_2 extends AudioWorkletProcessor {\n                                                    static get parameterDescriptors(){\n                                                        return [\n                                                            {\n                                                                name: 'rate',\n                                                                defaultValue: 1,\n                                                                minValue: -8,\n                                                                maxValue: 8,\n                                                                automationRate: 'a-rate',\n                                                            },\n                                                        ];\n                                                    }\n                                                \n                                                    attachBuffers(){\n                                                        this.playheadPositionReadout = { pointer: this.wasm.exports.get_playhead_position_readout_pointer() };\n                                                        this.playheadPositionReadout.buffer = new Uint32Array(this.wasm.exports.memory.buffer, this.playheadPositionReadout.pointer, 256);\n                                                        this.outputFrame = { pointer: this.wasm.exports.get_output_pointer() };\n                                                        this.outputFrame.buffer = new Float32Array(this.wasm.exports.memory.buffer, this.outputFrame.pointer, 128);\n                                                        this.rateFrame = { pointer: this.wasm.exports.get_rate_pointer() };\n                                                        this.rateFrame.buffer = new Float32Array(this.wasm.exports.memory.buffer, this.rateFrame.pointer, 128);\n                                                    }\n                                                \n                                                    constructor(options){\n                                                        //construct class instance\n                                                            super(options);\n                                                \n                                                        //instance state\n                                                            this.shutdown = false;\n                                                            this._state = {\n                                                                nodeConstructorTime: undefined,\n                                                                temporaryAudioData: undefined,\n                                                                rate_useControl: false,\n                                                            };\n                                                \n                                                        //setup message receiver\n                                                            const self = this;\n                                                            this.port.onmessage = function(event){\n                                                                console.log(event.data);\n                                                                switch(event.data.command){\n                                                                    //time sync\n                                                                        case 'log_nodeConstructorTime':\n                                                                            self._state.nodeConstructorTime = event.data.value;\n                                                                        break;\n                                                \n                                                                    //wasm initialization\n                                                                        case 'loadUncompiledWasm':\n                                                                            WebAssembly.compile(event.data.value).then(module => {\n                                                                                WebAssembly.instantiate(\n                                                                                    module,\n                                                                                    { env: {\n                                                                                        _onEnd: function(playhead_id){ self.port.postMessage({ command:'onEnd', value:playhead_id }); },\n                                                                                        _onLoop: function(playhead_id){ self.port.postMessage({ command:'onLoop', value:playhead_id }); },\n                                                    \n                                                                                        debug_: function(id, ...args){ console.log(id+':', args.join(' ')); },\n                                                                                    } },\n                                                                                ).then(result => {\n                                                                                    //save wasm processor to instance\n                                                                                        self.wasm = result;\n                                                    \n                                                                                    //attach buffers\n                                                                                        self.attachBuffers();\n                                                    \n                                                                                    //assemble additional wasm buffers\n                                                                                        self.audioBufferShovelFrame = { pointer: self.wasm.exports.get_audio_buffer_shovel_pointer() };\n                                                    \n                                                                                    //load data if necessary\n                                                                                        if(self._state.temporaryAudioData != undefined){\n                                                                                            self.transferAudioBufferDataIn(\n                                                                                                self._state.temporaryAudioData\n                                                                                            );\n                                                                                            self._state.temporaryAudioData = undefined;\n                                                                                        }\n                                                                                });\n                                                                            });\n                                                                        break;\n                                                                        case 'loadWasm':\n                                                                            WebAssembly.instantiate(\n                                                                                event.data.value,\n                                                                                { env: {\n                                                                                    _onEnd: function(playhead_id){ self.port.postMessage({ command:'onEnd', value:playhead_id }); },\n                                                                                    _onLoop: function(playhead_id){ self.port.postMessage({ command:'onLoop', value:playhead_id }); },\n                                                \n                                                                                    debug_: function(id, ...args){ console.log(id+':', args.join(' ')); },\n                                                                                } },\n                                                                            ).then(result => {\n                                                                                //save wasm processor to instance\n                                                                                    self.wasm = result;\n                                                \n                                                                                //attach buffers\n                                                                                    self.attachBuffers();\n                                                \n                                                                                //assemble additional wasm buffers\n                                                                                    self.audioBufferShovelFrame = { pointer: self.wasm.exports.get_audio_buffer_shovel_pointer() };\n                                                \n                                                                                //load data if necessary\n                                                                                    if(self._state.temporaryAudioData != undefined){\n                                                                                        self.transferAudioBufferDataIn(\n                                                                                            self._state.temporaryAudioData\n                                                                                        );\n                                                                                        self._state.temporaryAudioData = undefined;\n                                                                                    }\n                                                                            });\n                                                                        break;\n                                                                    \n                                                                    //load data\n                                                                        case \"loadAudioData\":\n                                                                            if(self.wasm == undefined){\n                                                                                self._state.temporaryAudioData = event.data.value;\n                                                                            } else {\n                                                                                self.transferAudioBufferDataIn(event.data.value);\n                                                                            }\n                                                \n                                                                            self.port.postMessage({\n                                                                                command: 'loadAudioData_loadComplete', \n                                                                                value: undefined,\n                                                                            });\n                                                                        break;\n                                                \n                                                                    //performance control\n                                                                        case 'play':\n                                                                            self.wasm.exports.play(event.data.value.playhead_id!=undefined, event.data.value.playhead_id);\n                                                                        break;\n                                                                        case 'stop':\n                                                                            self.wasm.exports.stop(event.data.value.playhead_id!=undefined, event.data.value.playhead_id);\n                                                                        break;\n                                                \n                                                                        case 'set_loop_active':\n                                                                            self.wasm.exports.set_loop_active(event.data.value.playhead_id!=undefined, event.data.value.playhead_id, event.data.value.loop_active);\n                                                                        break;\n                                                \n                                                                        case 'set_playhead_position':\n                                                                            self.wasm.exports.set_playhead_position(event.data.value.playhead_id!=undefined, event.data.value.playhead_id, event.data.value.position);\n                                                                        break;\n                                                                        case 'got_to_start':\n                                                                            self.wasm.exports.got_to_start(event.data.value.playhead_id!=undefined, event.data.value.playhead_id);\n                                                                        break;\n                                                                        case 'got_to_end':\n                                                                            self.wasm.exports.got_to_end(event.data.value.playhead_id!=undefined, event.data.value.playhead_id);\n                                                                        break;\n                                                \n                                                                        case 'section_start':\n                                                                            self.wasm.exports.section_start(event.data.value.playhead_id!=undefined, event.data.value.playhead_id, event.data.value.position);\n                                                                        break;\n                                                                        case 'section_end':\n                                                                            self.wasm.exports.section_end(event.data.value.playhead_id!=undefined, event.data.value.playhead_id, event.data.value.position);\n                                                                        break;\n                                                                        case 'maximize_section':\n                                                                            self.wasm.exports.maximize_section(event.data.value.playhead_id!=undefined, event.data.value.playhead_id);\n                                                                        break;\n                                                                        case 'invert_section':\n                                                                            self.wasm.exports.invert_section(event.data.value.playhead_id!=undefined, event.data.value.playhead_id);\n                                                                        break;\n                                                \n                                                                    //status\n                                                                        case 'getPlayheadPosition':\n                                                                            if(event.data.value.calculateDelay){\n                                                                                const calculatedPresentTime = globalThis.currentTime*1000 + self._state.nodeConstructorTime;\n                                                                                const sendingDelay = calculatedPresentTime - event.data.sendTime;\n                                                    \n                                                                                self.port.postMessage({\n                                                                                    command:'getPlayheadPosition_return', \n                                                                                    value: {\n                                                                                        playhead_id: event.data.value.playhead_id,\n                                                                                        playheadPosition: self.playheadPositionReadout.buffer[event.data.value.playhead_id],\n                                                                                        sendingDelay: sendingDelay,\n                                                                                    },\n                                                                                    sendTime: globalThis.currentTime*1000,\n                                                                                });\n                                                                            } else {\n                                                                                self.port.postMessage({\n                                                                                    command:'getPlayheadPosition_return', \n                                                                                    value: {\n                                                                                        playhead_id: event.data.value.playhead_id,\n                                                                                        playheadPosition: self.playheadPositionReadout.buffer[event.data.value.playhead_id],\n                                                                                    },\n                                                                                });\n                                                                            }\n                                                                        break;\n                                                \n                                                                    //use control\n                                                                        case 'rate_useControl': \n                                                                            self._state.rate_useControl = event.data.value;\n                                                                        break;\n                                                \n                                                                    //shutdown\n                                                                        case 'shutdown':\n                                                                            self.shutdown = true;\n                                                                        break;\n                                                                }\n                                                            };\n                                                    }\n                                                \n                                                    transferAudioBufferDataIn(audio_data){\n                                                        this.wasm.exports.clear_audio_buffer();\n                                                \n                                                        const shovelSize = this.wasm.exports.get_shovel_size();\n                                                        const block_count = (Math.floor(audio_data.length / shovelSize) + 1);\n                                                        for(let block = 0; block < block_count; block++) {\n                                                            //reattach shovel buffer \n                                                                this.audioBufferShovelFrame.buffer = new Float32Array(\n                                                                    this.wasm.exports.memory.buffer, \n                                                                    this.wasm.exports.get_audio_buffer_shovel_pointer(), \n                                                                    shovelSize\n                                                                );\n                                                \n                                                            //shovel block in\n                                                                const data_to_send = audio_data.slice( block*shovelSize, (block+1)*shovelSize );\n                                                                this.audioBufferShovelFrame.buffer.set(data_to_send);\n                                                                this.wasm.exports.shovel_audio_data_in(data_to_send.length);\n                                                        }\n                                                \n                                                        this.attachBuffers();\n                                                    }\n                                                \n                                                    process(inputs, outputs, parameters){\n                                                        // console.log('>>',this.wasm);\n                                                        if(this.shutdown){ return false; }\n                                                        if(this.wasm == undefined || this.rateFrame == undefined){ return true; }\n                                                        // console.log('>>',this.rateFrame);\n                                                \n                                                        //collect inputs/outputs\n                                                            const output = outputs[0];\n                                                            const rateControl = inputs[0];\n                                                \n                                                        //populate input buffers\n                                                            const rate_useFirstOnly = this._state.rate_useControl ? false : parameters.rate.length == 1;\n                                                            this.rateFrame.buffer.set( this._state.rate_useControl && rateControl[0] != undefined ? rateControl[0] : parameters.rate );\n                                                \n                                                        //have wasm process data, and copy results to channels\n                                                            this.wasm.exports.process(\n                                                                rate_useFirstOnly,\n                                                            );\n                                                            for(let channel = 0; channel < output.length; channel++){\n                                                                output[channel].set(this.outputFrame.buffer);\n                                                            }\n                                                \n                                                        return true;\n                                                    }\n                                                }\n                                                registerProcessor('audio_buffer_type_2', audio_buffer_type_2);\n                                            "],{type:"text/javascript"}),class:class e extends AudioWorkletNode{static wasm_url="wasm/audio_processing/audio_buffer_type_2.development.wasm";static fetch_promise;static compiled_wasm;constructor(n,o={}){const r=performance.now();let a;o.numberOfInputs=1,o.numberOfOutputs=1,o.channelCount=1,super(n,"audio_buffer_type_2",o),this.nodeConstructorTime=r,this.port.postMessage({command:"log_nodeConstructorTime",value:this.nodeConstructorTime}),t.audioWorklet.requestWasm(e,this),this._state={audioFileLength:void 0,loop:[],section:[]},this.loadAudioData=function(e){let t=0==this._state.section.start&&this._state.section.end==this._state.audioFileLength;return this._state.audioFileLength=e.length,(t||this._state.audioFileLength<this._state.section.start&&this._state.audioFileLength<this._state.section.end)&&(this._state.section.start=0,this._state.section.end=this._state.audioFileLength),this._state.audioFileLength<this._state.section.start&&(this._state.section.start=this._state.audioFileLength),this._state.audioFileLength<this._state.section.end&&(this._state.section.end=this._state.audioFileLength),this.port.postMessage({command:"loadAudioData",value:e}),new Promise((e,t)=>{a=e})},this.play=function(e){this.port.postMessage({command:"play",value:{playhead_id:e}})},this.stop=function(e){this.port.postMessage({command:"stop",value:{playhead_id:e}})},this.loop=function(e,t){return null==e&&null==t?this._state.loop:null==t?this._state.loop[e]:(null==e?this._state.loop=this._state.loop.map(()=>t):this._state.loop[e]=t,void this.port.postMessage({command:"set_loop_active",value:{playhead_id:e,loop_active:t}}))},this.setPlayheadPosition=function(e,t){null!=t?this.port.postMessage({command:"set_playhead_position",value:{playhead_id:e,position:t}}):console.error("audio_buffer_type_2.set_playhead_position - position undefined")},this.gotoStart=function(e){this.port.postMessage({command:"go_to_start",value:{playhead_id:e}})},this.gotoEnd=function(e){this.port.postMessage({command:"go_to_end",value:{playhead_id:e}})},this.sectionStart=function(e,t){if(t>this._state.audioFileLength-1&&(console.warn('audio_buffer_type_2.section_start - attempting to select a section start position "'+t+'" which exceeds the audio data length "'+(this._state.audioFileLength-1)+'". Position will be corrected'),t=this._state.audioFileLength-1),t<0&&(console.warn("audio_buffer_type_2.section_start - attempting to select a section start position below zero. Position will be corrected"),t=0),null==e)for(let e=0;e<this._state.section.length;e++)this._state.section[e].start=t;else null==this._state.section[e]&&(this._state.section[e]={start:t,end:this._state.audioFileLength-1}),this._state.section[e].start=t;this.port.postMessage({command:"section_start",value:{playhead_id:e,position:t}})},this.sectionEnd=function(e,t){if(t>this._state.audioFileLength-1&&(console.warn('audio_buffer_type_2.section_end - attempting to select a section end position "'+t+'" which exceeds the audio data length "'+(this._state.audioFileLength-1)+'". Position will be corrected'),t=this._state.audioFileLength-1),t<0&&(console.warn("audio_buffer_type_2.section_end - attempting to select a section end position below zero. Position will be corrected"),t=0),null==e)for(let e=0;e<this._state.section.length;e++)this._state.section[e].end=t;else null==this._state.section[e]&&(this._state.section[e]={start:0,end:t}),this._state.section[e].end=t;this.port.postMessage({command:"section_end",value:{playhead_id:e,position:t}})},this.maximizeSection=function(e){if(null==e)for(let e=0;e<this._state.section.length;e++)this._state.section[e].start=0,this._state.section[e].end=this._state.audioFileLength;else this._state.section[e].start=0,this._state.section[e].end=this._state.audioFileLength;this.port.postMessage({command:"maximize_section",value:{playhead_id:e}})},this.invertSection=function(e){if(null==e)for(let e=0;e<this._state.section.length;e++){const t=this._state.section[e].start;this._state.section[e].start=this._state.section[e].end,this._state.section[e].end=t}else{const t=this._state.section[e].start;this._state.section[e].start=this._state.section[e].end,this._state.section[e].end=t}this.port.postMessage({command:"invert_section",value:{playhead_id:e}})};let i=[];this.getPlayheadPosition=function(e,t=!1){if("number"==typeof e)return this.port.postMessage({command:"getPlayheadPosition",value:{playhead_id:e,calculateDelay:t},sendTime:performance.now()}),new Promise((t,n)=>{i[e]=t});console.error("audio_buffer_type_2.getPlayheadPosition - playheadId not a number")},this.shutdown=function(){this.port.postMessage({command:"shutdown",value:void 0}),this.port.close()},this.onEnd=function(){},this.onLoop=function(){};const s=this;this.port.onmessage=function(e){switch(e.data.command){case"onEnd":s.onEnd(e.data.value);break;case"onLoop":s.onLoop(e.data.value);break;case"getPlayheadPosition_return":if(null!=i[e.data.value.playhead_id]){if(null==e.data.value.sendingDelay)i[e.data.value.playhead_id](e.data.value.playheadPosition);else{const t=e.data.sendTime+r-performance.now(),n=e.data.value.sendingDelay+t;i[e.data.value.playhead_id]({playheadPosition:e.data.value,resultDelay:n})}i[e.data.value.playhead_id]=void 0}break;case"loadAudioData_loadComplete":a(),a=void 0}}}get length(){return this._state.audioFileLength}get rate(){return this.parameters.get("rate")}get rate_useControl(){return this._state.rate_useControl}set rate_useControl(e){this._state.rate_useControl=e,this.port.postMessage({command:"rate_useControl",value:e})}}}],readyCount:0}}};function n(){return Object.keys(e).forEach(t=>{Object.keys(e[t]).forEach(n=>{for(workletListingIndex in e[t][n].readyCount=0,e[t][n].list){if(e[t][n].readyCount==e[t][n].list.length)break;null!=e[t][n].list[workletListingIndex].loaded&&e[t][n].list[workletListingIndex].loaded&&e[t][n].readyCount++}})}),e.production.only_js.readyCount==e.production.only_js.list.length&&e.production.wasm.readyCount==e.production.wasm.list.length&&e.workshop.only_js.readyCount==e.workshop.only_js.list.length&&e.workshop.wasm.readyCount==e.workshop.wasm.list.length}this.production={only_js:{},wasm:{}},this.workshop={only_js:{},wasm:{}},this._getWorklets=function(){return e},this.checkIfReady=function(){return n()},this.nowReady=function(){},this.requestWasm=function(e,t){null!=e.compiled_wasm?t.port.postMessage({command:"loadUncompiledWasm",value:e.compiled_wasm}):null==e.fetch_promise?e.fetch_promise=fetch(e.wasm_url).then(e=>e.arrayBuffer()).then(n=>{e.compiled_wasm=n,t.port.postMessage({command:"loadUncompiledWasm",value:n})}):t.attemptSecondaryWasmLoadIntervalId=setInterval(()=>{null!=e.compiled_wasm&&(clearInterval(t.attemptSecondaryWasmLoadIntervalId),t.port.postMessage({command:"loadUncompiledWasm",value:e.compiled_wasm}))},100)},Object.keys(e).forEach(o=>{Object.keys(e[o]).forEach(r=>{e[o][r].list.forEach(e=>{e.loaded=!1,t.context.audioWorklet.addModule(window.URL.createObjectURL(e.worklet)).then(()=>{e.loaded=!0,t.audioWorklet[o][r][e.name]=e.class,n()&&null!=this.nowReady&&this.nowReady()})})})})};const o={audioWorklet:!1};t.nowReady=function(){},Object.keys(o).forEach(e=>{t[e].nowReady=function(){o[e]=!0,Object.values(o).reduce((e,t)=>e&&t)&&t.nowReady()},t[e].checkIfReady()&&t[e].nowReady()})};const n=new function(){const e=this;var t,n,o,r;this.lzString=(t=String.fromCharCode,n="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+-$",o={},r={compress:function(e){return null==e?"":r._compress(e,6,(function(e){return n.charAt(e)}))},decompress:function(e){return null==e?"":""==e?null:(e=e.replace(/ /g,"+"),r._decompress(e.length,32,(function(t){return function(e,t){if(!o[e]){o[e]={};for(var n=0;n<e.length;n++)o[e][e.charAt(n)]=n}return o[e][t]}(n,e.charAt(t))})))},_compress:function(e,t,n){if(null==e)return"";var o,r,a,i={},s={},l="",c="",u="",p=2,d=3,h=2,_=[],g=0,f=0;for(a=0;a<e.length;a+=1)if(l=e.charAt(a),Object.prototype.hasOwnProperty.call(i,l)||(i[l]=d++,s[l]=!0),c=u+l,Object.prototype.hasOwnProperty.call(i,c))u=c;else{if(Object.prototype.hasOwnProperty.call(s,u)){if(u.charCodeAt(0)<256){for(o=0;o<h;o++)g<<=1,f==t-1?(f=0,_.push(n(g)),g=0):f++;for(r=u.charCodeAt(0),o=0;o<8;o++)g=g<<1|1&r,f==t-1?(f=0,_.push(n(g)),g=0):f++,r>>=1}else{for(r=1,o=0;o<h;o++)g=g<<1|r,f==t-1?(f=0,_.push(n(g)),g=0):f++,r=0;for(r=u.charCodeAt(0),o=0;o<16;o++)g=g<<1|1&r,f==t-1?(f=0,_.push(n(g)),g=0):f++,r>>=1}0==--p&&(p=Math.pow(2,h),h++),delete s[u]}else for(r=i[u],o=0;o<h;o++)g=g<<1|1&r,f==t-1?(f=0,_.push(n(g)),g=0):f++,r>>=1;0==--p&&(p=Math.pow(2,h),h++),i[c]=d++,u=String(l)}if(""!==u){if(Object.prototype.hasOwnProperty.call(s,u)){if(u.charCodeAt(0)<256){for(o=0;o<h;o++)g<<=1,f==t-1?(f=0,_.push(n(g)),g=0):f++;for(r=u.charCodeAt(0),o=0;o<8;o++)g=g<<1|1&r,f==t-1?(f=0,_.push(n(g)),g=0):f++,r>>=1}else{for(r=1,o=0;o<h;o++)g=g<<1|r,f==t-1?(f=0,_.push(n(g)),g=0):f++,r=0;for(r=u.charCodeAt(0),o=0;o<16;o++)g=g<<1|1&r,f==t-1?(f=0,_.push(n(g)),g=0):f++,r>>=1}0==--p&&(p=Math.pow(2,h),h++),delete s[u]}else for(r=i[u],o=0;o<h;o++)g=g<<1|1&r,f==t-1?(f=0,_.push(n(g)),g=0):f++,r>>=1;0==--p&&(p=Math.pow(2,h),h++)}for(r=2,o=0;o<h;o++)g=g<<1|1&r,f==t-1?(f=0,_.push(n(g)),g=0):f++,r>>=1;for(;;){if(g<<=1,f==t-1){_.push(n(g));break}f++}return _.join("")},_decompress:function(e,n,o){var r,a,i,s,l,c,u,p=[],d=4,h=4,_=3,g="",f=[],m={val:o(0),position:n,index:1};for(r=0;r<3;r+=1)p[r]=r;for(i=0,l=Math.pow(2,2),c=1;c!=l;)s=m.val&m.position,m.position>>=1,0==m.position&&(m.position=n,m.val=o(m.index++)),i|=(s>0?1:0)*c,c<<=1;switch(i){case 0:for(i=0,l=Math.pow(2,8),c=1;c!=l;)s=m.val&m.position,m.position>>=1,0==m.position&&(m.position=n,m.val=o(m.index++)),i|=(s>0?1:0)*c,c<<=1;u=t(i);break;case 1:for(i=0,l=Math.pow(2,16),c=1;c!=l;)s=m.val&m.position,m.position>>=1,0==m.position&&(m.position=n,m.val=o(m.index++)),i|=(s>0?1:0)*c,c<<=1;u=t(i);break;case 2:return""}for(p[3]=u,a=u,f.push(u);;){if(m.index>e)return"";for(i=0,l=Math.pow(2,_),c=1;c!=l;)s=m.val&m.position,m.position>>=1,0==m.position&&(m.position=n,m.val=o(m.index++)),i|=(s>0?1:0)*c,c<<=1;switch(u=i){case 0:for(i=0,l=Math.pow(2,8),c=1;c!=l;)s=m.val&m.position,m.position>>=1,0==m.position&&(m.position=n,m.val=o(m.index++)),i|=(s>0?1:0)*c,c<<=1;p[h++]=t(i),u=h-1,d--;break;case 1:for(i=0,l=Math.pow(2,16),c=1;c!=l;)s=m.val&m.position,m.position>>=1,0==m.position&&(m.position=n,m.val=o(m.index++)),i|=(s>0?1:0)*c,c<<=1;p[h++]=t(i),u=h-1,d--;break;case 2:return f.join("")}if(0==d&&(d=Math.pow(2,_),_++),p[u])g=p[u];else{if(u!==h)return null;g=a+a.charAt(0)}f.push(g),p[h++]=a+g.charAt(0),a=g,0==--d&&(d=Math.pow(2,_),_++)}}}),function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports):"function"==typeof define&&define.amd?define(["exports"],t):t(e.opentype2={})}(this,(function(e){"use strict";var t,n;String.prototype.codePointAt||(t=function(){try{var e={},t=Object.defineProperty,n=t(e,e,e)&&t}catch(e){}return n}(),n=function(e){if(null==this)throw TypeError();var t=String(this),n=t.length,o=e?Number(e):0;if(o!=o&&(o=0),!(o<0||o>=n)){var r,a=t.charCodeAt(o);return a>=55296&&a<=56319&&n>o+1&&(r=t.charCodeAt(o+1))>=56320&&r<=57343?1024*(a-55296)+r-56320+65536:a}},t?t(String.prototype,"codePointAt",{value:n,configurable:!0,writable:!0}):String.prototype.codePointAt=n);function o(){this.table=new Uint16Array(16),this.trans=new Uint16Array(288)}function r(e,t){this.source=e,this.sourceIndex=0,this.tag=0,this.bitcount=0,this.dest=t,this.destLen=0,this.ltree=new o,this.dtree=new o}var a=new o,i=new o,s=new Uint8Array(30),l=new Uint16Array(30),c=new Uint8Array(30),u=new Uint16Array(30),p=new Uint8Array([16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15]),d=new o,h=new Uint8Array(320);function _(e,t,n,o){var r,a;for(r=0;r<n;++r)e[r]=0;for(r=0;r<30-n;++r)e[r+n]=r/n|0;for(a=o,r=0;r<30;++r)t[r]=a,a+=1<<e[r]}var g=new Uint16Array(16);function f(e,t,n,o){var r,a;for(r=0;r<16;++r)e.table[r]=0;for(r=0;r<o;++r)e.table[t[n+r]]++;for(e.table[0]=0,a=0,r=0;r<16;++r)g[r]=a,a+=e.table[r];for(r=0;r<o;++r)t[n+r]&&(e.trans[g[t[n+r]]++]=r)}function m(e){e.bitcount--||(e.tag=e.source[e.sourceIndex++],e.bitcount=7);var t=1&e.tag;return e.tag>>>=1,t}function y(e,t,n){if(!t)return n;for(;e.bitcount<24;)e.tag|=e.source[e.sourceIndex++]<<e.bitcount,e.bitcount+=8;var o=e.tag&65535>>>16-t;return e.tag>>>=t,e.bitcount-=t,o+n}function v(e,t){for(;e.bitcount<24;)e.tag|=e.source[e.sourceIndex++]<<e.bitcount,e.bitcount+=8;var n=0,o=0,r=0,a=e.tag;do{o=2*o+(1&a),a>>>=1,++r,n+=t.table[r],o-=t.table[r]}while(o>=0);return e.tag=a,e.bitcount-=r,t.trans[n+o]}function b(e,t,n){var o,r,a,i,s,l;for(o=y(e,5,257),r=y(e,5,1),a=y(e,4,4),i=0;i<19;++i)h[i]=0;for(i=0;i<a;++i){var c=y(e,3,0);h[p[i]]=c}for(f(d,h,0,19),s=0;s<o+r;){var u=v(e,d);switch(u){case 16:var _=h[s-1];for(l=y(e,2,3);l;--l)h[s++]=_;break;case 17:for(l=y(e,3,3);l;--l)h[s++]=0;break;case 18:for(l=y(e,7,11);l;--l)h[s++]=0;break;default:h[s++]=u}}f(t,h,0,o),f(n,h,o,r)}function x(e,t,n){for(;;){var o,r,a,i,p=v(e,t);if(256===p)return 0;if(p<256)e.dest[e.destLen++]=p;else for(o=y(e,s[p-=257],l[p]),r=v(e,n),i=a=e.destLen-y(e,c[r],u[r]);i<a+o;++i)e.dest[e.destLen++]=e.dest[i]}}function w(e){for(var t,n;e.bitcount>8;)e.sourceIndex--,e.bitcount-=8;if((t=256*(t=e.source[e.sourceIndex+1])+e.source[e.sourceIndex])!==(65535&~(256*e.source[e.sourceIndex+3]+e.source[e.sourceIndex+2])))return-3;for(e.sourceIndex+=4,n=t;n;--n)e.dest[e.destLen++]=e.source[e.sourceIndex++];return e.bitcount=0,0}!function(e,t){var n;for(n=0;n<7;++n)e.table[n]=0;for(e.table[7]=24,e.table[8]=152,e.table[9]=112,n=0;n<24;++n)e.trans[n]=256+n;for(n=0;n<144;++n)e.trans[24+n]=n;for(n=0;n<8;++n)e.trans[168+n]=280+n;for(n=0;n<112;++n)e.trans[176+n]=144+n;for(n=0;n<5;++n)t.table[n]=0;for(t.table[5]=32,n=0;n<32;++n)t.trans[n]=n}(a,i),_(s,l,4,3),_(c,u,2,1),s[28]=0,l[28]=258;var k=function(e,t){var n,o,s=new r(e,t);do{switch(n=m(s),y(s,2,0)){case 0:o=w(s);break;case 1:o=x(s,a,i);break;case 2:b(s,s.ltree,s.dtree),o=x(s,s.ltree,s.dtree);break;default:o=-3}if(0!==o)throw new Error("Data error")}while(!n);return s.destLen<s.dest.length?"function"==typeof s.dest.slice?s.dest.slice(0,s.destLen):s.dest.subarray(0,s.destLen):s.dest};function C(e,t,n,o,r){return Math.pow(1-r,3)*e+3*Math.pow(1-r,2)*r*t+3*(1-r)*Math.pow(r,2)*n+Math.pow(r,3)*o}function S(){this.x1=Number.NaN,this.y1=Number.NaN,this.x2=Number.NaN,this.y2=Number.NaN}function T(){this.commands=[],this.fill="black",this.stroke=null,this.strokeWidth=1}function A(e){throw new Error(e)}function M(e,t){e||A(t)}S.prototype.isEmpty=function(){return isNaN(this.x1)||isNaN(this.y1)||isNaN(this.x2)||isNaN(this.y2)},S.prototype.addPoint=function(e,t){"number"==typeof e&&((isNaN(this.x1)||isNaN(this.x2))&&(this.x1=e,this.x2=e),e<this.x1&&(this.x1=e),e>this.x2&&(this.x2=e)),"number"==typeof t&&((isNaN(this.y1)||isNaN(this.y2))&&(this.y1=t,this.y2=t),t<this.y1&&(this.y1=t),t>this.y2&&(this.y2=t))},S.prototype.addX=function(e){this.addPoint(e,null)},S.prototype.addY=function(e){this.addPoint(null,e)},S.prototype.addBezier=function(e,t,n,o,r,a,i,s){var l=[e,t],c=[n,o],u=[r,a],p=[i,s];this.addPoint(e,t),this.addPoint(i,s);for(var d=0;d<=1;d++){var h=6*l[d]-12*c[d]+6*u[d],_=-3*l[d]+9*c[d]-9*u[d]+3*p[d],g=3*c[d]-3*l[d];if(0!==_){var f=Math.pow(h,2)-4*g*_;if(!(f<0)){var m=(-h+Math.sqrt(f))/(2*_);0<m&&m<1&&(0===d&&this.addX(C(l[d],c[d],u[d],p[d],m)),1===d&&this.addY(C(l[d],c[d],u[d],p[d],m)));var y=(-h-Math.sqrt(f))/(2*_);0<y&&y<1&&(0===d&&this.addX(C(l[d],c[d],u[d],p[d],y)),1===d&&this.addY(C(l[d],c[d],u[d],p[d],y)))}}else{if(0===h)continue;var v=-g/h;0<v&&v<1&&(0===d&&this.addX(C(l[d],c[d],u[d],p[d],v)),1===d&&this.addY(C(l[d],c[d],u[d],p[d],v)))}}},S.prototype.addQuad=function(e,t,n,o,r,a){var i=e+2/3*(n-e),s=t+2/3*(o-t),l=i+1/3*(r-e),c=s+1/3*(a-t);this.addBezier(e,t,i,s,l,c,r,a)},T.prototype.moveTo=function(e,t){this.commands.push({type:"M",x:e,y:t})},T.prototype.lineTo=function(e,t){this.commands.push({type:"L",x:e,y:t})},T.prototype.curveTo=T.prototype.bezierCurveTo=function(e,t,n,o,r,a){this.commands.push({type:"C",x1:e,y1:t,x2:n,y2:o,x:r,y:a})},T.prototype.quadTo=T.prototype.quadraticCurveTo=function(e,t,n,o){this.commands.push({type:"Q",x1:e,y1:t,x:n,y:o})},T.prototype.close=T.prototype.closePath=function(){this.commands.push({type:"Z"})},T.prototype.extend=function(e){if(e.commands)e=e.commands;else if(e instanceof S){var t=e;return this.moveTo(t.x1,t.y1),this.lineTo(t.x2,t.y1),this.lineTo(t.x2,t.y2),this.lineTo(t.x1,t.y2),void this.close()}Array.prototype.push.apply(this.commands,e)},T.prototype.getBoundingBox=function(){for(var e=new S,t=0,n=0,o=0,r=0,a=0;a<this.commands.length;a++){var i=this.commands[a];switch(i.type){case"M":e.addPoint(i.x,i.y),t=o=i.x,n=r=i.y;break;case"L":e.addPoint(i.x,i.y),o=i.x,r=i.y;break;case"Q":e.addQuad(o,r,i.x1,i.y1,i.x,i.y),o=i.x,r=i.y;break;case"C":e.addBezier(o,r,i.x1,i.y1,i.x2,i.y2,i.x,i.y),o=i.x,r=i.y;break;case"Z":o=t,r=n;break;default:throw new Error("Unexpected path command "+i.type)}}return e.isEmpty()&&e.addPoint(0,0),e},T.prototype.draw=function(e){e.beginPath();for(var t=0;t<this.commands.length;t+=1){var n=this.commands[t];"M"===n.type?e.moveTo(n.x,n.y):"L"===n.type?e.lineTo(n.x,n.y):"C"===n.type?e.bezierCurveTo(n.x1,n.y1,n.x2,n.y2,n.x,n.y):"Q"===n.type?e.quadraticCurveTo(n.x1,n.y1,n.x,n.y):"Z"===n.type&&e.closePath()}this.fill&&(e.fillStyle=this.fill,e.fill()),this.stroke&&(e.strokeStyle=this.stroke,e.lineWidth=this.strokeWidth,e.stroke())},T.prototype.toPathData=function(e){function t(t){return Math.round(t)===t?""+Math.round(t):t.toFixed(e)}function n(){for(var e=arguments,n="",o=0;o<arguments.length;o+=1){var r=e[o];r>=0&&o>0&&(n+=" "),n+=t(r)}return n}e=void 0!==e?e:2;for(var o="",r=0;r<this.commands.length;r+=1){var a=this.commands[r];"M"===a.type?o+="M"+n(a.x,a.y):"L"===a.type?o+="L"+n(a.x,a.y):"C"===a.type?o+="C"+n(a.x1,a.y1,a.x2,a.y2,a.x,a.y):"Q"===a.type?o+="Q"+n(a.x1,a.y1,a.x,a.y):"Z"===a.type&&(o+="Z")}return o},T.prototype.toSVG=function(e){var t='<path d="';return t+=this.toPathData(e),t+='"',this.fill&&"black"!==this.fill&&(null===this.fill?t+=' fill="none"':t+=' fill="'+this.fill+'"'),this.stroke&&(t+=' stroke="'+this.stroke+'" stroke-width="'+this.strokeWidth+'"'),t+="/>"},T.prototype.toDOMElement=function(e){var t=this.toPathData(e),n=document.createElementNS("http://www.w3.org/2000/svg","path");return n.setAttribute("d",t),n};var F={fail:A,argument:M,assert:M},O={},P={},R={};function L(e){return function(){return e}}P.BYTE=function(e){return F.argument(e>=0&&e<=255,"Byte value should be between 0 and 255."),[e]},R.BYTE=L(1),P.CHAR=function(e){return[e.charCodeAt(0)]},R.CHAR=L(1),P.CHARARRAY=function(e){for(var t=[],n=0;n<e.length;n+=1)t[n]=e.charCodeAt(n);return t},R.CHARARRAY=function(e){return e.length},P.USHORT=function(e){return[e>>8&255,255&e]},R.USHORT=L(2),P.SHORT=function(e){return e>=32768&&(e=-(65536-e)),[e>>8&255,255&e]},R.SHORT=L(2),P.UINT24=function(e){return[e>>16&255,e>>8&255,255&e]},R.UINT24=L(3),P.ULONG=function(e){return[e>>24&255,e>>16&255,e>>8&255,255&e]},R.ULONG=L(4),P.LONG=function(e){return e>=2147483648&&(e=-(4294967296-e)),[e>>24&255,e>>16&255,e>>8&255,255&e]},R.LONG=L(4),P.FIXED=P.ULONG,R.FIXED=R.ULONG,P.FWORD=P.SHORT,R.FWORD=R.SHORT,P.UFWORD=P.USHORT,R.UFWORD=R.USHORT,P.LONGDATETIME=function(e){return[0,0,0,0,e>>24&255,e>>16&255,e>>8&255,255&e]},R.LONGDATETIME=L(8),P.TAG=function(e){return F.argument(4===e.length,"Tag should be exactly 4 ASCII characters."),[e.charCodeAt(0),e.charCodeAt(1),e.charCodeAt(2),e.charCodeAt(3)]},R.TAG=L(4),P.Card8=P.BYTE,R.Card8=R.BYTE,P.Card16=P.USHORT,R.Card16=R.USHORT,P.OffSize=P.BYTE,R.OffSize=R.BYTE,P.SID=P.USHORT,R.SID=R.USHORT,P.NUMBER=function(e){return e>=-107&&e<=107?[e+139]:e>=108&&e<=1131?[247+((e-=108)>>8),255&e]:e>=-1131&&e<=-108?[251+((e=-e-108)>>8),255&e]:e>=-32768&&e<=32767?P.NUMBER16(e):P.NUMBER32(e)},R.NUMBER=function(e){return P.NUMBER(e).length},P.NUMBER16=function(e){return[28,e>>8&255,255&e]},R.NUMBER16=L(3),P.NUMBER32=function(e){return[29,e>>24&255,e>>16&255,e>>8&255,255&e]},R.NUMBER32=L(5),P.REAL=function(e){var t=e.toString(),n=/\.(\d*?)(?:9{5,20}|0{5,20})\d{0,2}(?:e(.+)|$)/.exec(t);if(n){var o=parseFloat("1e"+((n[2]?+n[2]:0)+n[1].length));t=(Math.round(e*o)/o).toString()}for(var r="",a=0,i=t.length;a<i;a+=1){var s=t[a];r+="e"===s?"-"===t[++a]?"c":"b":"."===s?"a":"-"===s?"e":s}for(var l=[30],c=0,u=(r+=1&r.length?"f":"ff").length;c<u;c+=2)l.push(parseInt(r.substr(c,2),16));return l},R.REAL=function(e){return P.REAL(e).length},P.NAME=P.CHARARRAY,R.NAME=R.CHARARRAY,P.STRING=P.CHARARRAY,R.STRING=R.CHARARRAY,O.UTF8=function(e,t,n){for(var o=[],r=n,a=0;a<r;a++,t+=1)o[a]=e.getUint8(t);return String.fromCharCode.apply(null,o)},O.UTF16=function(e,t,n){for(var o=[],r=n/2,a=0;a<r;a++,t+=2)o[a]=e.getUint16(t);return String.fromCharCode.apply(null,o)},P.UTF16=function(e){for(var t=[],n=0;n<e.length;n+=1){var o=e.charCodeAt(n);t[t.length]=o>>8&255,t[t.length]=255&o}return t},R.UTF16=function(e){return 2*e.length};var I={"x-mac-croatian":"ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûü†°¢£§•¶ß®Š™´¨≠ŽØ∞±≤≥∆µ∂∑∏š∫ªºΩžø¿¡¬√ƒ≈Ć«Č… ÀÃÕŒœĐ—“”‘’÷◊©⁄€‹›Æ»–·‚„‰ÂćÁčÈÍÎÏÌÓÔđÒÚÛÙıˆ˜¯πË˚¸Êæˇ","x-mac-cyrillic":"АБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯ†°Ґ£§•¶І®©™Ђђ≠Ѓѓ∞±≤≥іµґЈЄєЇїЉљЊњјЅ¬√ƒ≈∆«»… ЋћЌќѕ–—“”‘’÷„ЎўЏџ№Ёёяабвгдежзийклмнопрстуфхцчшщъыьэю","x-mac-gaelic":"ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûü†°¢£§•¶ß®©™´¨≠ÆØḂ±≤≥ḃĊċḊḋḞḟĠġṀæøṁṖṗɼƒſṠ«»… ÀÃÕŒœ–—“”‘’ṡẛÿŸṪ€‹›Ŷŷṫ·Ỳỳ⁊ÂÊÁËÈÍÎÏÌÓÔ♣ÒÚÛÙıÝýŴŵẄẅẀẁẂẃ","x-mac-greek":"Ä¹²É³ÖÜ΅àâä΄¨çéèêë£™îï•½‰ôö¦€ùûü†ΓΔΘΛΞΠß®©ΣΪ§≠°·Α±≤≥¥ΒΕΖΗΙΚΜΦΫΨΩάΝ¬ΟΡ≈Τ«»… ΥΧΆΈœ–―“”‘’÷ΉΊΌΎέήίόΏύαβψδεφγηιξκλμνοπώρστθωςχυζϊϋΐΰ­","x-mac-icelandic":"ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûüÝ°¢£§•¶ß®©™´¨≠ÆØ∞±≤≥¥µ∂∑∏π∫ªºΩæø¿¡¬√ƒ≈∆«»… ÀÃÕŒœ–—“”‘’÷◊ÿŸ⁄€ÐðÞþý·‚„‰ÂÊÁËÈÍÎÏÌÓÔÒÚÛÙıˆ˜¯˘˙˚¸˝˛ˇ","x-mac-inuit":"ᐃᐄᐅᐆᐊᐋᐱᐲᐳᐴᐸᐹᑉᑎᑏᑐᑑᑕᑖᑦᑭᑮᑯᑰᑲᑳᒃᒋᒌᒍᒎᒐᒑ°ᒡᒥᒦ•¶ᒧ®©™ᒨᒪᒫᒻᓂᓃᓄᓅᓇᓈᓐᓯᓰᓱᓲᓴᓵᔅᓕᓖᓗᓘᓚᓛᓪᔨᔩᔪᔫᔭ… ᔮᔾᕕᕖᕗ–—“”‘’ᕘᕙᕚᕝᕆᕇᕈᕉᕋᕌᕐᕿᖀᖁᖂᖃᖄᖅᖏᖐᖑᖒᖓᖔᖕᙱᙲᙳᙴᙵᙶᖖᖠᖡᖢᖣᖤᖥᖦᕼŁł","x-mac-ce":"ÄĀāÉĄÖÜáąČäčĆćéŹźĎíďĒēĖóėôöõúĚěü†°Ę£§•¶ß®©™ę¨≠ģĮįĪ≤≥īĶ∂∑łĻļĽľĹĺŅņŃ¬√ńŇ∆«»… ňŐÕőŌ–—“”‘’÷◊ōŔŕŘ‹›řŖŗŠ‚„šŚśÁŤťÍŽžŪÓÔūŮÚůŰűŲųÝýķŻŁżĢˇ",macintosh:"ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûü†°¢£§•¶ß®©™´¨≠ÆØ∞±≤≥¥µ∂∑∏π∫ªºΩæø¿¡¬√ƒ≈∆«»… ÀÃÕŒœ–—“”‘’÷◊ÿŸ⁄€‹›ﬁﬂ‡·‚„‰ÂÊÁËÈÍÎÏÌÓÔÒÚÛÙıˆ˜¯˘˙˚¸˝˛ˇ","x-mac-romanian":"ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûü†°¢£§•¶ß®©™´¨≠ĂȘ∞±≤≥¥µ∂∑∏π∫ªºΩăș¿¡¬√ƒ≈∆«»… ÀÃÕŒœ–—“”‘’÷◊ÿŸ⁄€‹›Țț‡·‚„‰ÂÊÁËÈÍÎÏÌÓÔÒÚÛÙıˆ˜¯˘˙˚¸˝˛ˇ","x-mac-turkish":"ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûü†°¢£§•¶ß®©™´¨≠ÆØ∞±≤≥¥µ∂∑∏π∫ªºΩæø¿¡¬√ƒ≈∆«»… ÀÃÕŒœ–—“”‘’÷◊ÿŸĞğİıŞş‡·‚„‰ÂÊÁËÈÍÎÏÌÓÔÒÚÛÙˆ˜¯˘˙˚¸˝˛ˇ"};O.MACSTRING=function(e,t,n,o){var r=I[o];if(void 0!==r){for(var a="",i=0;i<n;i++){var s=e.getUint8(t+i);a+=s<=127?String.fromCharCode(s):r[127&s]}return a}};var U,D="function"==typeof WeakMap&&new WeakMap;function E(e){return e>=-128&&e<=127}function N(e,t,n){for(var o=0,r=e.length;t<r&&o<64&&0===e[t];)++t,++o;return n.push(128|o-1),t}function B(e,t,n){for(var o=0,r=e.length,a=t;a<r&&o<64;){var i=e[a];if(!E(i))break;if(0===i&&a+1<r&&0===e[a+1])break;++a,++o}n.push(o-1);for(var s=t;s<a;++s)n.push(e[s]+256&255);return a}function G(e,t,n){for(var o=0,r=e.length,a=t;a<r&&o<64;){var i=e[a];if(0===i)break;if(E(i)&&a+1<r&&E(e[a+1]))break;++a,++o}n.push(64|o-1);for(var s=t;s<a;++s){var l=e[s];n.push(l+65536>>8&255,l+256&255)}return a}P.MACSTRING=function(e,t){var n=function(e){if(!U)for(var t in U={},I)U[t]=new String(t);var n=U[e];if(void 0!==n){if(D){var o=D.get(n);if(void 0!==o)return o}var r=I[e];if(void 0!==r){for(var a={},i=0;i<r.length;i++)a[r.charCodeAt(i)]=i+128;return D&&D.set(n,a),a}}}(t);if(void 0!==n){for(var o=[],r=0;r<e.length;r++){var a=e.charCodeAt(r);if(a>=128&&void 0===(a=n[a]))return;o[r]=a}return o}},R.MACSTRING=function(e,t){var n=P.MACSTRING(e,t);return void 0!==n?n.length:0},P.VARDELTAS=function(e){for(var t=0,n=[];t<e.length;){var o=e[t];t=0===o?N(e,t,n):o>=-128&&o<=127?B(e,t,n):G(e,t,n)}return n},P.INDEX=function(e){for(var t=1,n=[t],o=[],r=0;r<e.length;r+=1){var a=P.OBJECT(e[r]);Array.prototype.push.apply(o,a),t+=a.length,n.push(t)}if(0===o.length)return[0,0];for(var i=[],s=1+Math.floor(Math.log(t)/Math.log(2))/8|0,l=[void 0,P.BYTE,P.USHORT,P.UINT24,P.ULONG][s],c=0;c<n.length;c+=1){var u=l(n[c]);Array.prototype.push.apply(i,u)}return Array.prototype.concat(P.Card16(e.length),P.OffSize(s),i,o)},R.INDEX=function(e){return P.INDEX(e).length},P.DICT=function(e){for(var t=[],n=Object.keys(e),o=n.length,r=0;r<o;r+=1){var a=parseInt(n[r],0),i=e[a];t=(t=t.concat(P.OPERAND(i.value,i.type))).concat(P.OPERATOR(a))}return t},R.DICT=function(e){return P.DICT(e).length},P.OPERATOR=function(e){return e<1200?[e]:[12,e-1200]},P.OPERAND=function(e,t){var n=[];if(Array.isArray(t))for(var o=0;o<t.length;o+=1)F.argument(e.length===t.length,"Not enough arguments given for type"+t),n=n.concat(P.OPERAND(e[o],t[o]));else if("SID"===t)n=n.concat(P.NUMBER(e));else if("offset"===t)n=n.concat(P.NUMBER32(e));else if("number"===t)n=n.concat(P.NUMBER(e));else{if("real"!==t)throw new Error("Unknown operand type "+t);n=n.concat(P.REAL(e))}return n},P.OP=P.BYTE,R.OP=R.BYTE;var q="function"==typeof WeakMap&&new WeakMap;function W(e,t,n){for(var o=0;o<t.length;o+=1){var r=t[o];this[r.name]=r.value}if(this.tableName=e,this.fields=t,n)for(var a=Object.keys(n),i=0;i<a.length;i+=1){var s=a[i],l=n[s];void 0!==this[s]&&(this[s]=l)}}function z(e,t,n){void 0===n&&(n=t.length);var o=new Array(t.length+1);o[0]={name:e+"Count",type:"USHORT",value:n};for(var r=0;r<t.length;r++)o[r+1]={name:e+r,type:"USHORT",value:t[r]};return o}function V(e,t,n){var o=t.length,r=new Array(o+1);r[0]={name:e+"Count",type:"USHORT",value:o};for(var a=0;a<o;a++)r[a+1]={name:e+a,type:"TABLE",value:n(t[a],a)};return r}function H(e,t,n){var o=t.length,r=[];r[0]={name:e+"Count",type:"USHORT",value:o};for(var a=0;a<o;a++)r=r.concat(n(t[a],a));return r}function j(e){1===e.format?W.call(this,"coverageTable",[{name:"coverageFormat",type:"USHORT",value:1}].concat(z("glyph",e.glyphs))):F.assert(!1,"Can't create coverage table format 2 yet.")}function X(e){W.call(this,"scriptListTable",H("scriptRecord",e,(function(e,t){var n=e.script,o=n.defaultLangSys;return F.assert(!!o,"Unable to write GSUB: script "+e.tag+" has no default language system."),[{name:"scriptTag"+t,type:"TAG",value:e.tag},{name:"script"+t,type:"TABLE",value:new W("scriptTable",[{name:"defaultLangSys",type:"TABLE",value:new W("defaultLangSys",[{name:"lookupOrder",type:"USHORT",value:0},{name:"reqFeatureIndex",type:"USHORT",value:o.reqFeatureIndex}].concat(z("featureIndex",o.featureIndexes)))}].concat(H("langSys",n.langSysRecords,(function(e,t){var n=e.langSys;return[{name:"langSysTag"+t,type:"TAG",value:e.tag},{name:"langSys"+t,type:"TABLE",value:new W("langSys",[{name:"lookupOrder",type:"USHORT",value:0},{name:"reqFeatureIndex",type:"USHORT",value:n.reqFeatureIndex}].concat(z("featureIndex",n.featureIndexes)))}]}))))}]})))}function Y(e){W.call(this,"featureListTable",H("featureRecord",e,(function(e,t){var n=e.feature;return[{name:"featureTag"+t,type:"TAG",value:e.tag},{name:"feature"+t,type:"TABLE",value:new W("featureTable",[{name:"featureParams",type:"USHORT",value:n.featureParams}].concat(z("lookupListIndex",n.lookupListIndexes)))}]})))}function K(e,t){W.call(this,"lookupListTable",V("lookup",e,(function(e){var n=t[e.lookupType];return F.assert(!!n,"Unable to write GSUB lookup type "+e.lookupType+" tables."),new W("lookupTable",[{name:"lookupType",type:"USHORT",value:e.lookupType},{name:"lookupFlag",type:"USHORT",value:e.lookupFlag}].concat(V("subtable",e.subtables,n)))})))}P.CHARSTRING=function(e){if(q){var t=q.get(e);if(void 0!==t)return t}for(var n=[],o=e.length,r=0;r<o;r+=1){var a=e[r];n=n.concat(P[a.type](a.value))}return q&&q.set(e,n),n},R.CHARSTRING=function(e){return P.CHARSTRING(e).length},P.OBJECT=function(e){var t=P[e.type];return F.argument(void 0!==t,"No encoding function for type "+e.type),t(e.value)},R.OBJECT=function(e){var t=R[e.type];return F.argument(void 0!==t,"No sizeOf function for type "+e.type),t(e.value)},P.TABLE=function(e){for(var t=[],n=e.fields.length,o=[],r=[],a=0;a<n;a+=1){var i=e.fields[a],s=P[i.type];F.argument(void 0!==s,"No encoding function for field type "+i.type+" ("+i.name+")");var l=e[i.name];void 0===l&&(l=i.value);var c=s(l);"TABLE"===i.type?(r.push(t.length),t=t.concat([0,0]),o.push(c)):t=t.concat(c)}for(var u=0;u<o.length;u+=1){var p=r[u],d=t.length;F.argument(d<65536,"Table "+e.tableName+" too big."),t[p]=d>>8,t[p+1]=255&d,t=t.concat(o[u])}return t},R.TABLE=function(e){for(var t=0,n=e.fields.length,o=0;o<n;o+=1){var r=e.fields[o],a=R[r.type];F.argument(void 0!==a,"No sizeOf function for field type "+r.type+" ("+r.name+")");var i=e[r.name];void 0===i&&(i=r.value),t+=a(i),"TABLE"===r.type&&(t+=2)}return t},P.RECORD=P.TABLE,R.RECORD=R.TABLE,P.LITERAL=function(e){return e},R.LITERAL=function(e){return e.length},W.prototype.encode=function(){return P.TABLE(this)},W.prototype.sizeOf=function(){return R.TABLE(this)},j.prototype=Object.create(W.prototype),j.prototype.constructor=j,X.prototype=Object.create(W.prototype),X.prototype.constructor=X,Y.prototype=Object.create(W.prototype),Y.prototype.constructor=Y,K.prototype=Object.create(W.prototype),K.prototype.constructor=K;var Z={Table:W,Record:W,Coverage:j,ScriptList:X,FeatureList:Y,LookupList:K,ushortList:z,tableList:V,recordList:H};function J(e,t){return e.getUint8(t)}function $(e,t){return e.getUint16(t,!1)}function Q(e,t){return e.getUint32(t,!1)}function ee(e,t){return e.getInt16(t,!1)+e.getUint16(t+2,!1)/65535}var te={byte:1,uShort:2,short:2,uLong:4,fixed:4,longDateTime:8,tag:4};function ne(e,t){this.data=e,this.offset=t,this.relativeOffset=0}ne.prototype.parseByte=function(){var e=this.data.getUint8(this.offset+this.relativeOffset);return this.relativeOffset+=1,e},ne.prototype.parseChar=function(){var e=this.data.getInt8(this.offset+this.relativeOffset);return this.relativeOffset+=1,e},ne.prototype.parseCard8=ne.prototype.parseByte,ne.prototype.parseUShort=function(){var e=this.data.getUint16(this.offset+this.relativeOffset);return this.relativeOffset+=2,e},ne.prototype.parseCard16=ne.prototype.parseUShort,ne.prototype.parseSID=ne.prototype.parseUShort,ne.prototype.parseOffset16=ne.prototype.parseUShort,ne.prototype.parseShort=function(){var e=this.data.getInt16(this.offset+this.relativeOffset);return this.relativeOffset+=2,e},ne.prototype.parseF2Dot14=function(){var e=this.data.getInt16(this.offset+this.relativeOffset)/16384;return this.relativeOffset+=2,e},ne.prototype.parseULong=function(){var e=Q(this.data,this.offset+this.relativeOffset);return this.relativeOffset+=4,e},ne.prototype.parseOffset32=ne.prototype.parseULong,ne.prototype.parseFixed=function(){var e=ee(this.data,this.offset+this.relativeOffset);return this.relativeOffset+=4,e},ne.prototype.parseString=function(e){var t=this.data,n=this.offset+this.relativeOffset,o="";this.relativeOffset+=e;for(var r=0;r<e;r++)o+=String.fromCharCode(t.getUint8(n+r));return o},ne.prototype.parseTag=function(){return this.parseString(4)},ne.prototype.parseLongDateTime=function(){var e=Q(this.data,this.offset+this.relativeOffset+4);return e-=2082844800,this.relativeOffset+=8,e},ne.prototype.parseVersion=function(e){var t=$(this.data,this.offset+this.relativeOffset),n=$(this.data,this.offset+this.relativeOffset+2);return this.relativeOffset+=4,void 0===e&&(e=4096),t+n/e/10},ne.prototype.skip=function(e,t){void 0===t&&(t=1),this.relativeOffset+=te[e]*t},ne.prototype.parseULongList=function(e){void 0===e&&(e=this.parseULong());for(var t=new Array(e),n=this.data,o=this.offset+this.relativeOffset,r=0;r<e;r++)t[r]=n.getUint32(o),o+=4;return this.relativeOffset+=4*e,t},ne.prototype.parseOffset16List=ne.prototype.parseUShortList=function(e){void 0===e&&(e=this.parseUShort());for(var t=new Array(e),n=this.data,o=this.offset+this.relativeOffset,r=0;r<e;r++)t[r]=n.getUint16(o),o+=2;return this.relativeOffset+=2*e,t},ne.prototype.parseShortList=function(e){for(var t=new Array(e),n=this.data,o=this.offset+this.relativeOffset,r=0;r<e;r++)t[r]=n.getInt16(o),o+=2;return this.relativeOffset+=2*e,t},ne.prototype.parseByteList=function(e){for(var t=new Array(e),n=this.data,o=this.offset+this.relativeOffset,r=0;r<e;r++)t[r]=n.getUint8(o++);return this.relativeOffset+=e,t},ne.prototype.parseList=function(e,t){t||(t=e,e=this.parseUShort());for(var n=new Array(e),o=0;o<e;o++)n[o]=t.call(this);return n},ne.prototype.parseList32=function(e,t){t||(t=e,e=this.parseULong());for(var n=new Array(e),o=0;o<e;o++)n[o]=t.call(this);return n},ne.prototype.parseRecordList=function(e,t){t||(t=e,e=this.parseUShort());for(var n=new Array(e),o=Object.keys(t),r=0;r<e;r++){for(var a={},i=0;i<o.length;i++){var s=o[i],l=t[s];a[s]=l.call(this)}n[r]=a}return n},ne.prototype.parseRecordList32=function(e,t){t||(t=e,e=this.parseULong());for(var n=new Array(e),o=Object.keys(t),r=0;r<e;r++){for(var a={},i=0;i<o.length;i++){var s=o[i],l=t[s];a[s]=l.call(this)}n[r]=a}return n},ne.prototype.parseStruct=function(e){if("function"==typeof e)return e.call(this);for(var t=Object.keys(e),n={},o=0;o<t.length;o++){var r=t[o],a=e[r];n[r]=a.call(this)}return n},ne.prototype.parseValueRecord=function(e){if(void 0===e&&(e=this.parseUShort()),0!==e){var t={};return 1&e&&(t.xPlacement=this.parseShort()),2&e&&(t.yPlacement=this.parseShort()),4&e&&(t.xAdvance=this.parseShort()),8&e&&(t.yAdvance=this.parseShort()),16&e&&(t.xPlaDevice=void 0,this.parseShort()),32&e&&(t.yPlaDevice=void 0,this.parseShort()),64&e&&(t.xAdvDevice=void 0,this.parseShort()),128&e&&(t.yAdvDevice=void 0,this.parseShort()),t}},ne.prototype.parseValueRecordList=function(){for(var e=this.parseUShort(),t=this.parseUShort(),n=new Array(t),o=0;o<t;o++)n[o]=this.parseValueRecord(e);return n},ne.prototype.parsePointer=function(e){var t=this.parseOffset16();if(t>0)return new ne(this.data,this.offset+t).parseStruct(e)},ne.prototype.parsePointer32=function(e){var t=this.parseOffset32();if(t>0)return new ne(this.data,this.offset+t).parseStruct(e)},ne.prototype.parseListOfLists=function(e){for(var t=this.parseOffset16List(),n=t.length,o=this.relativeOffset,r=new Array(n),a=0;a<n;a++){var i=t[a];if(0!==i)if(this.relativeOffset=i,e){for(var s=this.parseOffset16List(),l=new Array(s.length),c=0;c<s.length;c++)this.relativeOffset=i+s[c],l[c]=e.call(this);r[a]=l}else r[a]=this.parseUShortList();else r[a]=void 0}return this.relativeOffset=o,r},ne.prototype.parseCoverage=function(){var e=this.offset+this.relativeOffset,t=this.parseUShort(),n=this.parseUShort();if(1===t)return{format:1,glyphs:this.parseUShortList(n)};if(2===t){for(var o=new Array(n),r=0;r<n;r++)o[r]={start:this.parseUShort(),end:this.parseUShort(),index:this.parseUShort()};return{format:2,ranges:o}}throw new Error("0x"+e.toString(16)+": Coverage format must be 1 or 2.")},ne.prototype.parseClassDef=function(){var e=this.offset+this.relativeOffset,t=this.parseUShort();if(1===t)return{format:1,startGlyph:this.parseUShort(),classes:this.parseUShortList()};if(2===t)return{format:2,ranges:this.parseRecordList({start:ne.uShort,end:ne.uShort,classId:ne.uShort})};throw new Error("0x"+e.toString(16)+": ClassDef format must be 1 or 2.")},ne.list=function(e,t){return function(){return this.parseList(e,t)}},ne.list32=function(e,t){return function(){return this.parseList32(e,t)}},ne.recordList=function(e,t){return function(){return this.parseRecordList(e,t)}},ne.recordList32=function(e,t){return function(){return this.parseRecordList32(e,t)}},ne.pointer=function(e){return function(){return this.parsePointer(e)}},ne.pointer32=function(e){return function(){return this.parsePointer32(e)}},ne.tag=ne.prototype.parseTag,ne.byte=ne.prototype.parseByte,ne.uShort=ne.offset16=ne.prototype.parseUShort,ne.uShortList=ne.prototype.parseUShortList,ne.uLong=ne.offset32=ne.prototype.parseULong,ne.uLongList=ne.prototype.parseULongList,ne.struct=ne.prototype.parseStruct,ne.coverage=ne.prototype.parseCoverage,ne.classDef=ne.prototype.parseClassDef;var oe={reserved:ne.uShort,reqFeatureIndex:ne.uShort,featureIndexes:ne.uShortList};ne.prototype.parseScriptList=function(){return this.parsePointer(ne.recordList({tag:ne.tag,script:ne.pointer({defaultLangSys:ne.pointer(oe),langSysRecords:ne.recordList({tag:ne.tag,langSys:ne.pointer(oe)})})}))||[]},ne.prototype.parseFeatureList=function(){return this.parsePointer(ne.recordList({tag:ne.tag,feature:ne.pointer({featureParams:ne.offset16,lookupListIndexes:ne.uShortList})}))||[]},ne.prototype.parseLookupList=function(e){return this.parsePointer(ne.list(ne.pointer((function(){var t=this.parseUShort();F.argument(1<=t&&t<=9,"GPOS/GSUB lookup type "+t+" unknown.");var n=this.parseUShort(),o=16&n;return{lookupType:t,lookupFlag:n,subtables:this.parseList(ne.pointer(e[t])),markFilteringSet:o?this.parseUShort():void 0}}))))||[]},ne.prototype.parseFeatureVariationsList=function(){return this.parsePointer32((function(){var e=this.parseUShort(),t=this.parseUShort();return F.argument(1===e&&t<1,"GPOS/GSUB feature variations table unknown."),this.parseRecordList32({conditionSetOffset:ne.offset32,featureTableSubstitutionOffset:ne.offset32})}))||[]};var re={getByte:J,getCard8:J,getUShort:$,getCard16:$,getShort:function(e,t){return e.getInt16(t,!1)},getULong:Q,getFixed:ee,getTag:function(e,t){for(var n="",o=t;o<t+4;o+=1)n+=String.fromCharCode(e.getInt8(o));return n},getOffset:function(e,t,n){for(var o=0,r=0;r<n;r+=1)o<<=8,o+=e.getUint8(t+r);return o},getBytes:function(e,t,n){for(var o=[],r=t;r<n;r+=1)o.push(e.getUint8(r));return o},bytesToString:function(e){for(var t="",n=0;n<e.length;n+=1)t+=String.fromCharCode(e[n]);return t},Parser:ne};function ae(e,t,n){e.segments.push({end:t,start:t,delta:-(t-n),offset:0,glyphIndex:n})}var ie={parse:function(e,t){var n={};n.version=re.getUShort(e,t),F.argument(0===n.version,"cmap table version should be 0."),n.numTables=re.getUShort(e,t+2);for(var o=-1,r=n.numTables-1;r>=0;r-=1){var a=re.getUShort(e,t+4+8*r),i=re.getUShort(e,t+4+8*r+2);if(3===a&&(0===i||1===i||10===i)||0===a&&(0===i||1===i||2===i||3===i||4===i)){o=re.getULong(e,t+4+8*r+4);break}}if(-1===o)throw new Error("No valid cmap sub-tables found.");var s=new re.Parser(e,t+o);if(n.format=s.parseUShort(),12===n.format)!function(e,t){var n;t.parseUShort(),e.length=t.parseULong(),e.language=t.parseULong(),e.groupCount=n=t.parseULong(),e.glyphIndexMap={};for(var o=0;o<n;o+=1)for(var r=t.parseULong(),a=t.parseULong(),i=t.parseULong(),s=r;s<=a;s+=1)e.glyphIndexMap[s]=i,i++}(n,s);else{if(4!==n.format)throw new Error("Only format 4 and 12 cmap tables are supported (found format "+n.format+").");!function(e,t,n,o,r){var a;e.length=t.parseUShort(),e.language=t.parseUShort(),e.segCount=a=t.parseUShort()>>1,t.skip("uShort",3),e.glyphIndexMap={};for(var i=new re.Parser(n,o+r+14),s=new re.Parser(n,o+r+16+2*a),l=new re.Parser(n,o+r+16+4*a),c=new re.Parser(n,o+r+16+6*a),u=o+r+16+8*a,p=0;p<a-1;p+=1)for(var d=void 0,h=i.parseUShort(),_=s.parseUShort(),g=l.parseShort(),f=c.parseUShort(),m=_;m<=h;m+=1)0!==f?(u=c.offset+c.relativeOffset-2,u+=f,u+=2*(m-_),0!==(d=re.getUShort(n,u))&&(d=d+g&65535)):d=m+g&65535,e.glyphIndexMap[m]=d}(n,s,e,t,o)}return n},make:function(e){var t,n=!0;for(t=e.length-1;t>0;t-=1){if(e.get(t).unicode>65535){console.log("Adding CMAP format 12 (needed!)"),n=!1;break}}var o=[{name:"version",type:"USHORT",value:0},{name:"numTables",type:"USHORT",value:n?1:2},{name:"platformID",type:"USHORT",value:3},{name:"encodingID",type:"USHORT",value:1},{name:"offset",type:"ULONG",value:n?12:20}];n||(o=o.concat([{name:"cmap12PlatformID",type:"USHORT",value:3},{name:"cmap12EncodingID",type:"USHORT",value:10},{name:"cmap12Offset",type:"ULONG",value:0}])),o=o.concat([{name:"format",type:"USHORT",value:4},{name:"cmap4Length",type:"USHORT",value:0},{name:"language",type:"USHORT",value:0},{name:"segCountX2",type:"USHORT",value:0},{name:"searchRange",type:"USHORT",value:0},{name:"entrySelector",type:"USHORT",value:0},{name:"rangeShift",type:"USHORT",value:0}]);var r=new Z.Table("cmap",o);for(r.segments=[],t=0;t<e.length;t+=1){for(var a=e.get(t),i=0;i<a.unicodes.length;i+=1)ae(r,a.unicodes[i],t);r.segments=r.segments.sort((function(e,t){return e.start-t.start}))}!function(e){e.segments.push({end:65535,start:65535,delta:1,offset:0})}(r);var s=r.segments.length,l=0,c=[],u=[],p=[],d=[],h=[],_=[];for(t=0;t<s;t+=1){var g=r.segments[t];g.end<=65535&&g.start<=65535?(c=c.concat({name:"end_"+t,type:"USHORT",value:g.end}),u=u.concat({name:"start_"+t,type:"USHORT",value:g.start}),p=p.concat({name:"idDelta_"+t,type:"SHORT",value:g.delta}),d=d.concat({name:"idRangeOffset_"+t,type:"USHORT",value:g.offset}),void 0!==g.glyphId&&(h=h.concat({name:"glyph_"+t,type:"USHORT",value:g.glyphId}))):l+=1,n||void 0===g.glyphIndex||(_=(_=(_=_.concat({name:"cmap12Start_"+t,type:"ULONG",value:g.start})).concat({name:"cmap12End_"+t,type:"ULONG",value:g.end})).concat({name:"cmap12Glyph_"+t,type:"ULONG",value:g.glyphIndex}))}if(r.segCountX2=2*(s-l),r.searchRange=2*Math.pow(2,Math.floor(Math.log(s-l)/Math.log(2))),r.entrySelector=Math.log(r.searchRange/2)/Math.log(2),r.rangeShift=r.segCountX2-r.searchRange,r.fields=r.fields.concat(c),r.fields.push({name:"reservedPad",type:"USHORT",value:0}),r.fields=r.fields.concat(u),r.fields=r.fields.concat(p),r.fields=r.fields.concat(d),r.fields=r.fields.concat(h),r.cmap4Length=14+2*c.length+2+2*u.length+2*p.length+2*d.length+2*h.length,!n){var f=16+4*_.length;r.cmap12Offset=20+r.cmap4Length,r.fields=r.fields.concat([{name:"cmap12Format",type:"USHORT",value:12},{name:"cmap12Reserved",type:"USHORT",value:0},{name:"cmap12Length",type:"ULONG",value:f},{name:"cmap12Language",type:"ULONG",value:0},{name:"cmap12nGroups",type:"ULONG",value:_.length/3}]),r.fields=r.fields.concat(_)}return r}},se=[".notdef","space","exclam","quotedbl","numbersign","dollar","percent","ampersand","quoteright","parenleft","parenright","asterisk","plus","comma","hyphen","period","slash","zero","one","two","three","four","five","six","seven","eight","nine","colon","semicolon","less","equal","greater","question","at","A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z","bracketleft","backslash","bracketright","asciicircum","underscore","quoteleft","a","b","c","d","e","f","g","h","i","j","k","l","m","n","o","p","q","r","s","t","u","v","w","x","y","z","braceleft","bar","braceright","asciitilde","exclamdown","cent","sterling","fraction","yen","florin","section","currency","quotesingle","quotedblleft","guillemotleft","guilsinglleft","guilsinglright","fi","fl","endash","dagger","daggerdbl","periodcentered","paragraph","bullet","quotesinglbase","quotedblbase","quotedblright","guillemotright","ellipsis","perthousand","questiondown","grave","acute","circumflex","tilde","macron","breve","dotaccent","dieresis","ring","cedilla","hungarumlaut","ogonek","caron","emdash","AE","ordfeminine","Lslash","Oslash","OE","ordmasculine","ae","dotlessi","lslash","oslash","oe","germandbls","onesuperior","logicalnot","mu","trademark","Eth","onehalf","plusminus","Thorn","onequarter","divide","brokenbar","degree","thorn","threequarters","twosuperior","registered","minus","eth","multiply","threesuperior","copyright","Aacute","Acircumflex","Adieresis","Agrave","Aring","Atilde","Ccedilla","Eacute","Ecircumflex","Edieresis","Egrave","Iacute","Icircumflex","Idieresis","Igrave","Ntilde","Oacute","Ocircumflex","Odieresis","Ograve","Otilde","Scaron","Uacute","Ucircumflex","Udieresis","Ugrave","Yacute","Ydieresis","Zcaron","aacute","acircumflex","adieresis","agrave","aring","atilde","ccedilla","eacute","ecircumflex","edieresis","egrave","iacute","icircumflex","idieresis","igrave","ntilde","oacute","ocircumflex","odieresis","ograve","otilde","scaron","uacute","ucircumflex","udieresis","ugrave","yacute","ydieresis","zcaron","exclamsmall","Hungarumlautsmall","dollaroldstyle","dollarsuperior","ampersandsmall","Acutesmall","parenleftsuperior","parenrightsuperior","266 ff","onedotenleader","zerooldstyle","oneoldstyle","twooldstyle","threeoldstyle","fouroldstyle","fiveoldstyle","sixoldstyle","sevenoldstyle","eightoldstyle","nineoldstyle","commasuperior","threequartersemdash","periodsuperior","questionsmall","asuperior","bsuperior","centsuperior","dsuperior","esuperior","isuperior","lsuperior","msuperior","nsuperior","osuperior","rsuperior","ssuperior","tsuperior","ff","ffi","ffl","parenleftinferior","parenrightinferior","Circumflexsmall","hyphensuperior","Gravesmall","Asmall","Bsmall","Csmall","Dsmall","Esmall","Fsmall","Gsmall","Hsmall","Ismall","Jsmall","Ksmall","Lsmall","Msmall","Nsmall","Osmall","Psmall","Qsmall","Rsmall","Ssmall","Tsmall","Usmall","Vsmall","Wsmall","Xsmall","Ysmall","Zsmall","colonmonetary","onefitted","rupiah","Tildesmall","exclamdownsmall","centoldstyle","Lslashsmall","Scaronsmall","Zcaronsmall","Dieresissmall","Brevesmall","Caronsmall","Dotaccentsmall","Macronsmall","figuredash","hypheninferior","Ogoneksmall","Ringsmall","Cedillasmall","questiondownsmall","oneeighth","threeeighths","fiveeighths","seveneighths","onethird","twothirds","zerosuperior","foursuperior","fivesuperior","sixsuperior","sevensuperior","eightsuperior","ninesuperior","zeroinferior","oneinferior","twoinferior","threeinferior","fourinferior","fiveinferior","sixinferior","seveninferior","eightinferior","nineinferior","centinferior","dollarinferior","periodinferior","commainferior","Agravesmall","Aacutesmall","Acircumflexsmall","Atildesmall","Adieresissmall","Aringsmall","AEsmall","Ccedillasmall","Egravesmall","Eacutesmall","Ecircumflexsmall","Edieresissmall","Igravesmall","Iacutesmall","Icircumflexsmall","Idieresissmall","Ethsmall","Ntildesmall","Ogravesmall","Oacutesmall","Ocircumflexsmall","Otildesmall","Odieresissmall","OEsmall","Oslashsmall","Ugravesmall","Uacutesmall","Ucircumflexsmall","Udieresissmall","Yacutesmall","Thornsmall","Ydieresissmall","001.000","001.001","001.002","001.003","Black","Bold","Book","Light","Medium","Regular","Roman","Semibold"],le=["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","space","exclam","quotedbl","numbersign","dollar","percent","ampersand","quoteright","parenleft","parenright","asterisk","plus","comma","hyphen","period","slash","zero","one","two","three","four","five","six","seven","eight","nine","colon","semicolon","less","equal","greater","question","at","A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z","bracketleft","backslash","bracketright","asciicircum","underscore","quoteleft","a","b","c","d","e","f","g","h","i","j","k","l","m","n","o","p","q","r","s","t","u","v","w","x","y","z","braceleft","bar","braceright","asciitilde","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","exclamdown","cent","sterling","fraction","yen","florin","section","currency","quotesingle","quotedblleft","guillemotleft","guilsinglleft","guilsinglright","fi","fl","","endash","dagger","daggerdbl","periodcentered","","paragraph","bullet","quotesinglbase","quotedblbase","quotedblright","guillemotright","ellipsis","perthousand","","questiondown","","grave","acute","circumflex","tilde","macron","breve","dotaccent","dieresis","","ring","cedilla","","hungarumlaut","ogonek","caron","emdash","","","","","","","","","","","","","","","","","AE","","ordfeminine","","","","","Lslash","Oslash","OE","ordmasculine","","","","","","ae","","","","dotlessi","","","lslash","oslash","oe","germandbls"],ce=["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","space","exclamsmall","Hungarumlautsmall","","dollaroldstyle","dollarsuperior","ampersandsmall","Acutesmall","parenleftsuperior","parenrightsuperior","twodotenleader","onedotenleader","comma","hyphen","period","fraction","zerooldstyle","oneoldstyle","twooldstyle","threeoldstyle","fouroldstyle","fiveoldstyle","sixoldstyle","sevenoldstyle","eightoldstyle","nineoldstyle","colon","semicolon","commasuperior","threequartersemdash","periodsuperior","questionsmall","","asuperior","bsuperior","centsuperior","dsuperior","esuperior","","","isuperior","","","lsuperior","msuperior","nsuperior","osuperior","","","rsuperior","ssuperior","tsuperior","","ff","fi","fl","ffi","ffl","parenleftinferior","","parenrightinferior","Circumflexsmall","hyphensuperior","Gravesmall","Asmall","Bsmall","Csmall","Dsmall","Esmall","Fsmall","Gsmall","Hsmall","Ismall","Jsmall","Ksmall","Lsmall","Msmall","Nsmall","Osmall","Psmall","Qsmall","Rsmall","Ssmall","Tsmall","Usmall","Vsmall","Wsmall","Xsmall","Ysmall","Zsmall","colonmonetary","onefitted","rupiah","Tildesmall","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","exclamdownsmall","centoldstyle","Lslashsmall","","","Scaronsmall","Zcaronsmall","Dieresissmall","Brevesmall","Caronsmall","","Dotaccentsmall","","","Macronsmall","","","figuredash","hypheninferior","","","Ogoneksmall","Ringsmall","Cedillasmall","","","","onequarter","onehalf","threequarters","questiondownsmall","oneeighth","threeeighths","fiveeighths","seveneighths","onethird","twothirds","","","zerosuperior","onesuperior","twosuperior","threesuperior","foursuperior","fivesuperior","sixsuperior","sevensuperior","eightsuperior","ninesuperior","zeroinferior","oneinferior","twoinferior","threeinferior","fourinferior","fiveinferior","sixinferior","seveninferior","eightinferior","nineinferior","centinferior","dollarinferior","periodinferior","commainferior","Agravesmall","Aacutesmall","Acircumflexsmall","Atildesmall","Adieresissmall","Aringsmall","AEsmall","Ccedillasmall","Egravesmall","Eacutesmall","Ecircumflexsmall","Edieresissmall","Igravesmall","Iacutesmall","Icircumflexsmall","Idieresissmall","Ethsmall","Ntildesmall","Ogravesmall","Oacutesmall","Ocircumflexsmall","Otildesmall","Odieresissmall","OEsmall","Oslashsmall","Ugravesmall","Uacutesmall","Ucircumflexsmall","Udieresissmall","Yacutesmall","Thornsmall","Ydieresissmall"],ue=[".notdef",".null","nonmarkingreturn","space","exclam","quotedbl","numbersign","dollar","percent","ampersand","quotesingle","parenleft","parenright","asterisk","plus","comma","hyphen","period","slash","zero","one","two","three","four","five","six","seven","eight","nine","colon","semicolon","less","equal","greater","question","at","A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z","bracketleft","backslash","bracketright","asciicircum","underscore","grave","a","b","c","d","e","f","g","h","i","j","k","l","m","n","o","p","q","r","s","t","u","v","w","x","y","z","braceleft","bar","braceright","asciitilde","Adieresis","Aring","Ccedilla","Eacute","Ntilde","Odieresis","Udieresis","aacute","agrave","acircumflex","adieresis","atilde","aring","ccedilla","eacute","egrave","ecircumflex","edieresis","iacute","igrave","icircumflex","idieresis","ntilde","oacute","ograve","ocircumflex","odieresis","otilde","uacute","ugrave","ucircumflex","udieresis","dagger","degree","cent","sterling","section","bullet","paragraph","germandbls","registered","copyright","trademark","acute","dieresis","notequal","AE","Oslash","infinity","plusminus","lessequal","greaterequal","yen","mu","partialdiff","summation","product","pi","integral","ordfeminine","ordmasculine","Omega","ae","oslash","questiondown","exclamdown","logicalnot","radical","florin","approxequal","Delta","guillemotleft","guillemotright","ellipsis","nonbreakingspace","Agrave","Atilde","Otilde","OE","oe","endash","emdash","quotedblleft","quotedblright","quoteleft","quoteright","divide","lozenge","ydieresis","Ydieresis","fraction","currency","guilsinglleft","guilsinglright","fi","fl","daggerdbl","periodcentered","quotesinglbase","quotedblbase","perthousand","Acircumflex","Ecircumflex","Aacute","Edieresis","Egrave","Iacute","Icircumflex","Idieresis","Igrave","Oacute","Ocircumflex","apple","Ograve","Uacute","Ucircumflex","Ugrave","dotlessi","circumflex","tilde","macron","breve","dotaccent","ring","cedilla","hungarumlaut","ogonek","caron","Lslash","lslash","Scaron","scaron","Zcaron","zcaron","brokenbar","Eth","eth","Yacute","yacute","Thorn","thorn","minus","multiply","onesuperior","twosuperior","threesuperior","onehalf","onequarter","threequarters","franc","Gbreve","gbreve","Idotaccent","Scedilla","scedilla","Cacute","cacute","Ccaron","ccaron","dcroat"];function pe(e){this.font=e}function de(e){this.cmap=e}function he(e,t){this.encoding=e,this.charset=t}function _e(e){switch(e.version){case 1:this.names=ue.slice();break;case 2:this.names=new Array(e.numberOfGlyphs);for(var t=0;t<e.numberOfGlyphs;t++)e.glyphNameIndex[t]<ue.length?this.names[t]=ue[e.glyphNameIndex[t]]:this.names[t]=e.names[e.glyphNameIndex[t]-ue.length];break;case 2.5:this.names=new Array(e.numberOfGlyphs);for(var n=0;n<e.numberOfGlyphs;n++)this.names[n]=ue[n+e.glyphNameIndex[n]];break;case 3:default:this.names=[]}}function ge(e,t){t.lowMemory?function(e){e._IndexToUnicodeMap={};for(var t=e.tables.cmap.glyphIndexMap,n=Object.keys(t),o=0;o<n.length;o+=1){var r=n[o],a=t[r];void 0===e._IndexToUnicodeMap[a]?e._IndexToUnicodeMap[a]={unicodes:[parseInt(r)]}:e._IndexToUnicodeMap[a].unicodes.push(parseInt(r))}}(e):function(e){for(var t,n=e.tables.cmap.glyphIndexMap,o=Object.keys(n),r=0;r<o.length;r+=1){var a=o[r],i=n[a];(t=e.glyphs.get(i)).addUnicode(parseInt(a))}for(var s=0;s<e.glyphs.length;s+=1)t=e.glyphs.get(s),e.cffEncoding?e.isCIDFont?t.name="gid"+s:t.name=e.cffEncoding.charset[s]:e.glyphNames.names&&(t.name=e.glyphNames.glyphIndexToName(s))}(e)}pe.prototype.charToGlyphIndex=function(e){var t=e.codePointAt(0),n=this.font.glyphs;if(n)for(var o=0;o<n.length;o+=1)for(var r=n.get(o),a=0;a<r.unicodes.length;a+=1)if(r.unicodes[a]===t)return o;return null},de.prototype.charToGlyphIndex=function(e){return this.cmap.glyphIndexMap[e.codePointAt(0)]||0},he.prototype.charToGlyphIndex=function(e){var t=e.codePointAt(0),n=this.encoding[t];return this.charset.indexOf(n)},_e.prototype.nameToGlyphIndex=function(e){return this.names.indexOf(e)},_e.prototype.glyphIndexToName=function(e){return this.names[e]};var fe={line:function(e,t,n,o,r){e.beginPath(),e.moveTo(t,n),e.lineTo(o,r),e.stroke()}};function me(e){this.bindConstructorValues(e)}function ye(e,t,n){Object.defineProperty(e,t,{get:function(){return e.path,e[n]},set:function(t){e[n]=t},enumerable:!0,configurable:!0})}function ve(e,t){if(this.font=e,this.glyphs={},Array.isArray(t))for(var n=0;n<t.length;n++){var o=t[n];o.path.unitsPerEm=e.unitsPerEm,this.glyphs[n]=o}this.length=t&&t.length||0}me.prototype.bindConstructorValues=function(e){var t,n;this.index=e.index||0,this.name=e.name||null,this.unicode=e.unicode||void 0,this.unicodes=e.unicodes||void 0!==e.unicode?[e.unicode]:[],e.xMin&&(this.xMin=e.xMin),e.yMin&&(this.yMin=e.yMin),e.xMax&&(this.xMax=e.xMax),e.yMax&&(this.yMax=e.yMax),e.advanceWidth&&(this.advanceWidth=e.advanceWidth),Object.defineProperty(this,"path",(t=e.path,n=t||new T,{configurable:!0,get:function(){return"function"==typeof n&&(n=n()),n},set:function(e){n=e}}))},me.prototype.addUnicode=function(e){0===this.unicodes.length&&(this.unicode=e),this.unicodes.push(e)},me.prototype.getBoundingBox=function(){return this.path.getBoundingBox()},me.prototype.getPath=function(e,t,n,o,r){var a,i;e=void 0!==e?e:0,t=void 0!==t?t:0,n=void 0!==n?n:72,o||(o={});var s=o.xScale,l=o.yScale;if(o.hinting&&r&&r.hinting&&(i=this.path&&r.hinting.exec(this,n)),i)a=r.hinting.getCommands(i),e=Math.round(e),t=Math.round(t),s=l=1;else{a=this.path.commands;var c=1/(this.path.unitsPerEm||1e3)*n;void 0===s&&(s=c),void 0===l&&(l=c)}for(var u=new T,p=0;p<a.length;p+=1){var d=a[p];"M"===d.type?u.moveTo(e+d.x*s,t+-d.y*l):"L"===d.type?u.lineTo(e+d.x*s,t+-d.y*l):"Q"===d.type?u.quadraticCurveTo(e+d.x1*s,t+-d.y1*l,e+d.x*s,t+-d.y*l):"C"===d.type?u.curveTo(e+d.x1*s,t+-d.y1*l,e+d.x2*s,t+-d.y2*l,e+d.x*s,t+-d.y*l):"Z"===d.type&&u.closePath()}return u},me.prototype.getContours=function(){if(void 0===this.points)return[];for(var e=[],t=[],n=0;n<this.points.length;n+=1){var o=this.points[n];t.push(o),o.lastPointOfContour&&(e.push(t),t=[])}return F.argument(0===t.length,"There are still points left in the current contour."),e},me.prototype.getMetrics=function(){for(var e=this.path.commands,t=[],n=[],o=0;o<e.length;o+=1){var r=e[o];"Z"!==r.type&&(t.push(r.x),n.push(r.y)),"Q"!==r.type&&"C"!==r.type||(t.push(r.x1),n.push(r.y1)),"C"===r.type&&(t.push(r.x2),n.push(r.y2))}var a={xMin:Math.min.apply(null,t),yMin:Math.min.apply(null,n),xMax:Math.max.apply(null,t),yMax:Math.max.apply(null,n),leftSideBearing:this.leftSideBearing};return isFinite(a.xMin)||(a.xMin=0),isFinite(a.xMax)||(a.xMax=this.advanceWidth),isFinite(a.yMin)||(a.yMin=0),isFinite(a.yMax)||(a.yMax=0),a.rightSideBearing=this.advanceWidth-a.leftSideBearing-(a.xMax-a.xMin),a},me.prototype.draw=function(e,t,n,o,r){this.getPath(t,n,o,r).draw(e)},me.prototype.drawPoints=function(e,t,n,o){function r(t,n,o,r){var a=2*Math.PI;e.beginPath();for(var i=0;i<t.length;i+=1)e.moveTo(n+t[i].x*r,o+t[i].y*r),e.arc(n+t[i].x*r,o+t[i].y*r,2,0,a,!1);e.closePath(),e.fill()}t=void 0!==t?t:0,n=void 0!==n?n:0,o=void 0!==o?o:24;for(var a=1/this.path.unitsPerEm*o,i=[],s=[],l=this.path,c=0;c<l.commands.length;c+=1){var u=l.commands[c];void 0!==u.x&&i.push({x:u.x,y:-u.y}),void 0!==u.x1&&s.push({x:u.x1,y:-u.y1}),void 0!==u.x2&&s.push({x:u.x2,y:-u.y2})}e.fillStyle="blue",r(i,t,n,a),e.fillStyle="red",r(s,t,n,a)},me.prototype.drawMetrics=function(e,t,n,o){var r;t=void 0!==t?t:0,n=void 0!==n?n:0,o=void 0!==o?o:24,r=1/this.path.unitsPerEm*o,e.lineWidth=1,e.strokeStyle="black",fe.line(e,t,-1e4,t,1e4),fe.line(e,-1e4,n,1e4,n);var a=this.xMin||0,i=this.yMin||0,s=this.xMax||0,l=this.yMax||0,c=this.advanceWidth||0;e.strokeStyle="blue",fe.line(e,t+a*r,-1e4,t+a*r,1e4),fe.line(e,t+s*r,-1e4,t+s*r,1e4),fe.line(e,-1e4,n+-i*r,1e4,n+-i*r),fe.line(e,-1e4,n+-l*r,1e4,n+-l*r),e.strokeStyle="green",fe.line(e,t+c*r,-1e4,t+c*r,1e4)},ve.prototype.get=function(e){if(void 0===this.glyphs[e]){this.font._push(e),"function"==typeof this.glyphs[e]&&(this.glyphs[e]=this.glyphs[e]());var t=this.glyphs[e],n=this.font._IndexToUnicodeMap[e];if(n)for(var o=0;o<n.unicodes.length;o++)t.addUnicode(n.unicodes[o]);this.font.cffEncoding?this.font.isCIDFont?t.name="gid"+e:t.name=this.font.cffEncoding.charset[e]:this.font.glyphNames.names&&(t.name=this.font.glyphNames.glyphIndexToName(e)),this.glyphs[e].advanceWidth=this.font._hmtxTableData[e].advanceWidth,this.glyphs[e].leftSideBearing=this.font._hmtxTableData[e].leftSideBearing}else"function"==typeof this.glyphs[e]&&(this.glyphs[e]=this.glyphs[e]());return this.glyphs[e]},ve.prototype.push=function(e,t){this.glyphs[e]=t,this.length++};var be={GlyphSet:ve,glyphLoader:function(e,t){return new me({index:t,font:e})},ttfGlyphLoader:function(e,t,n,o,r,a){return function(){var i=new me({index:t,font:e});return i.path=function(){n(i,o,r);var t=a(e.glyphs,i);return t.unitsPerEm=e.unitsPerEm,t},ye(i,"xMin","_xMin"),ye(i,"xMax","_xMax"),ye(i,"yMin","_yMin"),ye(i,"yMax","_yMax"),i}},cffGlyphLoader:function(e,t,n,o){return function(){var r=new me({index:t,font:e});return r.path=function(){var t=n(e,r,o);return t.unitsPerEm=e.unitsPerEm,t},r}}};function xe(e,t){if(e===t)return!0;if(Array.isArray(e)&&Array.isArray(t)){if(e.length!==t.length)return!1;for(var n=0;n<e.length;n+=1)if(!xe(e[n],t[n]))return!1;return!0}return!1}function we(e){return e.length<1240?107:e.length<33900?1131:32768}function ke(e,t,n){var o,r,a=[],i=[],s=re.getCard16(e,t);if(0!==s){var l=re.getByte(e,t+2);o=t+(s+1)*l+2;for(var c=t+3,u=0;u<s+1;u+=1)a.push(re.getOffset(e,c,l)),c+=l;r=o+a[s]}else r=t+2;for(var p=0;p<a.length-1;p+=1){var d=re.getBytes(e,o+a[p],o+a[p+1]);n&&(d=n(d)),i.push(d)}return{objects:i,startOffset:t,endOffset:r}}function Ce(e,t){if(28===t)return e.parseByte()<<8|e.parseByte();if(29===t)return e.parseByte()<<24|e.parseByte()<<16|e.parseByte()<<8|e.parseByte();if(30===t)return function(e){for(var t="",n=["0","1","2","3","4","5","6","7","8","9",".","E","E-",null,"-"];;){var o=e.parseByte(),r=o>>4,a=15&o;if(15===r)break;if(t+=n[r],15===a)break;t+=n[a]}return parseFloat(t)}(e);if(t>=32&&t<=246)return t-139;if(t>=247&&t<=250)return 256*(t-247)+e.parseByte()+108;if(t>=251&&t<=254)return 256*-(t-251)-e.parseByte()-108;throw new Error("Invalid b0 "+t)}function Se(e,t,n){t=void 0!==t?t:0;var o=new re.Parser(e,t),r=[],a=[];for(n=void 0!==n?n:e.length;o.relativeOffset<n;){var i=o.parseByte();i<=21?(12===i&&(i=1200+o.parseByte()),r.push([i,a]),a=[]):a.push(Ce(o,i))}return function(e){for(var t={},n=0;n<e.length;n+=1){var o=e[n][0],r=e[n][1],a=void 0;if(a=1===r.length?r[0]:r,t.hasOwnProperty(o)&&!isNaN(t[o]))throw new Error("Object "+t+" already has key "+o);t[o]=a}return t}(r)}function Te(e,t){return t=t<=390?se[t]:e[t-391]}function Ae(e,t,n){for(var o,r={},a=0;a<t.length;a+=1){var i=t[a];if(Array.isArray(i.type)){var s=[];s.length=i.type.length;for(var l=0;l<i.type.length;l++)void 0===(o=void 0!==e[i.op]?e[i.op][l]:void 0)&&(o=void 0!==i.value&&void 0!==i.value[l]?i.value[l]:null),"SID"===i.type[l]&&(o=Te(n,o)),s[l]=o;r[i.name]=s}else void 0===(o=e[i.op])&&(o=void 0!==i.value?i.value:null),"SID"===i.type&&(o=Te(n,o)),r[i.name]=o}return r}var Me=[{name:"version",op:0,type:"SID"},{name:"notice",op:1,type:"SID"},{name:"copyright",op:1200,type:"SID"},{name:"fullName",op:2,type:"SID"},{name:"familyName",op:3,type:"SID"},{name:"weight",op:4,type:"SID"},{name:"isFixedPitch",op:1201,type:"number",value:0},{name:"italicAngle",op:1202,type:"number",value:0},{name:"underlinePosition",op:1203,type:"number",value:-100},{name:"underlineThickness",op:1204,type:"number",value:50},{name:"paintType",op:1205,type:"number",value:0},{name:"charstringType",op:1206,type:"number",value:2},{name:"fontMatrix",op:1207,type:["real","real","real","real","real","real"],value:[.001,0,0,.001,0,0]},{name:"uniqueId",op:13,type:"number"},{name:"fontBBox",op:5,type:["number","number","number","number"],value:[0,0,0,0]},{name:"strokeWidth",op:1208,type:"number",value:0},{name:"xuid",op:14,type:[],value:null},{name:"charset",op:15,type:"offset",value:0},{name:"encoding",op:16,type:"offset",value:0},{name:"charStrings",op:17,type:"offset",value:0},{name:"private",op:18,type:["number","offset"],value:[0,0]},{name:"ros",op:1230,type:["SID","SID","number"]},{name:"cidFontVersion",op:1231,type:"number",value:0},{name:"cidFontRevision",op:1232,type:"number",value:0},{name:"cidFontType",op:1233,type:"number",value:0},{name:"cidCount",op:1234,type:"number",value:8720},{name:"uidBase",op:1235,type:"number"},{name:"fdArray",op:1236,type:"offset"},{name:"fdSelect",op:1237,type:"offset"},{name:"fontName",op:1238,type:"SID"}],Fe=[{name:"subrs",op:19,type:"offset",value:0},{name:"defaultWidthX",op:20,type:"number",value:0},{name:"nominalWidthX",op:21,type:"number",value:0}];function Oe(e,t){return Ae(Se(e,0,e.byteLength),Me,t)}function Pe(e,t,n,o){return Ae(Se(e,t,n),Fe,o)}function Re(e,t,n,o){for(var r=[],a=0;a<n.length;a+=1){var i=Oe(new DataView(new Uint8Array(n[a]).buffer),o);i._subrs=[],i._subrsBias=0;var s=i.private[0],l=i.private[1];if(0!==s&&0!==l){var c=Pe(e,l+t,s,o);if(i._defaultWidthX=c.defaultWidthX,i._nominalWidthX=c.nominalWidthX,0!==c.subrs){var u=ke(e,l+c.subrs+t);i._subrs=u.objects,i._subrsBias=we(i._subrs)}i._privateDict=c}r.push(i)}return r}function Le(e,t,n){var o,r,a,i,s,l,c,u,p=new T,d=[],h=0,_=!1,g=!1,f=0,m=0;if(e.isCIDFont){var y=e.tables.cff.topDict._fdSelect[t.index],v=e.tables.cff.topDict._fdArray[y];s=v._subrs,l=v._subrsBias,c=v._defaultWidthX,u=v._nominalWidthX}else s=e.tables.cff.topDict._subrs,l=e.tables.cff.topDict._subrsBias,c=e.tables.cff.topDict._defaultWidthX,u=e.tables.cff.topDict._nominalWidthX;var b=c;function x(e,t){g&&p.closePath(),p.moveTo(e,t),g=!0}function w(){d.length%2!=0&&!_&&(b=d.shift()+u),h+=d.length>>1,d.length=0,_=!0}return function n(c){for(var y,v,k,C,S,T,A,M,F,O,P,R,L=0;L<c.length;){var I=c[L];switch(L+=1,I){case 1:case 3:w();break;case 4:d.length>1&&!_&&(b=d.shift()+u,_=!0),m+=d.pop(),x(f,m);break;case 5:for(;d.length>0;)f+=d.shift(),m+=d.shift(),p.lineTo(f,m);break;case 6:for(;d.length>0&&(f+=d.shift(),p.lineTo(f,m),0!==d.length);)m+=d.shift(),p.lineTo(f,m);break;case 7:for(;d.length>0&&(m+=d.shift(),p.lineTo(f,m),0!==d.length);)f+=d.shift(),p.lineTo(f,m);break;case 8:for(;d.length>0;)o=f+d.shift(),r=m+d.shift(),a=o+d.shift(),i=r+d.shift(),f=a+d.shift(),m=i+d.shift(),p.curveTo(o,r,a,i,f,m);break;case 10:S=d.pop()+l,(T=s[S])&&n(T);break;case 11:return;case 12:switch(I=c[L],L+=1,I){case 35:o=f+d.shift(),r=m+d.shift(),a=o+d.shift(),i=r+d.shift(),A=a+d.shift(),M=i+d.shift(),F=A+d.shift(),O=M+d.shift(),P=F+d.shift(),R=O+d.shift(),f=P+d.shift(),m=R+d.shift(),d.shift(),p.curveTo(o,r,a,i,A,M),p.curveTo(F,O,P,R,f,m);break;case 34:o=f+d.shift(),r=m,a=o+d.shift(),i=r+d.shift(),A=a+d.shift(),M=i,F=A+d.shift(),O=i,P=F+d.shift(),R=m,f=P+d.shift(),p.curveTo(o,r,a,i,A,M),p.curveTo(F,O,P,R,f,m);break;case 36:o=f+d.shift(),r=m+d.shift(),a=o+d.shift(),i=r+d.shift(),A=a+d.shift(),M=i,F=A+d.shift(),O=i,P=F+d.shift(),R=O+d.shift(),f=P+d.shift(),p.curveTo(o,r,a,i,A,M),p.curveTo(F,O,P,R,f,m);break;case 37:o=f+d.shift(),r=m+d.shift(),a=o+d.shift(),i=r+d.shift(),A=a+d.shift(),M=i+d.shift(),F=A+d.shift(),O=M+d.shift(),P=F+d.shift(),R=O+d.shift(),Math.abs(P-f)>Math.abs(R-m)?f=P+d.shift():m=R+d.shift(),p.curveTo(o,r,a,i,A,M),p.curveTo(F,O,P,R,f,m);break;default:console.log("Glyph "+t.index+": unknown operator 1200"+I),d.length=0}break;case 14:d.length>0&&!_&&(b=d.shift()+u,_=!0),g&&(p.closePath(),g=!1);break;case 18:w();break;case 19:case 20:w(),L+=h+7>>3;break;case 21:d.length>2&&!_&&(b=d.shift()+u,_=!0),m+=d.pop(),x(f+=d.pop(),m);break;case 22:d.length>1&&!_&&(b=d.shift()+u,_=!0),x(f+=d.pop(),m);break;case 23:w();break;case 24:for(;d.length>2;)o=f+d.shift(),r=m+d.shift(),a=o+d.shift(),i=r+d.shift(),f=a+d.shift(),m=i+d.shift(),p.curveTo(o,r,a,i,f,m);f+=d.shift(),m+=d.shift(),p.lineTo(f,m);break;case 25:for(;d.length>6;)f+=d.shift(),m+=d.shift(),p.lineTo(f,m);o=f+d.shift(),r=m+d.shift(),a=o+d.shift(),i=r+d.shift(),f=a+d.shift(),m=i+d.shift(),p.curveTo(o,r,a,i,f,m);break;case 26:for(d.length%2&&(f+=d.shift());d.length>0;)o=f,r=m+d.shift(),a=o+d.shift(),i=r+d.shift(),f=a,m=i+d.shift(),p.curveTo(o,r,a,i,f,m);break;case 27:for(d.length%2&&(m+=d.shift());d.length>0;)o=f+d.shift(),r=m,a=o+d.shift(),i=r+d.shift(),f=a+d.shift(),m=i,p.curveTo(o,r,a,i,f,m);break;case 28:y=c[L],v=c[L+1],d.push((y<<24|v<<16)>>16),L+=2;break;case 29:S=d.pop()+e.gsubrsBias,(T=e.gsubrs[S])&&n(T);break;case 30:for(;d.length>0&&(o=f,r=m+d.shift(),a=o+d.shift(),i=r+d.shift(),f=a+d.shift(),m=i+(1===d.length?d.shift():0),p.curveTo(o,r,a,i,f,m),0!==d.length);)o=f+d.shift(),r=m,a=o+d.shift(),i=r+d.shift(),m=i+d.shift(),f=a+(1===d.length?d.shift():0),p.curveTo(o,r,a,i,f,m);break;case 31:for(;d.length>0&&(o=f+d.shift(),r=m,a=o+d.shift(),i=r+d.shift(),m=i+d.shift(),f=a+(1===d.length?d.shift():0),p.curveTo(o,r,a,i,f,m),0!==d.length);)o=f,r=m+d.shift(),a=o+d.shift(),i=r+d.shift(),f=a+d.shift(),m=i+(1===d.length?d.shift():0),p.curveTo(o,r,a,i,f,m);break;default:I<32?console.log("Glyph "+t.index+": unknown operator "+I):I<247?d.push(I-139):I<251?(y=c[L],L+=1,d.push(256*(I-247)+y+108)):I<255?(y=c[L],L+=1,d.push(256*-(I-251)-y-108)):(y=c[L],v=c[L+1],k=c[L+2],C=c[L+3],L+=4,d.push((y<<24|v<<16|k<<8|C)/65536))}}}(n),t.advanceWidth=b,p}function Ie(e,t){var n,o=se.indexOf(e);return o>=0&&(n=o),(o=t.indexOf(e))>=0?n=o+se.length:(n=se.length+t.length,t.push(e)),n}function Ue(e,t,n){for(var o={},r=0;r<e.length;r+=1){var a=e[r],i=t[a.name];void 0===i||xe(i,a.value)||("SID"===a.type&&(i=Ie(i,n)),o[a.op]={name:a.name,type:a.type,value:i})}return o}function De(e,t){var n=new Z.Record("Top DICT",[{name:"dict",type:"DICT",value:{}}]);return n.dict=Ue(Me,e,t),n}function Ee(e){var t=new Z.Record("Top DICT INDEX",[{name:"topDicts",type:"INDEX",value:[]}]);return t.topDicts=[{name:"topDict_0",type:"TABLE",value:e}],t}function Ne(e){var t=[],n=e.path;t.push({name:"width",type:"NUMBER",value:e.advanceWidth});for(var o=0,r=0,a=0;a<n.commands.length;a+=1){var i=void 0,s=void 0,l=n.commands[a];if("Q"===l.type){l={type:"C",x:l.x,y:l.y,x1:1/3*o+2/3*l.x1,y1:1/3*r+2/3*l.y1,x2:1/3*l.x+2/3*l.x1,y2:1/3*l.y+2/3*l.y1}}if("M"===l.type)i=Math.round(l.x-o),s=Math.round(l.y-r),t.push({name:"dx",type:"NUMBER",value:i}),t.push({name:"dy",type:"NUMBER",value:s}),t.push({name:"rmoveto",type:"OP",value:21}),o=Math.round(l.x),r=Math.round(l.y);else if("L"===l.type)i=Math.round(l.x-o),s=Math.round(l.y-r),t.push({name:"dx",type:"NUMBER",value:i}),t.push({name:"dy",type:"NUMBER",value:s}),t.push({name:"rlineto",type:"OP",value:5}),o=Math.round(l.x),r=Math.round(l.y);else if("C"===l.type){var c=Math.round(l.x1-o),u=Math.round(l.y1-r),p=Math.round(l.x2-l.x1),d=Math.round(l.y2-l.y1);i=Math.round(l.x-l.x2),s=Math.round(l.y-l.y2),t.push({name:"dx1",type:"NUMBER",value:c}),t.push({name:"dy1",type:"NUMBER",value:u}),t.push({name:"dx2",type:"NUMBER",value:p}),t.push({name:"dy2",type:"NUMBER",value:d}),t.push({name:"dx",type:"NUMBER",value:i}),t.push({name:"dy",type:"NUMBER",value:s}),t.push({name:"rrcurveto",type:"OP",value:8}),o=Math.round(l.x),r=Math.round(l.y)}}return t.push({name:"endchar",type:"OP",value:14}),t}var Be={parse:function(e,t,n,o){n.tables.cff={};var r=function(e,t){var n={};return n.formatMajor=re.getCard8(e,t),n.formatMinor=re.getCard8(e,t+1),n.size=re.getCard8(e,t+2),n.offsetSize=re.getCard8(e,t+3),n.startOffset=t,n.endOffset=t+4,n}(e,t),a=ke(e,r.endOffset,re.bytesToString),i=ke(e,a.endOffset),s=ke(e,i.endOffset,re.bytesToString),l=ke(e,s.endOffset);n.gsubrs=l.objects,n.gsubrsBias=we(n.gsubrs);var c=Re(e,t,i.objects,s.objects);if(1!==c.length)throw new Error("CFF table has too many fonts in 'FontSet' - count of fonts NameIndex.length = "+c.length);var u=c[0];if(n.tables.cff.topDict=u,u._privateDict&&(n.defaultWidthX=u._privateDict.defaultWidthX,n.nominalWidthX=u._privateDict.nominalWidthX),void 0!==u.ros[0]&&void 0!==u.ros[1]&&(n.isCIDFont=!0),n.isCIDFont){var p=u.fdArray,d=u.fdSelect;if(0===p||0===d)throw new Error("Font is marked as a CID font, but FDArray and/or FDSelect information is missing");var h=ke(e,p+=t),_=Re(e,t,h.objects,s.objects);u._fdArray=_,d+=t,u._fdSelect=function(e,t,n,o){var r,a=[],i=new re.Parser(e,t),s=i.parseCard8();if(0===s)for(var l=0;l<n;l++){if((r=i.parseCard8())>=o)throw new Error("CFF table CID Font FDSelect has bad FD index value "+r+" (FD count "+o+")");a.push(r)}else{if(3!==s)throw new Error("CFF Table CID Font FDSelect table has unsupported format "+s);var c,u=i.parseCard16(),p=i.parseCard16();if(0!==p)throw new Error("CFF Table CID Font FDSelect format 3 range has bad initial GID "+p);for(var d=0;d<u;d++){if(r=i.parseCard8(),c=i.parseCard16(),r>=o)throw new Error("CFF table CID Font FDSelect has bad FD index value "+r+" (FD count "+o+")");if(c>n)throw new Error("CFF Table CID Font FDSelect format 3 range has bad GID "+c);for(;p<c;p++)a.push(r);p=c}if(c!==n)throw new Error("CFF Table CID Font FDSelect format 3 range has bad final GID "+c)}return a}(e,d,n.numGlyphs,_.length)}var g,f=t+u.private[1],m=Pe(e,f,u.private[0],s.objects);if(n.defaultWidthX=m.defaultWidthX,n.nominalWidthX=m.nominalWidthX,0!==m.subrs){var y=f+m.subrs,v=ke(e,y);n.subrs=v.objects,n.subrsBias=we(n.subrs)}else n.subrs=[],n.subrsBias=0;o.lowMemory?(g=function(e,t){var n,o,r=[],a=re.getCard16(e,t);if(0!==a){var i=re.getByte(e,t+2);n=t+(a+1)*i+2;for(var s=t+3,l=0;l<a+1;l+=1)r.push(re.getOffset(e,s,i)),s+=i;o=n+r[a]}else o=t+2;return{offsets:r,startOffset:t,endOffset:o}}(e,t+u.charStrings),n.nGlyphs=g.offsets.length):(g=ke(e,t+u.charStrings),n.nGlyphs=g.objects.length);var b=function(e,t,n,o){var r,a,i=new re.Parser(e,t);n-=1;var s=[".notdef"],l=i.parseCard8();if(0===l)for(var c=0;c<n;c+=1)r=i.parseSID(),s.push(Te(o,r));else if(1===l)for(;s.length<=n;){r=i.parseSID(),a=i.parseCard8();for(var u=0;u<=a;u+=1)s.push(Te(o,r)),r+=1}else{if(2!==l)throw new Error("Unknown charset format "+l);for(;s.length<=n;){r=i.parseSID(),a=i.parseCard16();for(var p=0;p<=a;p+=1)s.push(Te(o,r)),r+=1}}return s}(e,t+u.charset,n.nGlyphs,s.objects);if(0===u.encoding?n.cffEncoding=new he(le,b):1===u.encoding?n.cffEncoding=new he(ce,b):n.cffEncoding=function(e,t,n){var o,r={},a=new re.Parser(e,t),i=a.parseCard8();if(0===i)for(var s=a.parseCard8(),l=0;l<s;l+=1)r[o=a.parseCard8()]=l;else{if(1!==i)throw new Error("Unknown encoding format "+i);var c=a.parseCard8();o=1;for(var u=0;u<c;u+=1)for(var p=a.parseCard8(),d=a.parseCard8(),h=p;h<=p+d;h+=1)r[h]=o,o+=1}return new he(r,n)}(e,t+u.encoding,b),n.encoding=n.encoding||n.cffEncoding,n.glyphs=new be.GlyphSet(n),o.lowMemory)n._push=function(o){var r=function(e,t,n,o,r){var a=re.getCard16(n,o),i=0;0!==a&&(i=o+(a+1)*re.getByte(n,o+2)+2);var s=re.getBytes(n,i+t[e],i+t[e+1]);return r&&(s=r(s)),s}(o,g.offsets,e,t+u.charStrings);n.glyphs.push(o,be.cffGlyphLoader(n,o,Le,r))};else for(var x=0;x<n.nGlyphs;x+=1){var w=g.objects[x];n.glyphs.push(x,be.cffGlyphLoader(n,x,Le,w))}},make:function(e,t){for(var n,o=new Z.Table("CFF ",[{name:"header",type:"RECORD"},{name:"nameIndex",type:"RECORD"},{name:"topDictIndex",type:"RECORD"},{name:"stringIndex",type:"RECORD"},{name:"globalSubrIndex",type:"RECORD"},{name:"charsets",type:"RECORD"},{name:"charStringsIndex",type:"RECORD"},{name:"privateDict",type:"RECORD"}]),r=1/t.unitsPerEm,a={version:t.version,fullName:t.fullName,familyName:t.familyName,weight:t.weightName,fontBBox:t.fontBBox||[0,0,0,0],fontMatrix:[r,0,0,r,0,0],charset:999,encoding:0,charStrings:999,private:[0,999]},i=[],s=1;s<e.length;s+=1)n=e.get(s),i.push(n.name);var l=[];o.header=new Z.Record("Header",[{name:"major",type:"Card8",value:1},{name:"minor",type:"Card8",value:0},{name:"hdrSize",type:"Card8",value:4},{name:"major",type:"Card8",value:1}]),o.nameIndex=function(e){var t=new Z.Record("Name INDEX",[{name:"names",type:"INDEX",value:[]}]);t.names=[];for(var n=0;n<e.length;n+=1)t.names.push({name:"name_"+n,type:"NAME",value:e[n]});return t}([t.postScriptName]);var c=De(a,l);o.topDictIndex=Ee(c),o.globalSubrIndex=new Z.Record("Global Subr INDEX",[{name:"subrs",type:"INDEX",value:[]}]),o.charsets=function(e,t){for(var n=new Z.Record("Charsets",[{name:"format",type:"Card8",value:0}]),o=0;o<e.length;o+=1){var r=Ie(e[o],t);n.fields.push({name:"glyph_"+o,type:"SID",value:r})}return n}(i,l),o.charStringsIndex=function(e){for(var t=new Z.Record("CharStrings INDEX",[{name:"charStrings",type:"INDEX",value:[]}]),n=0;n<e.length;n+=1){var o=e.get(n),r=Ne(o);t.charStrings.push({name:o.name,type:"CHARSTRING",value:r})}return t}(e),o.privateDict=function(e,t){var n=new Z.Record("Private DICT",[{name:"dict",type:"DICT",value:{}}]);return n.dict=Ue(Fe,e,t),n}({},l),o.stringIndex=function(e){var t=new Z.Record("String INDEX",[{name:"strings",type:"INDEX",value:[]}]);t.strings=[];for(var n=0;n<e.length;n+=1)t.strings.push({name:"string_"+n,type:"STRING",value:e[n]});return t}(l);var u=o.header.sizeOf()+o.nameIndex.sizeOf()+o.topDictIndex.sizeOf()+o.stringIndex.sizeOf()+o.globalSubrIndex.sizeOf();return a.charset=u,a.encoding=0,a.charStrings=a.charset+o.charsets.sizeOf(),a.private[1]=a.charStrings+o.charStringsIndex.sizeOf(),c=De(a,l),o.topDictIndex=Ee(c),o}};var Ge={parse:function(e,t){var n={},o=new re.Parser(e,t);return n.version=o.parseVersion(),n.fontRevision=Math.round(1e3*o.parseFixed())/1e3,n.checkSumAdjustment=o.parseULong(),n.magicNumber=o.parseULong(),F.argument(1594834165===n.magicNumber,"Font header has wrong magic number."),n.flags=o.parseUShort(),n.unitsPerEm=o.parseUShort(),n.created=o.parseLongDateTime(),n.modified=o.parseLongDateTime(),n.xMin=o.parseShort(),n.yMin=o.parseShort(),n.xMax=o.parseShort(),n.yMax=o.parseShort(),n.macStyle=o.parseUShort(),n.lowestRecPPEM=o.parseUShort(),n.fontDirectionHint=o.parseShort(),n.indexToLocFormat=o.parseShort(),n.glyphDataFormat=o.parseShort(),n},make:function(e){var t=Math.round((new Date).getTime()/1e3)+2082844800,n=t;return e.createdTimestamp&&(n=e.createdTimestamp+2082844800),new Z.Table("head",[{name:"version",type:"FIXED",value:65536},{name:"fontRevision",type:"FIXED",value:65536},{name:"checkSumAdjustment",type:"ULONG",value:0},{name:"magicNumber",type:"ULONG",value:1594834165},{name:"flags",type:"USHORT",value:0},{name:"unitsPerEm",type:"USHORT",value:1e3},{name:"created",type:"LONGDATETIME",value:n},{name:"modified",type:"LONGDATETIME",value:t},{name:"xMin",type:"SHORT",value:0},{name:"yMin",type:"SHORT",value:0},{name:"xMax",type:"SHORT",value:0},{name:"yMax",type:"SHORT",value:0},{name:"macStyle",type:"USHORT",value:0},{name:"lowestRecPPEM",type:"USHORT",value:0},{name:"fontDirectionHint",type:"SHORT",value:2},{name:"indexToLocFormat",type:"SHORT",value:0},{name:"glyphDataFormat",type:"SHORT",value:0}],e)}};var qe={parse:function(e,t){var n={},o=new re.Parser(e,t);return n.version=o.parseVersion(),n.ascender=o.parseShort(),n.descender=o.parseShort(),n.lineGap=o.parseShort(),n.advanceWidthMax=o.parseUShort(),n.minLeftSideBearing=o.parseShort(),n.minRightSideBearing=o.parseShort(),n.xMaxExtent=o.parseShort(),n.caretSlopeRise=o.parseShort(),n.caretSlopeRun=o.parseShort(),n.caretOffset=o.parseShort(),o.relativeOffset+=8,n.metricDataFormat=o.parseShort(),n.numberOfHMetrics=o.parseUShort(),n},make:function(e){return new Z.Table("hhea",[{name:"version",type:"FIXED",value:65536},{name:"ascender",type:"FWORD",value:0},{name:"descender",type:"FWORD",value:0},{name:"lineGap",type:"FWORD",value:0},{name:"advanceWidthMax",type:"UFWORD",value:0},{name:"minLeftSideBearing",type:"FWORD",value:0},{name:"minRightSideBearing",type:"FWORD",value:0},{name:"xMaxExtent",type:"FWORD",value:0},{name:"caretSlopeRise",type:"SHORT",value:1},{name:"caretSlopeRun",type:"SHORT",value:0},{name:"caretOffset",type:"SHORT",value:0},{name:"reserved1",type:"SHORT",value:0},{name:"reserved2",type:"SHORT",value:0},{name:"reserved3",type:"SHORT",value:0},{name:"reserved4",type:"SHORT",value:0},{name:"metricDataFormat",type:"SHORT",value:0},{name:"numberOfHMetrics",type:"USHORT",value:0}],e)}};var We={parse:function(e,t,n,o,r,a,i){i.lowMemory?function(e,t,n,o,r){var a,i;e._hmtxTableData={};for(var s=new re.Parser(t,n),l=0;l<r;l+=1)l<o&&(a=s.parseUShort(),i=s.parseShort()),e._hmtxTableData[l]={advanceWidth:a,leftSideBearing:i}}(e,t,n,o,r):function(e,t,n,o,r){for(var a,i,s=new re.Parser(e,t),l=0;l<o;l+=1){l<n&&(a=s.parseUShort(),i=s.parseShort());var c=r.get(l);c.advanceWidth=a,c.leftSideBearing=i}}(t,n,o,r,a)},make:function(e){for(var t=new Z.Table("hmtx",[]),n=0;n<e.length;n+=1){var o=e.get(n),r=o.advanceWidth||0,a=o.leftSideBearing||0;t.fields.push({name:"advanceWidth_"+n,type:"USHORT",value:r}),t.fields.push({name:"leftSideBearing_"+n,type:"SHORT",value:a})}return t}};var ze={make:function(e){for(var t=new Z.Table("ltag",[{name:"version",type:"ULONG",value:1},{name:"flags",type:"ULONG",value:0},{name:"numTags",type:"ULONG",value:e.length}]),n="",o=12+4*e.length,r=0;r<e.length;++r){var a=n.indexOf(e[r]);a<0&&(a=n.length,n+=e[r]),t.fields.push({name:"offset "+r,type:"USHORT",value:o+a}),t.fields.push({name:"length "+r,type:"USHORT",value:e[r].length})}return t.fields.push({name:"stringPool",type:"CHARARRAY",value:n}),t},parse:function(e,t){var n=new re.Parser(e,t),o=n.parseULong();F.argument(1===o,"Unsupported ltag table version."),n.skip("uLong",1);for(var r=n.parseULong(),a=[],i=0;i<r;i++){for(var s="",l=t+n.parseUShort(),c=n.parseUShort(),u=l;u<l+c;++u)s+=String.fromCharCode(e.getInt8(u));a.push(s)}return a}};var Ve={parse:function(e,t){var n={},o=new re.Parser(e,t);return n.version=o.parseVersion(),n.numGlyphs=o.parseUShort(),1===n.version&&(n.maxPoints=o.parseUShort(),n.maxContours=o.parseUShort(),n.maxCompositePoints=o.parseUShort(),n.maxCompositeContours=o.parseUShort(),n.maxZones=o.parseUShort(),n.maxTwilightPoints=o.parseUShort(),n.maxStorage=o.parseUShort(),n.maxFunctionDefs=o.parseUShort(),n.maxInstructionDefs=o.parseUShort(),n.maxStackElements=o.parseUShort(),n.maxSizeOfInstructions=o.parseUShort(),n.maxComponentElements=o.parseUShort(),n.maxComponentDepth=o.parseUShort()),n},make:function(e){return new Z.Table("maxp",[{name:"version",type:"FIXED",value:20480},{name:"numGlyphs",type:"USHORT",value:e}])}},He=["copyright","fontFamily","fontSubfamily","uniqueID","fullName","version","postScriptName","trademark","manufacturer","designer","description","manufacturerURL","designerURL","license","licenseURL","reserved","preferredFamily","preferredSubfamily","compatibleFullName","sampleText","postScriptFindFontName","wwsFamily","wwsSubfamily"],je={0:"en",1:"fr",2:"de",3:"it",4:"nl",5:"sv",6:"es",7:"da",8:"pt",9:"no",10:"he",11:"ja",12:"ar",13:"fi",14:"el",15:"is",16:"mt",17:"tr",18:"hr",19:"zh-Hant",20:"ur",21:"hi",22:"th",23:"ko",24:"lt",25:"pl",26:"hu",27:"es",28:"lv",29:"se",30:"fo",31:"fa",32:"ru",33:"zh",34:"nl-BE",35:"ga",36:"sq",37:"ro",38:"cz",39:"sk",40:"si",41:"yi",42:"sr",43:"mk",44:"bg",45:"uk",46:"be",47:"uz",48:"kk",49:"az-Cyrl",50:"az-Arab",51:"hy",52:"ka",53:"mo",54:"ky",55:"tg",56:"tk",57:"mn-CN",58:"mn",59:"ps",60:"ks",61:"ku",62:"sd",63:"bo",64:"ne",65:"sa",66:"mr",67:"bn",68:"as",69:"gu",70:"pa",71:"or",72:"ml",73:"kn",74:"ta",75:"te",76:"si",77:"my",78:"km",79:"lo",80:"vi",81:"id",82:"tl",83:"ms",84:"ms-Arab",85:"am",86:"ti",87:"om",88:"so",89:"sw",90:"rw",91:"rn",92:"ny",93:"mg",94:"eo",128:"cy",129:"eu",130:"ca",131:"la",132:"qu",133:"gn",134:"ay",135:"tt",136:"ug",137:"dz",138:"jv",139:"su",140:"gl",141:"af",142:"br",143:"iu",144:"gd",145:"gv",146:"ga",147:"to",148:"el-polyton",149:"kl",150:"az",151:"nn"},Xe={0:0,1:0,2:0,3:0,4:0,5:0,6:0,7:0,8:0,9:0,10:5,11:1,12:4,13:0,14:6,15:0,16:0,17:0,18:0,19:2,20:4,21:9,22:21,23:3,24:29,25:29,26:29,27:29,28:29,29:0,30:0,31:4,32:7,33:25,34:0,35:0,36:0,37:0,38:29,39:29,40:0,41:5,42:7,43:7,44:7,45:7,46:7,47:7,48:7,49:7,50:4,51:24,52:23,53:7,54:7,55:7,56:7,57:27,58:7,59:4,60:4,61:4,62:4,63:26,64:9,65:9,66:9,67:13,68:13,69:11,70:10,71:12,72:17,73:16,74:14,75:15,76:18,77:19,78:20,79:22,80:30,81:0,82:0,83:0,84:4,85:28,86:28,87:28,88:0,89:0,90:0,91:0,92:0,93:0,94:0,128:0,129:0,130:0,131:0,132:0,133:0,134:0,135:7,136:4,137:26,138:0,139:0,140:0,141:0,142:0,143:28,144:0,145:0,146:0,147:0,148:6,149:0,150:0,151:0},Ye={1078:"af",1052:"sq",1156:"gsw",1118:"am",5121:"ar-DZ",15361:"ar-BH",3073:"ar",2049:"ar-IQ",11265:"ar-JO",13313:"ar-KW",12289:"ar-LB",4097:"ar-LY",6145:"ary",8193:"ar-OM",16385:"ar-QA",1025:"ar-SA",10241:"ar-SY",7169:"aeb",14337:"ar-AE",9217:"ar-YE",1067:"hy",1101:"as",2092:"az-Cyrl",1068:"az",1133:"ba",1069:"eu",1059:"be",2117:"bn",1093:"bn-IN",8218:"bs-Cyrl",5146:"bs",1150:"br",1026:"bg",1027:"ca",3076:"zh-HK",5124:"zh-MO",2052:"zh",4100:"zh-SG",1028:"zh-TW",1155:"co",1050:"hr",4122:"hr-BA",1029:"cs",1030:"da",1164:"prs",1125:"dv",2067:"nl-BE",1043:"nl",3081:"en-AU",10249:"en-BZ",4105:"en-CA",9225:"en-029",16393:"en-IN",6153:"en-IE",8201:"en-JM",17417:"en-MY",5129:"en-NZ",13321:"en-PH",18441:"en-SG",7177:"en-ZA",11273:"en-TT",2057:"en-GB",1033:"en",12297:"en-ZW",1061:"et",1080:"fo",1124:"fil",1035:"fi",2060:"fr-BE",3084:"fr-CA",1036:"fr",5132:"fr-LU",6156:"fr-MC",4108:"fr-CH",1122:"fy",1110:"gl",1079:"ka",3079:"de-AT",1031:"de",5127:"de-LI",4103:"de-LU",2055:"de-CH",1032:"el",1135:"kl",1095:"gu",1128:"ha",1037:"he",1081:"hi",1038:"hu",1039:"is",1136:"ig",1057:"id",1117:"iu",2141:"iu-Latn",2108:"ga",1076:"xh",1077:"zu",1040:"it",2064:"it-CH",1041:"ja",1099:"kn",1087:"kk",1107:"km",1158:"quc",1159:"rw",1089:"sw",1111:"kok",1042:"ko",1088:"ky",1108:"lo",1062:"lv",1063:"lt",2094:"dsb",1134:"lb",1071:"mk",2110:"ms-BN",1086:"ms",1100:"ml",1082:"mt",1153:"mi",1146:"arn",1102:"mr",1148:"moh",1104:"mn",2128:"mn-CN",1121:"ne",1044:"nb",2068:"nn",1154:"oc",1096:"or",1123:"ps",1045:"pl",1046:"pt",2070:"pt-PT",1094:"pa",1131:"qu-BO",2155:"qu-EC",3179:"qu",1048:"ro",1047:"rm",1049:"ru",9275:"smn",4155:"smj-NO",5179:"smj",3131:"se-FI",1083:"se",2107:"se-SE",8251:"sms",6203:"sma-NO",7227:"sms",1103:"sa",7194:"sr-Cyrl-BA",3098:"sr",6170:"sr-Latn-BA",2074:"sr-Latn",1132:"nso",1074:"tn",1115:"si",1051:"sk",1060:"sl",11274:"es-AR",16394:"es-BO",13322:"es-CL",9226:"es-CO",5130:"es-CR",7178:"es-DO",12298:"es-EC",17418:"es-SV",4106:"es-GT",18442:"es-HN",2058:"es-MX",19466:"es-NI",6154:"es-PA",15370:"es-PY",10250:"es-PE",20490:"es-PR",3082:"es",1034:"es",21514:"es-US",14346:"es-UY",8202:"es-VE",2077:"sv-FI",1053:"sv",1114:"syr",1064:"tg",2143:"tzm",1097:"ta",1092:"tt",1098:"te",1054:"th",1105:"bo",1055:"tr",1090:"tk",1152:"ug",1058:"uk",1070:"hsb",1056:"ur",2115:"uz-Cyrl",1091:"uz",1066:"vi",1106:"cy",1160:"wo",1157:"sah",1144:"ii",1130:"yo"};function Ke(e,t,n){switch(e){case 0:if(65535===t)return"und";if(n)return n[t];break;case 1:return je[t];case 3:return Ye[t]}}var Ze={0:"macintosh",1:"x-mac-japanese",2:"x-mac-chinesetrad",3:"x-mac-korean",6:"x-mac-greek",7:"x-mac-cyrillic",9:"x-mac-devanagai",10:"x-mac-gurmukhi",11:"x-mac-gujarati",12:"x-mac-oriya",13:"x-mac-bengali",14:"x-mac-tamil",15:"x-mac-telugu",16:"x-mac-kannada",17:"x-mac-malayalam",18:"x-mac-sinhalese",19:"x-mac-burmese",20:"x-mac-khmer",21:"x-mac-thai",22:"x-mac-lao",23:"x-mac-georgian",24:"x-mac-armenian",25:"x-mac-chinesesimp",26:"x-mac-tibetan",27:"x-mac-mongolian",28:"x-mac-ethiopic",29:"x-mac-ce",30:"x-mac-vietnamese",31:"x-mac-extarabic"},Je={15:"x-mac-icelandic",17:"x-mac-turkish",18:"x-mac-croatian",24:"x-mac-ce",25:"x-mac-ce",26:"x-mac-ce",27:"x-mac-ce",28:"x-mac-ce",30:"x-mac-icelandic",37:"x-mac-romanian",38:"x-mac-ce",39:"x-mac-ce",40:"x-mac-ce",143:"x-mac-inuit",146:"x-mac-gaelic"};function $e(e,t,n){switch(e){case 0:return"utf-16";case 1:return Je[n]||Ze[t];case 3:if(1===t||10===t)return"utf-16"}}function Qe(e){var t={};for(var n in e)t[e[n]]=parseInt(n);return t}function et(e,t,n,o,r,a){return new Z.Record("NameRecord",[{name:"platformID",type:"USHORT",value:e},{name:"encodingID",type:"USHORT",value:t},{name:"languageID",type:"USHORT",value:n},{name:"nameID",type:"USHORT",value:o},{name:"length",type:"USHORT",value:r},{name:"offset",type:"USHORT",value:a}])}function tt(e,t){var n=function(e,t){var n=e.length,o=t.length-n+1;e:for(var r=0;r<o;r++)for(;r<o;r++){for(var a=0;a<n;a++)if(t[r+a]!==e[a])continue e;return r}return-1}(e,t);if(n<0){n=t.length;for(var o=0,r=e.length;o<r;++o)t.push(e[o])}return n}var nt={parse:function(e,t,n){for(var o={},r=new re.Parser(e,t),a=r.parseUShort(),i=r.parseUShort(),s=r.offset+r.parseUShort(),l=0;l<i;l++){var c=r.parseUShort(),u=r.parseUShort(),p=r.parseUShort(),d=r.parseUShort(),h=He[d]||d,_=r.parseUShort(),g=r.parseUShort(),f=Ke(c,p,n),m=$e(c,u,p);if(void 0!==m&&void 0!==f){var y=void 0;if(y="utf-16"===m?O.UTF16(e,s+g,_):O.MACSTRING(e,s+g,_,m)){var v=o[h];void 0===v&&(v=o[h]={}),v[f]=y}}}return 1===a&&r.parseUShort(),o},make:function(e,t){var n,o=[],r={},a=Qe(He);for(var i in e){var s=a[i];if(void 0===s&&(s=i),n=parseInt(s),isNaN(n))throw new Error('Name table entry "'+i+'" does not exist, see nameTableNames for complete list.');r[n]=e[i],o.push(n)}for(var l=Qe(je),c=Qe(Ye),u=[],p=[],d=0;d<o.length;d++){var h=r[n=o[d]];for(var _ in h){var g=h[_],f=1,m=l[_],y=Xe[m],v=$e(f,y,m),b=P.MACSTRING(g,v);void 0===b&&(f=0,(m=t.indexOf(_))<0&&(m=t.length,t.push(_)),y=4,b=P.UTF16(g));var x=tt(b,p);u.push(et(f,y,m,n,b.length,x));var w=c[_];if(void 0!==w){var k=P.UTF16(g),C=tt(k,p);u.push(et(3,1,w,n,k.length,C))}}}u.sort((function(e,t){return e.platformID-t.platformID||e.encodingID-t.encodingID||e.languageID-t.languageID||e.nameID-t.nameID}));for(var S=new Z.Table("name",[{name:"format",type:"USHORT",value:0},{name:"count",type:"USHORT",value:u.length},{name:"stringOffset",type:"USHORT",value:6+12*u.length}]),T=0;T<u.length;T++)S.fields.push({name:"record_"+T,type:"RECORD",value:u[T]});return S.fields.push({name:"strings",type:"LITERAL",value:p}),S}},ot=[{begin:0,end:127},{begin:128,end:255},{begin:256,end:383},{begin:384,end:591},{begin:592,end:687},{begin:688,end:767},{begin:768,end:879},{begin:880,end:1023},{begin:11392,end:11519},{begin:1024,end:1279},{begin:1328,end:1423},{begin:1424,end:1535},{begin:42240,end:42559},{begin:1536,end:1791},{begin:1984,end:2047},{begin:2304,end:2431},{begin:2432,end:2559},{begin:2560,end:2687},{begin:2688,end:2815},{begin:2816,end:2943},{begin:2944,end:3071},{begin:3072,end:3199},{begin:3200,end:3327},{begin:3328,end:3455},{begin:3584,end:3711},{begin:3712,end:3839},{begin:4256,end:4351},{begin:6912,end:7039},{begin:4352,end:4607},{begin:7680,end:7935},{begin:7936,end:8191},{begin:8192,end:8303},{begin:8304,end:8351},{begin:8352,end:8399},{begin:8400,end:8447},{begin:8448,end:8527},{begin:8528,end:8591},{begin:8592,end:8703},{begin:8704,end:8959},{begin:8960,end:9215},{begin:9216,end:9279},{begin:9280,end:9311},{begin:9312,end:9471},{begin:9472,end:9599},{begin:9600,end:9631},{begin:9632,end:9727},{begin:9728,end:9983},{begin:9984,end:10175},{begin:12288,end:12351},{begin:12352,end:12447},{begin:12448,end:12543},{begin:12544,end:12591},{begin:12592,end:12687},{begin:43072,end:43135},{begin:12800,end:13055},{begin:13056,end:13311},{begin:44032,end:55215},{begin:55296,end:57343},{begin:67840,end:67871},{begin:19968,end:40959},{begin:57344,end:63743},{begin:12736,end:12783},{begin:64256,end:64335},{begin:64336,end:65023},{begin:65056,end:65071},{begin:65040,end:65055},{begin:65104,end:65135},{begin:65136,end:65279},{begin:65280,end:65519},{begin:65520,end:65535},{begin:3840,end:4095},{begin:1792,end:1871},{begin:1920,end:1983},{begin:3456,end:3583},{begin:4096,end:4255},{begin:4608,end:4991},{begin:5024,end:5119},{begin:5120,end:5759},{begin:5760,end:5791},{begin:5792,end:5887},{begin:6016,end:6143},{begin:6144,end:6319},{begin:10240,end:10495},{begin:40960,end:42127},{begin:5888,end:5919},{begin:66304,end:66351},{begin:66352,end:66383},{begin:66560,end:66639},{begin:118784,end:119039},{begin:119808,end:120831},{begin:1044480,end:1048573},{begin:65024,end:65039},{begin:917504,end:917631},{begin:6400,end:6479},{begin:6480,end:6527},{begin:6528,end:6623},{begin:6656,end:6687},{begin:11264,end:11359},{begin:11568,end:11647},{begin:19904,end:19967},{begin:43008,end:43055},{begin:65536,end:65663},{begin:65856,end:65935},{begin:66432,end:66463},{begin:66464,end:66527},{begin:66640,end:66687},{begin:66688,end:66735},{begin:67584,end:67647},{begin:68096,end:68191},{begin:119552,end:119647},{begin:73728,end:74751},{begin:119648,end:119679},{begin:7040,end:7103},{begin:7168,end:7247},{begin:7248,end:7295},{begin:43136,end:43231},{begin:43264,end:43311},{begin:43312,end:43359},{begin:43520,end:43615},{begin:65936,end:65999},{begin:66e3,end:66047},{begin:66208,end:66271},{begin:127024,end:127135}];var rt={parse:function(e,t){var n={},o=new re.Parser(e,t);n.version=o.parseUShort(),n.xAvgCharWidth=o.parseShort(),n.usWeightClass=o.parseUShort(),n.usWidthClass=o.parseUShort(),n.fsType=o.parseUShort(),n.ySubscriptXSize=o.parseShort(),n.ySubscriptYSize=o.parseShort(),n.ySubscriptXOffset=o.parseShort(),n.ySubscriptYOffset=o.parseShort(),n.ySuperscriptXSize=o.parseShort(),n.ySuperscriptYSize=o.parseShort(),n.ySuperscriptXOffset=o.parseShort(),n.ySuperscriptYOffset=o.parseShort(),n.yStrikeoutSize=o.parseShort(),n.yStrikeoutPosition=o.parseShort(),n.sFamilyClass=o.parseShort(),n.panose=[];for(var r=0;r<10;r++)n.panose[r]=o.parseByte();return n.ulUnicodeRange1=o.parseULong(),n.ulUnicodeRange2=o.parseULong(),n.ulUnicodeRange3=o.parseULong(),n.ulUnicodeRange4=o.parseULong(),n.achVendID=String.fromCharCode(o.parseByte(),o.parseByte(),o.parseByte(),o.parseByte()),n.fsSelection=o.parseUShort(),n.usFirstCharIndex=o.parseUShort(),n.usLastCharIndex=o.parseUShort(),n.sTypoAscender=o.parseShort(),n.sTypoDescender=o.parseShort(),n.sTypoLineGap=o.parseShort(),n.usWinAscent=o.parseUShort(),n.usWinDescent=o.parseUShort(),n.version>=1&&(n.ulCodePageRange1=o.parseULong(),n.ulCodePageRange2=o.parseULong()),n.version>=2&&(n.sxHeight=o.parseShort(),n.sCapHeight=o.parseShort(),n.usDefaultChar=o.parseUShort(),n.usBreakChar=o.parseUShort(),n.usMaxContent=o.parseUShort()),n},make:function(e){return new Z.Table("OS/2",[{name:"version",type:"USHORT",value:3},{name:"xAvgCharWidth",type:"SHORT",value:0},{name:"usWeightClass",type:"USHORT",value:0},{name:"usWidthClass",type:"USHORT",value:0},{name:"fsType",type:"USHORT",value:0},{name:"ySubscriptXSize",type:"SHORT",value:650},{name:"ySubscriptYSize",type:"SHORT",value:699},{name:"ySubscriptXOffset",type:"SHORT",value:0},{name:"ySubscriptYOffset",type:"SHORT",value:140},{name:"ySuperscriptXSize",type:"SHORT",value:650},{name:"ySuperscriptYSize",type:"SHORT",value:699},{name:"ySuperscriptXOffset",type:"SHORT",value:0},{name:"ySuperscriptYOffset",type:"SHORT",value:479},{name:"yStrikeoutSize",type:"SHORT",value:49},{name:"yStrikeoutPosition",type:"SHORT",value:258},{name:"sFamilyClass",type:"SHORT",value:0},{name:"bFamilyType",type:"BYTE",value:0},{name:"bSerifStyle",type:"BYTE",value:0},{name:"bWeight",type:"BYTE",value:0},{name:"bProportion",type:"BYTE",value:0},{name:"bContrast",type:"BYTE",value:0},{name:"bStrokeVariation",type:"BYTE",value:0},{name:"bArmStyle",type:"BYTE",value:0},{name:"bLetterform",type:"BYTE",value:0},{name:"bMidline",type:"BYTE",value:0},{name:"bXHeight",type:"BYTE",value:0},{name:"ulUnicodeRange1",type:"ULONG",value:0},{name:"ulUnicodeRange2",type:"ULONG",value:0},{name:"ulUnicodeRange3",type:"ULONG",value:0},{name:"ulUnicodeRange4",type:"ULONG",value:0},{name:"achVendID",type:"CHARARRAY",value:"XXXX"},{name:"fsSelection",type:"USHORT",value:0},{name:"usFirstCharIndex",type:"USHORT",value:0},{name:"usLastCharIndex",type:"USHORT",value:0},{name:"sTypoAscender",type:"SHORT",value:0},{name:"sTypoDescender",type:"SHORT",value:0},{name:"sTypoLineGap",type:"SHORT",value:0},{name:"usWinAscent",type:"USHORT",value:0},{name:"usWinDescent",type:"USHORT",value:0},{name:"ulCodePageRange1",type:"ULONG",value:0},{name:"ulCodePageRange2",type:"ULONG",value:0},{name:"sxHeight",type:"SHORT",value:0},{name:"sCapHeight",type:"SHORT",value:0},{name:"usDefaultChar",type:"USHORT",value:0},{name:"usBreakChar",type:"USHORT",value:0},{name:"usMaxContext",type:"USHORT",value:0}],e)},unicodeRanges:ot,getUnicodeRange:function(e){for(var t=0;t<ot.length;t+=1){var n=ot[t];if(e>=n.begin&&e<n.end)return t}return-1}};var at={parse:function(e,t){var n={},o=new re.Parser(e,t);switch(n.version=o.parseVersion(),n.italicAngle=o.parseFixed(),n.underlinePosition=o.parseShort(),n.underlineThickness=o.parseShort(),n.isFixedPitch=o.parseULong(),n.minMemType42=o.parseULong(),n.maxMemType42=o.parseULong(),n.minMemType1=o.parseULong(),n.maxMemType1=o.parseULong(),n.version){case 1:n.names=ue.slice();break;case 2:n.numberOfGlyphs=o.parseUShort(),n.glyphNameIndex=new Array(n.numberOfGlyphs);for(var r=0;r<n.numberOfGlyphs;r++)n.glyphNameIndex[r]=o.parseUShort();n.names=[];for(var a=0;a<n.numberOfGlyphs;a++)if(n.glyphNameIndex[a]>=ue.length){var i=o.parseChar();n.names.push(o.parseString(i))}break;case 2.5:n.numberOfGlyphs=o.parseUShort(),n.offset=new Array(n.numberOfGlyphs);for(var s=0;s<n.numberOfGlyphs;s++)n.offset[s]=o.parseChar()}return n},make:function(){return new Z.Table("post",[{name:"version",type:"FIXED",value:196608},{name:"italicAngle",type:"FIXED",value:0},{name:"underlinePosition",type:"FWORD",value:0},{name:"underlineThickness",type:"FWORD",value:0},{name:"isFixedPitch",type:"ULONG",value:0},{name:"minMemType42",type:"ULONG",value:0},{name:"maxMemType42",type:"ULONG",value:0},{name:"minMemType1",type:"ULONG",value:0},{name:"maxMemType1",type:"ULONG",value:0}])}},it=new Array(9);it[1]=function(){var e=this.offset+this.relativeOffset,t=this.parseUShort();return 1===t?{substFormat:1,coverage:this.parsePointer(ne.coverage),deltaGlyphId:this.parseUShort()}:2===t?{substFormat:2,coverage:this.parsePointer(ne.coverage),substitute:this.parseOffset16List()}:void F.assert(!1,"0x"+e.toString(16)+": lookup type 1 format must be 1 or 2.")},it[2]=function(){var e=this.parseUShort();return F.argument(1===e,"GSUB Multiple Substitution Subtable identifier-format must be 1"),{substFormat:e,coverage:this.parsePointer(ne.coverage),sequences:this.parseListOfLists()}},it[3]=function(){var e=this.parseUShort();return F.argument(1===e,"GSUB Alternate Substitution Subtable identifier-format must be 1"),{substFormat:e,coverage:this.parsePointer(ne.coverage),alternateSets:this.parseListOfLists()}},it[4]=function(){var e=this.parseUShort();return F.argument(1===e,"GSUB ligature table identifier-format must be 1"),{substFormat:e,coverage:this.parsePointer(ne.coverage),ligatureSets:this.parseListOfLists((function(){return{ligGlyph:this.parseUShort(),components:this.parseUShortList(this.parseUShort()-1)}}))}};var st={sequenceIndex:ne.uShort,lookupListIndex:ne.uShort};it[5]=function(){var e=this.offset+this.relativeOffset,t=this.parseUShort();if(1===t)return{substFormat:t,coverage:this.parsePointer(ne.coverage),ruleSets:this.parseListOfLists((function(){var e=this.parseUShort(),t=this.parseUShort();return{input:this.parseUShortList(e-1),lookupRecords:this.parseRecordList(t,st)}}))};if(2===t)return{substFormat:t,coverage:this.parsePointer(ne.coverage),classDef:this.parsePointer(ne.classDef),classSets:this.parseListOfLists((function(){var e=this.parseUShort(),t=this.parseUShort();return{classes:this.parseUShortList(e-1),lookupRecords:this.parseRecordList(t,st)}}))};if(3===t){var n=this.parseUShort(),o=this.parseUShort();return{substFormat:t,coverages:this.parseList(n,ne.pointer(ne.coverage)),lookupRecords:this.parseRecordList(o,st)}}F.assert(!1,"0x"+e.toString(16)+": lookup type 5 format must be 1, 2 or 3.")},it[6]=function(){var e=this.offset+this.relativeOffset,t=this.parseUShort();return 1===t?{substFormat:1,coverage:this.parsePointer(ne.coverage),chainRuleSets:this.parseListOfLists((function(){return{backtrack:this.parseUShortList(),input:this.parseUShortList(this.parseShort()-1),lookahead:this.parseUShortList(),lookupRecords:this.parseRecordList(st)}}))}:2===t?{substFormat:2,coverage:this.parsePointer(ne.coverage),backtrackClassDef:this.parsePointer(ne.classDef),inputClassDef:this.parsePointer(ne.classDef),lookaheadClassDef:this.parsePointer(ne.classDef),chainClassSet:this.parseListOfLists((function(){return{backtrack:this.parseUShortList(),input:this.parseUShortList(this.parseShort()-1),lookahead:this.parseUShortList(),lookupRecords:this.parseRecordList(st)}}))}:3===t?{substFormat:3,backtrackCoverage:this.parseList(ne.pointer(ne.coverage)),inputCoverage:this.parseList(ne.pointer(ne.coverage)),lookaheadCoverage:this.parseList(ne.pointer(ne.coverage)),lookupRecords:this.parseRecordList(st)}:void F.assert(!1,"0x"+e.toString(16)+": lookup type 6 format must be 1, 2 or 3.")},it[7]=function(){var e=this.parseUShort();F.argument(1===e,"GSUB Extension Substitution subtable identifier-format must be 1");var t=this.parseUShort(),n=new ne(this.data,this.offset+this.parseULong());return{substFormat:1,lookupType:t,extension:it[t].call(n)}},it[8]=function(){var e=this.parseUShort();return F.argument(1===e,"GSUB Reverse Chaining Contextual Single Substitution Subtable identifier-format must be 1"),{substFormat:e,coverage:this.parsePointer(ne.coverage),backtrackCoverage:this.parseList(ne.pointer(ne.coverage)),lookaheadCoverage:this.parseList(ne.pointer(ne.coverage)),substitutes:this.parseUShortList()}};var lt=new Array(9);lt[1]=function(e){return 1===e.substFormat?new Z.Table("substitutionTable",[{name:"substFormat",type:"USHORT",value:1},{name:"coverage",type:"TABLE",value:new Z.Coverage(e.coverage)},{name:"deltaGlyphID",type:"USHORT",value:e.deltaGlyphId}]):new Z.Table("substitutionTable",[{name:"substFormat",type:"USHORT",value:2},{name:"coverage",type:"TABLE",value:new Z.Coverage(e.coverage)}].concat(Z.ushortList("substitute",e.substitute)))},lt[3]=function(e){return F.assert(1===e.substFormat,"Lookup type 3 substFormat must be 1."),new Z.Table("substitutionTable",[{name:"substFormat",type:"USHORT",value:1},{name:"coverage",type:"TABLE",value:new Z.Coverage(e.coverage)}].concat(Z.tableList("altSet",e.alternateSets,(function(e){return new Z.Table("alternateSetTable",Z.ushortList("alternate",e))}))))},lt[4]=function(e){return F.assert(1===e.substFormat,"Lookup type 4 substFormat must be 1."),new Z.Table("substitutionTable",[{name:"substFormat",type:"USHORT",value:1},{name:"coverage",type:"TABLE",value:new Z.Coverage(e.coverage)}].concat(Z.tableList("ligSet",e.ligatureSets,(function(e){return new Z.Table("ligatureSetTable",Z.tableList("ligature",e,(function(e){return new Z.Table("ligatureTable",[{name:"ligGlyph",type:"USHORT",value:e.ligGlyph}].concat(Z.ushortList("component",e.components,e.components.length+1)))})))}))))};var ct={parse:function(e,t){var n=new ne(e,t=t||0),o=n.parseVersion(1);return F.argument(1===o||1.1===o,"Unsupported GSUB table version."),1===o?{version:o,scripts:n.parseScriptList(),features:n.parseFeatureList(),lookups:n.parseLookupList(it)}:{version:o,scripts:n.parseScriptList(),features:n.parseFeatureList(),lookups:n.parseLookupList(it),variations:n.parseFeatureVariationsList()}},make:function(e){return new Z.Table("GSUB",[{name:"version",type:"ULONG",value:65536},{name:"scripts",type:"TABLE",value:new Z.ScriptList(e.scripts)},{name:"features",type:"TABLE",value:new Z.FeatureList(e.features)},{name:"lookups",type:"TABLE",value:new Z.LookupList(e.lookups,lt)}])}};var ut={parse:function(e,t){var n=new re.Parser(e,t),o=n.parseULong();F.argument(1===o,"Unsupported META table version."),n.parseULong(),n.parseULong();for(var r=n.parseULong(),a={},i=0;i<r;i++){var s=n.parseTag(),l=n.parseULong(),c=n.parseULong(),u=O.UTF8(e,t+l,c);a[s]=u}return a},make:function(e){var t=Object.keys(e).length,n="",o=16+12*t,r=new Z.Table("meta",[{name:"version",type:"ULONG",value:1},{name:"flags",type:"ULONG",value:0},{name:"offset",type:"ULONG",value:o},{name:"numTags",type:"ULONG",value:t}]);for(var a in e){var i=n.length;n+=e[a],r.fields.push({name:"tag "+a,type:"TAG",value:a}),r.fields.push({name:"offset "+a,type:"ULONG",value:o+i}),r.fields.push({name:"length "+a,type:"ULONG",value:e[a].length})}return r.fields.push({name:"stringPool",type:"CHARARRAY",value:n}),r}};function pt(e){return Math.log(e)/Math.log(2)|0}function dt(e){for(;e.length%4!=0;)e.push(0);for(var t=0,n=0;n<e.length;n+=4)t+=(e[n]<<24)+(e[n+1]<<16)+(e[n+2]<<8)+e[n+3];return t%=Math.pow(2,32)}function ht(e,t,n,o){return new Z.Record("Table Record",[{name:"tag",type:"TAG",value:void 0!==e?e:""},{name:"checkSum",type:"ULONG",value:void 0!==t?t:0},{name:"offset",type:"ULONG",value:void 0!==n?n:0},{name:"length",type:"ULONG",value:void 0!==o?o:0}])}function _t(e){var t=new Z.Table("sfnt",[{name:"version",type:"TAG",value:"OTTO"},{name:"numTables",type:"USHORT",value:0},{name:"searchRange",type:"USHORT",value:0},{name:"entrySelector",type:"USHORT",value:0},{name:"rangeShift",type:"USHORT",value:0}]);t.tables=e,t.numTables=e.length;var n=Math.pow(2,pt(t.numTables));t.searchRange=16*n,t.entrySelector=pt(n),t.rangeShift=16*t.numTables-t.searchRange;for(var o=[],r=[],a=t.sizeOf()+ht().sizeOf()*t.numTables;a%4!=0;)a+=1,r.push({name:"padding",type:"BYTE",value:0});for(var i=0;i<e.length;i+=1){var s=e[i];F.argument(4===s.tableName.length,"Table name"+s.tableName+" is invalid.");var l=s.sizeOf(),c=ht(s.tableName,dt(s.encode()),a,l);for(o.push({name:c.tag+" Table Record",type:"RECORD",value:c}),r.push({name:s.tableName+" table",type:"RECORD",value:s}),a+=l,F.argument(!isNaN(a),"Something went wrong calculating the offset.");a%4!=0;)a+=1,r.push({name:"padding",type:"BYTE",value:0})}return o.sort((function(e,t){return e.value.tag>t.value.tag?1:-1})),t.fields=t.fields.concat(o),t.fields=t.fields.concat(r),t}function gt(e,t,n){for(var o=0;o<t.length;o+=1){var r=e.charToGlyphIndex(t[o]);if(r>0)return e.glyphs.get(r).getMetrics()}return n}function ft(e){for(var t=0,n=0;n<e.length;n+=1)t+=e[n];return t/e.length}var mt={make:_t,fontToTable:function(e){for(var t,n=[],o=[],r=[],a=[],i=[],s=[],l=[],c=0,u=0,p=0,d=0,h=0,_=0;_<e.glyphs.length;_+=1){var g=e.glyphs.get(_),f=0|g.unicode;if(isNaN(g.advanceWidth))throw new Error("Glyph "+g.name+" ("+_+"): advanceWidth is not a number.");(t>f||void 0===t)&&f>0&&(t=f),c<f&&(c=f);var m=rt.getUnicodeRange(f);if(m<32)u|=1<<m;else if(m<64)p|=1<<m-32;else if(m<96)d|=1<<m-64;else{if(!(m<123))throw new Error("Unicode ranges bits > 123 are reserved for internal usage");h|=1<<m-96}if(".notdef"!==g.name){var y=g.getMetrics();n.push(y.xMin),o.push(y.yMin),r.push(y.xMax),a.push(y.yMax),s.push(y.leftSideBearing),l.push(y.rightSideBearing),i.push(g.advanceWidth)}}var v={xMin:Math.min.apply(null,n),yMin:Math.min.apply(null,o),xMax:Math.max.apply(null,r),yMax:Math.max.apply(null,a),advanceWidthMax:Math.max.apply(null,i),advanceWidthAvg:ft(i),minLeftSideBearing:Math.min.apply(null,s),maxLeftSideBearing:Math.max.apply(null,s),minRightSideBearing:Math.min.apply(null,l)};v.ascender=e.ascender,v.descender=e.descender;var b=Ge.make({flags:3,unitsPerEm:e.unitsPerEm,xMin:v.xMin,yMin:v.yMin,xMax:v.xMax,yMax:v.yMax,lowestRecPPEM:3,createdTimestamp:e.createdTimestamp}),x=qe.make({ascender:v.ascender,descender:v.descender,advanceWidthMax:v.advanceWidthMax,minLeftSideBearing:v.minLeftSideBearing,minRightSideBearing:v.minRightSideBearing,xMaxExtent:v.maxLeftSideBearing+(v.xMax-v.xMin),numberOfHMetrics:e.glyphs.length}),w=Ve.make(e.glyphs.length),k=rt.make({xAvgCharWidth:Math.round(v.advanceWidthAvg),usWeightClass:e.tables.os2.usWeightClass,usWidthClass:e.tables.os2.usWidthClass,usFirstCharIndex:t,usLastCharIndex:c,ulUnicodeRange1:u,ulUnicodeRange2:p,ulUnicodeRange3:d,ulUnicodeRange4:h,fsSelection:e.tables.os2.fsSelection,sTypoAscender:v.ascender,sTypoDescender:v.descender,sTypoLineGap:0,usWinAscent:v.yMax,usWinDescent:Math.abs(v.yMin),ulCodePageRange1:1,sxHeight:gt(e,"xyvw",{yMax:Math.round(v.ascender/2)}).yMax,sCapHeight:gt(e,"HIKLEFJMNTZBDPRAGOQSUVWXY",v).yMax,usDefaultChar:e.hasChar(" ")?32:0,usBreakChar:e.hasChar(" ")?32:0}),C=We.make(e.glyphs),S=ie.make(e.glyphs),T=e.getEnglishName("fontFamily"),A=e.getEnglishName("fontSubfamily"),M=T+" "+A,F=e.getEnglishName("postScriptName");F||(F=T.replace(/\s/g,"")+"-"+A);var O={};for(var P in e.names)O[P]=e.names[P];O.uniqueID||(O.uniqueID={en:e.getEnglishName("manufacturer")+":"+M}),O.postScriptName||(O.postScriptName={en:F}),O.preferredFamily||(O.preferredFamily=e.names.fontFamily),O.preferredSubfamily||(O.preferredSubfamily=e.names.fontSubfamily);var R=[],L=nt.make(O,R),I=R.length>0?ze.make(R):void 0,U=at.make(),D=Be.make(e.glyphs,{version:e.getEnglishName("version"),fullName:M,familyName:T,weightName:A,postScriptName:F,unitsPerEm:e.unitsPerEm,fontBBox:[0,v.yMin,v.ascender,v.advanceWidthMax]}),E=e.metas&&Object.keys(e.metas).length>0?ut.make(e.metas):void 0,N=[b,x,w,k,L,S,U,D,C];I&&N.push(I),e.tables.gsub&&N.push(ct.make(e.tables.gsub)),E&&N.push(E);for(var B=_t(N),G=dt(B.encode()),q=B.fields,W=!1,z=0;z<q.length;z+=1)if("head table"===q[z].name){q[z].value.checkSumAdjustment=2981146554-G,W=!0;break}if(!W)throw new Error("Could not find head table with checkSum to adjust.");return B},computeCheckSum:dt};function yt(e,t){for(var n=0,o=e.length-1;n<=o;){var r=n+o>>>1,a=e[r].tag;if(a===t)return r;a<t?n=r+1:o=r-1}return-n-1}function vt(e,t){for(var n=0,o=e.length-1;n<=o;){var r=n+o>>>1,a=e[r];if(a===t)return r;a<t?n=r+1:o=r-1}return-n-1}function bt(e,t){for(var n,o=0,r=e.length-1;o<=r;){var a=o+r>>>1,i=(n=e[a]).start;if(i===t)return n;i<t?o=a+1:r=a-1}if(o>0)return t>(n=e[o-1]).end?0:n}function xt(e,t){this.font=e,this.tableName=t}function wt(e){xt.call(this,e,"gpos")}function kt(e){xt.call(this,e,"gsub")}function Ct(e,t){var n=e.length;if(n!==t.length)return!1;for(var o=0;o<n;o++)if(e[o]!==t[o])return!1;return!0}function St(e,t,n){for(var o=e.subtables,r=0;r<o.length;r++){var a=o[r];if(a.substFormat===t)return a}if(n)return o.push(n),n}function Tt(e){for(var t=new ArrayBuffer(e.length),n=new Uint8Array(t),o=0;o<e.length;++o)n[o]=e[o];return t}function At(e,t){if(!e)throw t}function Mt(e,t,n,o,r){var a;return(t&o)>0?(a=e.parseByte(),0==(t&r)&&(a=-a),a=n+a):a=(t&r)>0?n:n+e.parseShort(),a}function Ft(e,t,n){var o,r,a=new re.Parser(t,n);if(e.numberOfContours=a.parseShort(),e._xMin=a.parseShort(),e._yMin=a.parseShort(),e._xMax=a.parseShort(),e._yMax=a.parseShort(),e.numberOfContours>0){for(var i=e.endPointIndices=[],s=0;s<e.numberOfContours;s+=1)i.push(a.parseUShort());e.instructionLength=a.parseUShort(),e.instructions=[];for(var l=0;l<e.instructionLength;l+=1)e.instructions.push(a.parseByte());var c=i[i.length-1]+1;o=[];for(var u=0;u<c;u+=1)if(r=a.parseByte(),o.push(r),(8&r)>0)for(var p=a.parseByte(),d=0;d<p;d+=1)o.push(r),u+=1;if(F.argument(o.length===c,"Bad flags."),i.length>0){var h,_=[];if(c>0){for(var g=0;g<c;g+=1)r=o[g],(h={}).onCurve=!!(1&r),h.lastPointOfContour=i.indexOf(g)>=0,_.push(h);for(var f=0,m=0;m<c;m+=1)r=o[m],(h=_[m]).x=Mt(a,r,f,2,16),f=h.x;for(var y=0,v=0;v<c;v+=1)r=o[v],(h=_[v]).y=Mt(a,r,y,4,32),y=h.y}e.points=_}else e.points=[]}else if(0===e.numberOfContours)e.points=[];else{e.isComposite=!0,e.points=[],e.components=[];for(var b=!0;b;){o=a.parseUShort();var x={glyphIndex:a.parseUShort(),xScale:1,scale01:0,scale10:0,yScale:1,dx:0,dy:0};(1&o)>0?(2&o)>0?(x.dx=a.parseShort(),x.dy=a.parseShort()):x.matchedPoints=[a.parseUShort(),a.parseUShort()]:(2&o)>0?(x.dx=a.parseChar(),x.dy=a.parseChar()):x.matchedPoints=[a.parseByte(),a.parseByte()],(8&o)>0?x.xScale=x.yScale=a.parseF2Dot14():(64&o)>0?(x.xScale=a.parseF2Dot14(),x.yScale=a.parseF2Dot14()):(128&o)>0&&(x.xScale=a.parseF2Dot14(),x.scale01=a.parseF2Dot14(),x.scale10=a.parseF2Dot14(),x.yScale=a.parseF2Dot14()),e.components.push(x),b=!!(32&o)}if(256&o){e.instructionLength=a.parseUShort(),e.instructions=[];for(var w=0;w<e.instructionLength;w+=1)e.instructions.push(a.parseByte())}}}function Ot(e,t){for(var n=[],o=0;o<e.length;o+=1){var r=e[o],a={x:t.xScale*r.x+t.scale01*r.y+t.dx,y:t.scale10*r.x+t.yScale*r.y+t.dy,onCurve:r.onCurve,lastPointOfContour:r.lastPointOfContour};n.push(a)}return n}function Pt(e){var t=new T;if(!e)return t;for(var n=function(e){for(var t=[],n=[],o=0;o<e.length;o+=1){var r=e[o];n.push(r),r.lastPointOfContour&&(t.push(n),n=[])}return F.argument(0===n.length,"There are still points left in the current contour."),t}(e),o=0;o<n.length;++o){var r=n[o],a=null,i=r[r.length-1],s=r[0];if(i.onCurve)t.moveTo(i.x,i.y);else if(s.onCurve)t.moveTo(s.x,s.y);else{var l={x:.5*(i.x+s.x),y:.5*(i.y+s.y)};t.moveTo(l.x,l.y)}for(var c=0;c<r.length;++c)if(a=i,i=s,s=r[(c+1)%r.length],i.onCurve)t.lineTo(i.x,i.y);else{var u=s;a.onCurve||{x:.5*(i.x+a.x),y:.5*(i.y+a.y)},s.onCurve||(u={x:.5*(i.x+s.x),y:.5*(i.y+s.y)}),t.quadraticCurveTo(i.x,i.y,u.x,u.y)}t.closePath()}return t}function Rt(e,t){if(t.isComposite)for(var n=0;n<t.components.length;n+=1){var o=t.components[n],r=e.get(o.glyphIndex);if(r.getPath(),r.points){var a=void 0;if(void 0===o.matchedPoints)a=Ot(r.points,o);else{if(o.matchedPoints[0]>t.points.length-1||o.matchedPoints[1]>r.points.length-1)throw Error("Matched points out of range in "+t.name);var i=t.points[o.matchedPoints[0]],s=r.points[o.matchedPoints[1]],l={xScale:o.xScale,scale01:o.scale01,scale10:o.scale10,yScale:o.yScale,dx:0,dy:0};s=Ot([s],l)[0],l.dx=i.x-s.x,l.dy=i.y-s.y,a=Ot(r.points,l)}t.points=t.points.concat(a)}}return Pt(t.points)}xt.prototype={searchTag:yt,binSearch:vt,getTable:function(e){var t=this.font.tables[this.tableName];return!t&&e&&(t=this.font.tables[this.tableName]=this.createDefaultTable()),t},getScriptNames:function(){var e=this.getTable();return e?e.scripts.map((function(e){return e.tag})):[]},getDefaultScriptName:function(){var e=this.getTable();if(e){for(var t=!1,n=0;n<e.scripts.length;n++){var o=e.scripts[n].tag;if("DFLT"===o)return o;"latn"===o&&(t=!0)}return t?"latn":void 0}},getScriptTable:function(e,t){var n=this.getTable(t);if(n){e=e||"DFLT";var o=n.scripts,r=yt(n.scripts,e);if(r>=0)return o[r].script;if(t){var a={tag:e,script:{defaultLangSys:{reserved:0,reqFeatureIndex:65535,featureIndexes:[]},langSysRecords:[]}};return o.splice(-1-r,0,a),a.script}}},getLangSysTable:function(e,t,n){var o=this.getScriptTable(e,n);if(o){if(!t||"dflt"===t||"DFLT"===t)return o.defaultLangSys;var r=yt(o.langSysRecords,t);if(r>=0)return o.langSysRecords[r].langSys;if(n){var a={tag:t,langSys:{reserved:0,reqFeatureIndex:65535,featureIndexes:[]}};return o.langSysRecords.splice(-1-r,0,a),a.langSys}}},getFeatureTable:function(e,t,n,o){var r=this.getLangSysTable(e,t,o);if(r){for(var a,i=r.featureIndexes,s=this.font.tables[this.tableName].features,l=0;l<i.length;l++)if((a=s[i[l]]).tag===n)return a.feature;if(o){var c=s.length;return F.assert(0===c||n>=s[c-1].tag,"Features must be added in alphabetical order."),a={tag:n,feature:{params:0,lookupListIndexes:[]}},s.push(a),i.push(c),a.feature}}},getLookupTables:function(e,t,n,o,r){var a=this.getFeatureTable(e,t,n,r),i=[];if(a){for(var s,l=a.lookupListIndexes,c=this.font.tables[this.tableName].lookups,u=0;u<l.length;u++)(s=c[l[u]]).lookupType===o&&i.push(s);if(0===i.length&&r){s={lookupType:o,lookupFlag:0,subtables:[],markFilteringSet:void 0};var p=c.length;return c.push(s),l.push(p),[s]}}return i},getGlyphClass:function(e,t){switch(e.format){case 1:return e.startGlyph<=t&&t<e.startGlyph+e.classes.length?e.classes[t-e.startGlyph]:0;case 2:var n=bt(e.ranges,t);return n?n.classId:0}},getCoverageIndex:function(e,t){switch(e.format){case 1:var n=vt(e.glyphs,t);return n>=0?n:-1;case 2:var o=bt(e.ranges,t);return o?o.index+t-o.start:-1}},expandCoverage:function(e){if(1===e.format)return e.glyphs;for(var t=[],n=e.ranges,o=0;o<n.length;o++)for(var r=n[o],a=r.start,i=r.end,s=a;s<=i;s++)t.push(s);return t}},wt.prototype=xt.prototype,wt.prototype.init=function(){var e=this.getDefaultScriptName();this.defaultKerningTables=this.getKerningTables(e)},wt.prototype.getKerningValue=function(e,t,n){for(var o=0;o<e.length;o++)for(var r=e[o].subtables,a=0;a<r.length;a++){var i=r[a],s=this.getCoverageIndex(i.coverage,t);if(!(s<0))switch(i.posFormat){case 1:for(var l=i.pairSets[s],c=0;c<l.length;c++){var u=l[c];if(u.secondGlyph===n)return u.value1&&u.value1.xAdvance||0}break;case 2:var p=this.getGlyphClass(i.classDef1,t),d=this.getGlyphClass(i.classDef2,n),h=i.classRecords[p][d];return h.value1&&h.value1.xAdvance||0}}return 0},wt.prototype.getKerningTables=function(e,t){if(this.font.tables.gpos)return this.getLookupTables(e,t,"kern",2)},kt.prototype=xt.prototype,kt.prototype.createDefaultTable=function(){return{version:1,scripts:[{tag:"DFLT",script:{defaultLangSys:{reserved:0,reqFeatureIndex:65535,featureIndexes:[]},langSysRecords:[]}}],features:[],lookups:[]}},kt.prototype.getSingle=function(e,t,n){for(var o=[],r=this.getLookupTables(t,n,e,1),a=0;a<r.length;a++)for(var i=r[a].subtables,s=0;s<i.length;s++){var l=i[s],c=this.expandCoverage(l.coverage),u=void 0;if(1===l.substFormat){var p=l.deltaGlyphId;for(u=0;u<c.length;u++){var d=c[u];o.push({sub:d,by:d+p})}}else{var h=l.substitute;for(u=0;u<c.length;u++)o.push({sub:c[u],by:h[u]})}}return o},kt.prototype.getAlternates=function(e,t,n){for(var o=[],r=this.getLookupTables(t,n,e,3),a=0;a<r.length;a++)for(var i=r[a].subtables,s=0;s<i.length;s++)for(var l=i[s],c=this.expandCoverage(l.coverage),u=l.alternateSets,p=0;p<c.length;p++)o.push({sub:c[p],by:u[p]});return o},kt.prototype.getLigatures=function(e,t,n){for(var o=[],r=this.getLookupTables(t,n,e,4),a=0;a<r.length;a++)for(var i=r[a].subtables,s=0;s<i.length;s++)for(var l=i[s],c=this.expandCoverage(l.coverage),u=l.ligatureSets,p=0;p<c.length;p++)for(var d=c[p],h=u[p],_=0;_<h.length;_++){var g=h[_];o.push({sub:[d].concat(g.components),by:g.ligGlyph})}return o},kt.prototype.addSingle=function(e,t,n,o){var r=St(this.getLookupTables(n,o,e,1,!0)[0],2,{substFormat:2,coverage:{format:1,glyphs:[]},substitute:[]});F.assert(1===r.coverage.format,"Ligature: unable to modify coverage table format "+r.coverage.format);var a=t.sub,i=this.binSearch(r.coverage.glyphs,a);i<0&&(i=-1-i,r.coverage.glyphs.splice(i,0,a),r.substitute.splice(i,0,0)),r.substitute[i]=t.by},kt.prototype.addAlternate=function(e,t,n,o){var r=St(this.getLookupTables(n,o,e,3,!0)[0],1,{substFormat:1,coverage:{format:1,glyphs:[]},alternateSets:[]});F.assert(1===r.coverage.format,"Ligature: unable to modify coverage table format "+r.coverage.format);var a=t.sub,i=this.binSearch(r.coverage.glyphs,a);i<0&&(i=-1-i,r.coverage.glyphs.splice(i,0,a),r.alternateSets.splice(i,0,0)),r.alternateSets[i]=t.by},kt.prototype.addLigature=function(e,t,n,o){var r=this.getLookupTables(n,o,e,4,!0)[0],a=r.subtables[0];a||(a={substFormat:1,coverage:{format:1,glyphs:[]},ligatureSets:[]},r.subtables[0]=a),F.assert(1===a.coverage.format,"Ligature: unable to modify coverage table format "+a.coverage.format);var i=t.sub[0],s=t.sub.slice(1),l={ligGlyph:t.by,components:s},c=this.binSearch(a.coverage.glyphs,i);if(c>=0){for(var u=a.ligatureSets[c],p=0;p<u.length;p++)if(Ct(u[p].components,s))return;u.push(l)}else c=-1-c,a.coverage.glyphs.splice(c,0,i),a.ligatureSets.splice(c,0,[l])},kt.prototype.getFeature=function(e,t,n){if(/ss\d\d/.test(e))return this.getSingle(e,t,n);switch(e){case"aalt":case"salt":return this.getSingle(e,t,n).concat(this.getAlternates(e,t,n));case"dlig":case"liga":case"rlig":return this.getLigatures(e,t,n)}},kt.prototype.add=function(e,t,n,o){if(/ss\d\d/.test(e))return this.addSingle(e,t,n,o);switch(e){case"aalt":case"salt":return"number"==typeof t.by?this.addSingle(e,t,n,o):this.addAlternate(e,t,n,o);case"dlig":case"liga":case"rlig":return this.addLigature(e,t,n,o)}};var Lt,It,Ut,Dt,Et={getPath:Pt,parse:function(e,t,n,o,r){return r.lowMemory?function(e,t,n,o){var r=new be.GlyphSet(o);return o._push=function(a){var i=n[a];i!==n[a+1]?r.push(a,be.ttfGlyphLoader(o,a,Ft,e,t+i,Rt)):r.push(a,be.glyphLoader(o,a))},r}(e,t,n,o):function(e,t,n,o){for(var r=new be.GlyphSet(o),a=0;a<n.length-1;a+=1){var i=n[a];i!==n[a+1]?r.push(a,be.ttfGlyphLoader(o,a,Ft,e,t+i,Rt)):r.push(a,be.glyphLoader(o,a))}return r}(e,t,n,o)}};function Nt(e){this.font=e,this.getCommands=function(e){return Et.getPath(e).commands},this._fpgmState=this._prepState=void 0,this._errorState=0}function Bt(e){return e}function Gt(e){return Math.sign(e)*Math.round(Math.abs(e))}function qt(e){return Math.sign(e)*Math.round(Math.abs(2*e))/2}function Wt(e){return Math.sign(e)*(Math.round(Math.abs(e)+.5)-.5)}function zt(e){return Math.sign(e)*Math.ceil(Math.abs(e))}function Vt(e){return Math.sign(e)*Math.floor(Math.abs(e))}var Ht=function(e){var t=this.srPeriod,n=this.srPhase,o=1;return e<0&&(e=-e,o=-1),e+=this.srThreshold-n,e=Math.trunc(e/t)*t,(e+=n)<0?n*o:e*o},jt={x:1,y:0,axis:"x",distance:function(e,t,n,o){return(n?e.xo:e.x)-(o?t.xo:t.x)},interpolate:function(e,t,n,o){var r,a,i,s,l,c,u;if(!o||o===this)return r=e.xo-t.xo,a=e.xo-n.xo,l=t.x-t.xo,c=n.x-n.xo,0===(u=(i=Math.abs(r))+(s=Math.abs(a)))?void(e.x=e.xo+(l+c)/2):void(e.x=e.xo+(l*s+c*i)/u);r=o.distance(e,t,!0,!0),a=o.distance(e,n,!0,!0),l=o.distance(t,t,!1,!0),c=o.distance(n,n,!1,!0),0!==(u=(i=Math.abs(r))+(s=Math.abs(a)))?jt.setRelative(e,e,(l*s+c*i)/u,o,!0):jt.setRelative(e,e,(l+c)/2,o,!0)},normalSlope:Number.NEGATIVE_INFINITY,setRelative:function(e,t,n,o,r){if(o&&o!==this){var a=r?t.xo:t.x,i=r?t.yo:t.y,s=a+n*o.x,l=i+n*o.y;e.x=s+(e.y-l)/o.normalSlope}else e.x=(r?t.xo:t.x)+n},slope:0,touch:function(e){e.xTouched=!0},touched:function(e){return e.xTouched},untouch:function(e){e.xTouched=!1}},Xt={x:0,y:1,axis:"y",distance:function(e,t,n,o){return(n?e.yo:e.y)-(o?t.yo:t.y)},interpolate:function(e,t,n,o){var r,a,i,s,l,c,u;if(!o||o===this)return r=e.yo-t.yo,a=e.yo-n.yo,l=t.y-t.yo,c=n.y-n.yo,0===(u=(i=Math.abs(r))+(s=Math.abs(a)))?void(e.y=e.yo+(l+c)/2):void(e.y=e.yo+(l*s+c*i)/u);r=o.distance(e,t,!0,!0),a=o.distance(e,n,!0,!0),l=o.distance(t,t,!1,!0),c=o.distance(n,n,!1,!0),0!==(u=(i=Math.abs(r))+(s=Math.abs(a)))?Xt.setRelative(e,e,(l*s+c*i)/u,o,!0):Xt.setRelative(e,e,(l+c)/2,o,!0)},normalSlope:0,setRelative:function(e,t,n,o,r){if(o&&o!==this){var a=r?t.xo:t.x,i=r?t.yo:t.y,s=a+n*o.x,l=i+n*o.y;e.y=l+o.normalSlope*(e.x-s)}else e.y=(r?t.yo:t.y)+n},slope:Number.POSITIVE_INFINITY,touch:function(e){e.yTouched=!0},touched:function(e){return e.yTouched},untouch:function(e){e.yTouched=!1}};function Yt(e,t){this.x=e,this.y=t,this.axis=void 0,this.slope=t/e,this.normalSlope=-e/t,Object.freeze(this)}function Kt(e,t){var n=Math.sqrt(e*e+t*t);return t/=n,1===(e/=n)&&0===t?jt:0===e&&1===t?Xt:new Yt(e,t)}function Zt(e,t,n,o){this.x=this.xo=Math.round(64*e)/64,this.y=this.yo=Math.round(64*t)/64,this.lastPointOfContour=n,this.onCurve=o,this.prevPointOnContour=void 0,this.nextPointOnContour=void 0,this.xTouched=!1,this.yTouched=!1,Object.preventExtensions(this)}Object.freeze(jt),Object.freeze(Xt),Yt.prototype.distance=function(e,t,n,o){return this.x*jt.distance(e,t,n,o)+this.y*Xt.distance(e,t,n,o)},Yt.prototype.interpolate=function(e,t,n,o){var r,a,i,s,l,c,u;i=o.distance(e,t,!0,!0),s=o.distance(e,n,!0,!0),r=o.distance(t,t,!1,!0),a=o.distance(n,n,!1,!0),0!==(u=(l=Math.abs(i))+(c=Math.abs(s)))?this.setRelative(e,e,(r*c+a*l)/u,o,!0):this.setRelative(e,e,(r+a)/2,o,!0)},Yt.prototype.setRelative=function(e,t,n,o,r){o=o||this;var a=r?t.xo:t.x,i=r?t.yo:t.y,s=a+n*o.x,l=i+n*o.y,c=o.normalSlope,u=this.slope,p=e.x,d=e.y;e.x=(u*p-c*s+l-d)/(u-c),e.y=u*(e.x-p)+d},Yt.prototype.touch=function(e){e.xTouched=!0,e.yTouched=!0},Zt.prototype.nextTouched=function(e){for(var t=this.nextPointOnContour;!e.touched(t)&&t!==this;)t=t.nextPointOnContour;return t},Zt.prototype.prevTouched=function(e){for(var t=this.prevPointOnContour;!e.touched(t)&&t!==this;)t=t.prevPointOnContour;return t};var Jt=Object.freeze(new Zt(0,0)),$t={cvCutIn:17/16,deltaBase:9,deltaShift:.125,loop:1,minDis:1,autoFlip:!0};function Qt(e,t){switch(this.env=e,this.stack=[],this.prog=t,e){case"glyf":this.zp0=this.zp1=this.zp2=1,this.rp0=this.rp1=this.rp2=0;case"prep":this.fv=this.pv=this.dpv=jt,this.round=Gt}}function en(e){for(var t=e.tZone=new Array(e.gZone.length),n=0;n<t.length;n++)t[n]=new Zt(0,0)}function tn(e,t){var n,o=e.prog,r=e.ip,a=1;do{if(88===(n=o[++r]))a++;else if(89===n)a--;else if(64===n)r+=o[r+1]+1;else if(65===n)r+=2*o[r+1]+1;else if(n>=176&&n<=183)r+=n-176+1;else if(n>=184&&n<=191)r+=2*(n-184+1);else if(t&&1===a&&27===n)break}while(a>0);e.ip=r}function nn(t,n){e.DEBUG&&console.log(n.step,"SVTCA["+t.axis+"]"),n.fv=n.pv=n.dpv=t}function on(t,n){e.DEBUG&&console.log(n.step,"SPVTCA["+t.axis+"]"),n.pv=n.dpv=t}function rn(t,n){e.DEBUG&&console.log(n.step,"SFVTCA["+t.axis+"]"),n.fv=t}function an(t,n){var o,r,a=n.stack,i=a.pop(),s=a.pop(),l=n.z2[i],c=n.z1[s];e.DEBUG&&console.log("SPVTL["+t+"]",i,s),t?(o=l.y-c.y,r=c.x-l.x):(o=c.x-l.x,r=c.y-l.y),n.pv=n.dpv=Kt(o,r)}function sn(t,n){var o,r,a=n.stack,i=a.pop(),s=a.pop(),l=n.z2[i],c=n.z1[s];e.DEBUG&&console.log("SFVTL["+t+"]",i,s),t?(o=l.y-c.y,r=c.x-l.x):(o=c.x-l.x,r=c.y-l.y),n.fv=Kt(o,r)}function ln(t){e.DEBUG&&console.log(t.step,"POP[]"),t.stack.pop()}function cn(t,n){var o=n.stack.pop(),r=n.z0[o],a=n.fv,i=n.pv;e.DEBUG&&console.log(n.step,"MDAP["+t+"]",o);var s=i.distance(r,Jt);t&&(s=n.round(s)),a.setRelative(r,Jt,s,i),a.touch(r),n.rp0=n.rp1=o}function un(t,n){var o,r,a,i=n.z2,s=i.length-2;e.DEBUG&&console.log(n.step,"IUP["+t.axis+"]");for(var l=0;l<s;l++)o=i[l],t.touched(o)||(r=o.prevTouched(t))!==o&&(r===(a=o.nextTouched(t))&&t.setRelative(o,o,t.distance(r,r,!1,!0),t,!0),t.interpolate(o,r,a,t))}function pn(t,n){for(var o=n.stack,r=t?n.rp1:n.rp2,a=(t?n.z0:n.z1)[r],i=n.fv,s=n.pv,l=n.loop,c=n.z2;l--;){var u=o.pop(),p=c[u],d=s.distance(a,a,!1,!0);i.setRelative(p,p,d,s),i.touch(p),e.DEBUG&&console.log(n.step,(n.loop>1?"loop "+(n.loop-l)+": ":"")+"SHP["+(t?"rp1":"rp2")+"]",u)}n.loop=1}function dn(t,n){var o=n.stack,r=t?n.rp1:n.rp2,a=(t?n.z0:n.z1)[r],i=n.fv,s=n.pv,l=o.pop(),c=n.z2[n.contours[l]],u=c;e.DEBUG&&console.log(n.step,"SHC["+t+"]",l);var p=s.distance(a,a,!1,!0);do{u!==a&&i.setRelative(u,u,p,s),u=u.nextPointOnContour}while(u!==c)}function hn(t,n){var o,r,a=n.stack,i=t?n.rp1:n.rp2,s=(t?n.z0:n.z1)[i],l=n.fv,c=n.pv,u=a.pop();switch(e.DEBUG&&console.log(n.step,"SHZ["+t+"]",u),u){case 0:o=n.tZone;break;case 1:o=n.gZone;break;default:throw new Error("Invalid zone")}for(var p=c.distance(s,s,!1,!0),d=o.length-2,h=0;h<d;h++)r=o[h],l.setRelative(r,r,p,c)}function _n(t,n){var o=n.stack,r=o.pop()/64,a=o.pop(),i=n.z1[a],s=n.z0[n.rp0],l=n.fv,c=n.pv;l.setRelative(i,s,r,c),l.touch(i),e.DEBUG&&console.log(n.step,"MSIRP["+t+"]",r,a),n.rp1=n.rp0,n.rp2=a,t&&(n.rp0=a)}function gn(t,n){var o=n.stack,r=o.pop(),a=o.pop(),i=n.z0[a],s=n.fv,l=n.pv,c=n.cvt[r];e.DEBUG&&console.log(n.step,"MIAP["+t+"]",r,"(",c,")",a);var u=l.distance(i,Jt);t&&(Math.abs(u-c)<n.cvCutIn&&(u=c),u=n.round(u)),s.setRelative(i,Jt,u,l),0===n.zp0&&(i.xo=i.x,i.yo=i.y),s.touch(i),n.rp0=n.rp1=a}function fn(t,n){var o=n.stack,r=o.pop(),a=n.z2[r];e.DEBUG&&console.log(n.step,"GC["+t+"]",r),o.push(64*n.dpv.distance(a,Jt,t,!1))}function mn(t,n){var o=n.stack,r=o.pop(),a=o.pop(),i=n.z1[r],s=n.z0[a],l=n.dpv.distance(s,i,t,t);e.DEBUG&&console.log(n.step,"MD["+t+"]",r,a,"->",l),n.stack.push(Math.round(64*l))}function yn(t,n){var o=n.stack,r=o.pop(),a=n.fv,i=n.pv,s=n.ppem,l=n.deltaBase+16*(t-1),c=n.deltaShift,u=n.z0;e.DEBUG&&console.log(n.step,"DELTAP["+t+"]",r,o);for(var p=0;p<r;p++){var d=o.pop(),h=o.pop();if(l+((240&h)>>4)===s){var _=(15&h)-8;_>=0&&_++,e.DEBUG&&console.log(n.step,"DELTAPFIX",d,"by",_*c);var g=u[d];a.setRelative(g,g,_*c,i)}}}function vn(t,n){var o=n.stack,r=o.pop();e.DEBUG&&console.log(n.step,"ROUND[]"),o.push(64*n.round(r/64))}function bn(t,n){var o=n.stack,r=o.pop(),a=n.ppem,i=n.deltaBase+16*(t-1),s=n.deltaShift;e.DEBUG&&console.log(n.step,"DELTAC["+t+"]",r,o);for(var l=0;l<r;l++){var c=o.pop(),u=o.pop();if(i+((240&u)>>4)===a){var p=(15&u)-8;p>=0&&p++;var d=p*s;e.DEBUG&&console.log(n.step,"DELTACFIX",c,"by",d),n.cvt[c]+=d}}}function xn(t,n){var o,r,a=n.stack,i=a.pop(),s=a.pop(),l=n.z2[i],c=n.z1[s];e.DEBUG&&console.log(n.step,"SDPVTL["+t+"]",i,s),t?(o=l.y-c.y,r=c.x-l.x):(o=c.x-l.x,r=c.y-l.y),n.dpv=Kt(o,r)}function wn(t,n){var o=n.stack,r=n.prog,a=n.ip;e.DEBUG&&console.log(n.step,"PUSHB["+t+"]");for(var i=0;i<t;i++)o.push(r[++a]);n.ip=a}function kn(t,n){var o=n.ip,r=n.prog,a=n.stack;e.DEBUG&&console.log(n.ip,"PUSHW["+t+"]");for(var i=0;i<t;i++){var s=r[++o]<<8|r[++o];32768&s&&(s=-(1+(65535^s))),a.push(s)}n.ip=o}function Cn(t,n,o,r,a,i){var s,l,c,u,p=i.stack,d=t&&p.pop(),h=p.pop(),_=i.rp0,g=i.z0[_],f=i.z1[h],m=i.minDis,y=i.fv,v=i.dpv;c=(l=s=v.distance(f,g,!0,!0))>=0?1:-1,l=Math.abs(l),t&&(u=i.cvt[d],r&&Math.abs(l-u)<i.cvCutIn&&(l=u)),o&&l<m&&(l=m),r&&(l=i.round(l)),y.setRelative(f,g,c*l,v),y.touch(f),e.DEBUG&&console.log(i.step,(t?"MIRP[":"MDRP[")+(n?"M":"m")+(o?">":"_")+(r?"R":"_")+(0===a?"Gr":1===a?"Bl":2===a?"Wh":"")+"]",t?d+"("+i.cvt[d]+","+u+")":"",h,"(d =",s,"->",c*l,")"),i.rp1=i.rp0,i.rp2=h,n&&(i.rp0=h)}function Sn(e){this.char=e,this.state={},this.activeState=null}function Tn(e,t,n){this.contextName=n,this.startIndex=e,this.endOffset=t}function An(e,t,n){this.contextName=e,this.openRange=null,this.ranges=[],this.checkStart=t,this.checkEnd=n}function Mn(e,t){this.context=e,this.index=t,this.length=e.length,this.current=e[t],this.backtrack=e.slice(0,t),this.lookahead=e.slice(t+1)}function Fn(e){this.eventId=e,this.subscribers=[]}function On(e){var t=this,n=["start","end","next","newToken","contextStart","contextEnd","insertToken","removeToken","removeRange","replaceToken","replaceRange","composeRUD","updateContextsRanges"];n.forEach((function(e){Object.defineProperty(t.events,e,{value:new Fn(e)})})),e&&n.forEach((function(n){var o=e[n];"function"==typeof o&&t.events[n].subscribe(o)}));["insertToken","removeToken","removeRange","replaceToken","replaceRange","composeRUD"].forEach((function(e){t.events[e].subscribe(t.updateContextsRanges)}))}function Pn(e){this.tokens=[],this.registeredContexts={},this.contextCheckers=[],this.events={},this.registeredModifiers=[],On.call(this,e)}function Rn(e){return/[\u0600-\u065F\u066A-\u06D2\u06FA-\u06FF]/.test(e)}function Ln(e){return/[\u0630\u0690\u0621\u0631\u0661\u0671\u0622\u0632\u0672\u0692\u06C2\u0623\u0673\u0693\u06C3\u0624\u0694\u06C4\u0625\u0675\u0695\u06C5\u06E5\u0676\u0696\u06C6\u0627\u0677\u0697\u06C7\u0648\u0688\u0698\u06C8\u0689\u0699\u06C9\u068A\u06CA\u066B\u068B\u06CB\u068C\u068D\u06CD\u06FD\u068E\u06EE\u06FE\u062F\u068F\u06CF\u06EF]/.test(e)}function In(e){return/[\u0600-\u0605\u060C-\u060E\u0610-\u061B\u061E\u064B-\u065F\u0670\u06D6-\u06DC\u06DF-\u06E4\u06E7\u06E8\u06EA-\u06ED]/.test(e)}function Un(e){return/[A-z]/.test(e)}function Dn(e){this.font=e,this.features={}}function En(e){this.id=e.id,this.tag=e.tag,this.substitution=e.substitution}function Nn(e,t){if(!e)return-1;switch(t.format){case 1:return t.glyphs.indexOf(e);case 2:for(var n=t.ranges,o=0;o<n.length;o++){var r=n[o];if(e>=r.start&&e<=r.end){var a=e-r.start;return r.index+a}}break;default:return-1}return-1}function Bn(e,t){return-1===Nn(e,t.coverage)?null:e+t.deltaGlyphId}function Gn(e,t){var n=Nn(e,t.coverage);return-1===n?null:t.substitute[n]}function qn(e,t){for(var n=[],o=0;o<e.length;o++){var r=e[o],a=t.current,i=Nn(a=Array.isArray(a)?a[0]:a,r);-1!==i&&n.push(i)}return n.length!==e.length?-1:n}function Wn(e,t){var n=t.inputCoverage.length+t.lookaheadCoverage.length+t.backtrackCoverage.length;if(e.context.length<n)return[];var o=qn(t.inputCoverage,e);if(-1===o)return[];var r=t.inputCoverage.length-1;if(e.lookahead.length<t.lookaheadCoverage.length)return[];for(var a=e.lookahead.slice(r);a.length&&In(a[0].char);)a.shift();var i=new Mn(a,0),s=qn(t.lookaheadCoverage,i),l=[].concat(e.backtrack);for(l.reverse();l.length&&In(l[0].char);)l.shift();if(l.length<t.backtrackCoverage.length)return[];var c=new Mn(l,0),u=qn(t.backtrackCoverage,c),p=[];if(o.length===t.inputCoverage.length&&s.length===t.lookaheadCoverage.length&&u.length===t.backtrackCoverage.length)for(var d=0;d<t.lookupRecords.length;d++)for(var h=t.lookupRecords[d].lookupListIndex,_=this.getLookupByIndex(h),g=0;g<_.subtables.length;g++){var f=_.subtables[g],m=this.getLookupMethod(_,f);if("12"===this.getSubstitutionType(_,f))for(var y=0;y<o.length;y++){var v=m(e.get(y));v&&p.push(v)}}return p}function zn(e,t){var n,o=Nn(e.current,t.coverage);if(-1===o)return null;for(var r=t.ligatureSets[o],a=0;a<r.length;a++){n=r[a];for(var i=0;i<n.components.length;i++){if(e.lookahead[i]!==n.components[i])break;if(i===n.components.length-1)return n}}return null}function Vn(e,t){var n=Nn(e,t.coverage);return-1===n?null:t.sequences[n]}Nt.prototype.exec=function(t,n){if("number"!=typeof n)throw new Error("Point size is not a number!");if(!(this._errorState>2)){var o=this.font,r=this._prepState;if(!r||r.ppem!==n){var a=this._fpgmState;if(!a){Qt.prototype=$t,(a=this._fpgmState=new Qt("fpgm",o.tables.fpgm)).funcs=[],a.font=o,e.DEBUG&&(console.log("---EXEC FPGM---"),a.step=-1);try{It(a)}catch(e){return console.log("Hinting error in FPGM:"+e),void(this._errorState=3)}}Qt.prototype=a,(r=this._prepState=new Qt("prep",o.tables.prep)).ppem=n;var i=o.tables.cvt;if(i)for(var s=r.cvt=new Array(i.length),l=n/o.unitsPerEm,c=0;c<i.length;c++)s[c]=i[c]*l;else r.cvt=[];e.DEBUG&&(console.log("---EXEC PREP---"),r.step=-1);try{It(r)}catch(e){this._errorState<2&&console.log("Hinting error in PREP:"+e),this._errorState=2}}if(!(this._errorState>1))try{return Ut(t,r)}catch(e){return this._errorState<1&&(console.log("Hinting error:"+e),console.log("Note: further hinting errors are silenced")),void(this._errorState=1)}}},Ut=function(t,n){var o,r,a,i=n.ppem/n.font.unitsPerEm,s=i,l=t.components;if(Qt.prototype=n,l){var c=n.font;r=[],o=[];for(var u=0;u<l.length;u++){var p=l[u],d=c.glyphs.get(p.glyphIndex);a=new Qt("glyf",d.instructions),e.DEBUG&&(console.log("---EXEC COMP "+u+"---"),a.step=-1),Dt(d,a,i,s);for(var h=Math.round(p.dx*i),_=Math.round(p.dy*s),g=a.gZone,f=a.contours,m=0;m<g.length;m++){var y=g[m];y.xTouched=y.yTouched=!1,y.xo=y.x=y.x+h,y.yo=y.y=y.y+_}var v=r.length;r.push.apply(r,g);for(var b=0;b<f.length;b++)o.push(f[b]+v)}t.instructions&&!a.inhibitGridFit&&((a=new Qt("glyf",t.instructions)).gZone=a.z0=a.z1=a.z2=r,a.contours=o,r.push(new Zt(0,0),new Zt(Math.round(t.advanceWidth*i),0)),e.DEBUG&&(console.log("---EXEC COMPOSITE---"),a.step=-1),It(a),r.length-=2)}else a=new Qt("glyf",t.instructions),e.DEBUG&&(console.log("---EXEC GLYPH---"),a.step=-1),Dt(t,a,i,s),r=a.gZone;return r},Dt=function(t,n,o,r){for(var a,i,s,l=t.points||[],c=l.length,u=n.gZone=n.z0=n.z1=n.z2=[],p=n.contours=[],d=0;d<c;d++)a=l[d],u[d]=new Zt(a.x*o,a.y*r,a.lastPointOfContour,a.onCurve);for(var h=0;h<c;h++)a=u[h],i||(i=a,p.push(h)),a.lastPointOfContour?(a.nextPointOnContour=i,i.prevPointOnContour=a,i=void 0):(s=u[h+1],a.nextPointOnContour=s,s.prevPointOnContour=a);if(!n.inhibitGridFit){if(e.DEBUG){console.log("PROCESSING GLYPH",n.stack);for(var _=0;_<c;_++)console.log(_,u[_].x,u[_].y)}if(u.push(new Zt(0,0),new Zt(Math.round(t.advanceWidth*o),0)),It(n),u.length-=2,e.DEBUG){console.log("FINISHED GLYPH",n.stack);for(var g=0;g<c;g++)console.log(g,u[g].x,u[g].y)}}},It=function(t){var n=t.prog;if(n){var o,r=n.length;for(t.ip=0;t.ip<r;t.ip++){if(e.DEBUG&&t.step++,!(o=Lt[n[t.ip]]))throw new Error("unknown instruction: 0x"+Number(n[t.ip]).toString(16));o(t)}}},Lt=[nn.bind(void 0,Xt),nn.bind(void 0,jt),on.bind(void 0,Xt),on.bind(void 0,jt),rn.bind(void 0,Xt),rn.bind(void 0,jt),an.bind(void 0,0),an.bind(void 0,1),sn.bind(void 0,0),sn.bind(void 0,1),function(t){var n=t.stack,o=n.pop(),r=n.pop();e.DEBUG&&console.log(t.step,"SPVFS[]",o,r),t.pv=t.dpv=Kt(r,o)},function(t){var n=t.stack,o=n.pop(),r=n.pop();e.DEBUG&&console.log(t.step,"SPVFS[]",o,r),t.fv=Kt(r,o)},function(t){var n=t.stack,o=t.pv;e.DEBUG&&console.log(t.step,"GPV[]"),n.push(16384*o.x),n.push(16384*o.y)},function(t){var n=t.stack,o=t.fv;e.DEBUG&&console.log(t.step,"GFV[]"),n.push(16384*o.x),n.push(16384*o.y)},function(t){t.fv=t.pv,e.DEBUG&&console.log(t.step,"SFVTPV[]")},function(t){var n=t.stack,o=n.pop(),r=n.pop(),a=n.pop(),i=n.pop(),s=n.pop(),l=t.z0,c=t.z1,u=l[o],p=l[r],d=c[a],h=c[i],_=t.z2[s];e.DEBUG&&console.log("ISECT[], ",o,r,a,i,s);var g=u.x,f=u.y,m=p.x,y=p.y,v=d.x,b=d.y,x=h.x,w=h.y,k=(g-m)*(b-w)-(f-y)*(v-x),C=g*y-f*m,S=v*w-b*x;_.x=(C*(v-x)-S*(g-m))/k,_.y=(C*(b-w)-S*(f-y))/k},function(t){t.rp0=t.stack.pop(),e.DEBUG&&console.log(t.step,"SRP0[]",t.rp0)},function(t){t.rp1=t.stack.pop(),e.DEBUG&&console.log(t.step,"SRP1[]",t.rp1)},function(t){t.rp2=t.stack.pop(),e.DEBUG&&console.log(t.step,"SRP2[]",t.rp2)},function(t){var n=t.stack.pop();switch(e.DEBUG&&console.log(t.step,"SZP0[]",n),t.zp0=n,n){case 0:t.tZone||en(t),t.z0=t.tZone;break;case 1:t.z0=t.gZone;break;default:throw new Error("Invalid zone pointer")}},function(t){var n=t.stack.pop();switch(e.DEBUG&&console.log(t.step,"SZP1[]",n),t.zp1=n,n){case 0:t.tZone||en(t),t.z1=t.tZone;break;case 1:t.z1=t.gZone;break;default:throw new Error("Invalid zone pointer")}},function(t){var n=t.stack.pop();switch(e.DEBUG&&console.log(t.step,"SZP2[]",n),t.zp2=n,n){case 0:t.tZone||en(t),t.z2=t.tZone;break;case 1:t.z2=t.gZone;break;default:throw new Error("Invalid zone pointer")}},function(t){var n=t.stack.pop();switch(e.DEBUG&&console.log(t.step,"SZPS[]",n),t.zp0=t.zp1=t.zp2=n,n){case 0:t.tZone||en(t),t.z0=t.z1=t.z2=t.tZone;break;case 1:t.z0=t.z1=t.z2=t.gZone;break;default:throw new Error("Invalid zone pointer")}},function(t){t.loop=t.stack.pop(),e.DEBUG&&console.log(t.step,"SLOOP[]",t.loop)},function(t){e.DEBUG&&console.log(t.step,"RTG[]"),t.round=Gt},function(t){e.DEBUG&&console.log(t.step,"RTHG[]"),t.round=Wt},function(t){var n=t.stack.pop();e.DEBUG&&console.log(t.step,"SMD[]",n),t.minDis=n/64},function(t){e.DEBUG&&console.log(t.step,"ELSE[]"),tn(t,!1)},function(t){var n=t.stack.pop();e.DEBUG&&console.log(t.step,"JMPR[]",n),t.ip+=n-1},function(t){var n=t.stack.pop();e.DEBUG&&console.log(t.step,"SCVTCI[]",n),t.cvCutIn=n/64},void 0,void 0,function(t){var n=t.stack;e.DEBUG&&console.log(t.step,"DUP[]"),n.push(n[n.length-1])},ln,function(t){e.DEBUG&&console.log(t.step,"CLEAR[]"),t.stack.length=0},function(t){var n=t.stack,o=n.pop(),r=n.pop();e.DEBUG&&console.log(t.step,"SWAP[]"),n.push(o),n.push(r)},function(t){var n=t.stack;e.DEBUG&&console.log(t.step,"DEPTH[]"),n.push(n.length)},function(t){var n=t.stack,o=n.pop();e.DEBUG&&console.log(t.step,"CINDEX[]",o),n.push(n[n.length-o])},function(t){var n=t.stack,o=n.pop();e.DEBUG&&console.log(t.step,"MINDEX[]",o),n.push(n.splice(n.length-o,1)[0])},void 0,void 0,void 0,function(t){var n=t.stack,o=n.pop(),r=n.pop();e.DEBUG&&console.log(t.step,"LOOPCALL[]",o,r);var a=t.ip,i=t.prog;t.prog=t.funcs[o];for(var s=0;s<r;s++)It(t),e.DEBUG&&console.log(++t.step,s+1<r?"next loopcall":"done loopcall",s);t.ip=a,t.prog=i},function(t){var n=t.stack.pop();e.DEBUG&&console.log(t.step,"CALL[]",n);var o=t.ip,r=t.prog;t.prog=t.funcs[n],It(t),t.ip=o,t.prog=r,e.DEBUG&&console.log(++t.step,"returning from",n)},function(t){if("fpgm"!==t.env)throw new Error("FDEF not allowed here");var n=t.stack,o=t.prog,r=t.ip,a=n.pop(),i=r;for(e.DEBUG&&console.log(t.step,"FDEF[]",a);45!==o[++r];);t.ip=r,t.funcs[a]=o.slice(i+1,r)},void 0,cn.bind(void 0,0),cn.bind(void 0,1),un.bind(void 0,Xt),un.bind(void 0,jt),pn.bind(void 0,0),pn.bind(void 0,1),dn.bind(void 0,0),dn.bind(void 0,1),hn.bind(void 0,0),hn.bind(void 0,1),function(t){for(var n=t.stack,o=t.loop,r=t.fv,a=n.pop()/64,i=t.z2;o--;){var s=n.pop(),l=i[s];e.DEBUG&&console.log(t.step,(t.loop>1?"loop "+(t.loop-o)+": ":"")+"SHPIX[]",s,a),r.setRelative(l,l,a),r.touch(l)}t.loop=1},function(t){for(var n=t.stack,o=t.rp1,r=t.rp2,a=t.loop,i=t.z0[o],s=t.z1[r],l=t.fv,c=t.dpv,u=t.z2;a--;){var p=n.pop(),d=u[p];e.DEBUG&&console.log(t.step,(t.loop>1?"loop "+(t.loop-a)+": ":"")+"IP[]",p,o,"<->",r),l.interpolate(d,i,s,c),l.touch(d)}t.loop=1},_n.bind(void 0,0),_n.bind(void 0,1),function(t){for(var n=t.stack,o=t.rp0,r=t.z0[o],a=t.loop,i=t.fv,s=t.pv,l=t.z1;a--;){var c=n.pop(),u=l[c];e.DEBUG&&console.log(t.step,(t.loop>1?"loop "+(t.loop-a)+": ":"")+"ALIGNRP[]",c),i.setRelative(u,r,0,s),i.touch(u)}t.loop=1},function(t){e.DEBUG&&console.log(t.step,"RTDG[]"),t.round=qt},gn.bind(void 0,0),gn.bind(void 0,1),function(t){var n=t.prog,o=t.ip,r=t.stack,a=n[++o];e.DEBUG&&console.log(t.step,"NPUSHB[]",a);for(var i=0;i<a;i++)r.push(n[++o]);t.ip=o},function(t){var n=t.ip,o=t.prog,r=t.stack,a=o[++n];e.DEBUG&&console.log(t.step,"NPUSHW[]",a);for(var i=0;i<a;i++){var s=o[++n]<<8|o[++n];32768&s&&(s=-(1+(65535^s))),r.push(s)}t.ip=n},function(t){var n=t.stack,o=t.store;o||(o=t.store=[]);var r=n.pop(),a=n.pop();e.DEBUG&&console.log(t.step,"WS",r,a),o[a]=r},function(t){var n=t.stack,o=t.store,r=n.pop();e.DEBUG&&console.log(t.step,"RS",r);var a=o&&o[r]||0;n.push(a)},function(t){var n=t.stack,o=n.pop(),r=n.pop();e.DEBUG&&console.log(t.step,"WCVTP",o,r),t.cvt[r]=o/64},function(t){var n=t.stack,o=n.pop();e.DEBUG&&console.log(t.step,"RCVT",o),n.push(64*t.cvt[o])},fn.bind(void 0,0),fn.bind(void 0,1),void 0,mn.bind(void 0,0),mn.bind(void 0,1),function(t){e.DEBUG&&console.log(t.step,"MPPEM[]"),t.stack.push(t.ppem)},void 0,function(t){e.DEBUG&&console.log(t.step,"FLIPON[]"),t.autoFlip=!0},void 0,void 0,function(t){var n=t.stack,o=n.pop(),r=n.pop();e.DEBUG&&console.log(t.step,"LT[]",o,r),n.push(r<o?1:0)},function(t){var n=t.stack,o=n.pop(),r=n.pop();e.DEBUG&&console.log(t.step,"LTEQ[]",o,r),n.push(r<=o?1:0)},function(t){var n=t.stack,o=n.pop(),r=n.pop();e.DEBUG&&console.log(t.step,"GT[]",o,r),n.push(r>o?1:0)},function(t){var n=t.stack,o=n.pop(),r=n.pop();e.DEBUG&&console.log(t.step,"GTEQ[]",o,r),n.push(r>=o?1:0)},function(t){var n=t.stack,o=n.pop(),r=n.pop();e.DEBUG&&console.log(t.step,"EQ[]",o,r),n.push(o===r?1:0)},function(t){var n=t.stack,o=n.pop(),r=n.pop();e.DEBUG&&console.log(t.step,"NEQ[]",o,r),n.push(o!==r?1:0)},function(t){var n=t.stack,o=n.pop();e.DEBUG&&console.log(t.step,"ODD[]",o),n.push(Math.trunc(o)%2?1:0)},function(t){var n=t.stack,o=n.pop();e.DEBUG&&console.log(t.step,"EVEN[]",o),n.push(Math.trunc(o)%2?0:1)},function(t){var n=t.stack.pop();e.DEBUG&&console.log(t.step,"IF[]",n),n||(tn(t,!0),e.DEBUG&&console.log(t.step,"EIF[]"))},function(t){e.DEBUG&&console.log(t.step,"EIF[]")},function(t){var n=t.stack,o=n.pop(),r=n.pop();e.DEBUG&&console.log(t.step,"AND[]",o,r),n.push(o&&r?1:0)},function(t){var n=t.stack,o=n.pop(),r=n.pop();e.DEBUG&&console.log(t.step,"OR[]",o,r),n.push(o||r?1:0)},function(t){var n=t.stack,o=n.pop();e.DEBUG&&console.log(t.step,"NOT[]",o),n.push(o?0:1)},yn.bind(void 0,1),function(t){var n=t.stack.pop();e.DEBUG&&console.log(t.step,"SDB[]",n),t.deltaBase=n},function(t){var n=t.stack.pop();e.DEBUG&&console.log(t.step,"SDS[]",n),t.deltaShift=Math.pow(.5,n)},function(t){var n=t.stack,o=n.pop(),r=n.pop();e.DEBUG&&console.log(t.step,"ADD[]",o,r),n.push(r+o)},function(t){var n=t.stack,o=n.pop(),r=n.pop();e.DEBUG&&console.log(t.step,"SUB[]",o,r),n.push(r-o)},function(t){var n=t.stack,o=n.pop(),r=n.pop();e.DEBUG&&console.log(t.step,"DIV[]",o,r),n.push(64*r/o)},function(t){var n=t.stack,o=n.pop(),r=n.pop();e.DEBUG&&console.log(t.step,"MUL[]",o,r),n.push(r*o/64)},function(t){var n=t.stack,o=n.pop();e.DEBUG&&console.log(t.step,"ABS[]",o),n.push(Math.abs(o))},function(t){var n=t.stack,o=n.pop();e.DEBUG&&console.log(t.step,"NEG[]",o),n.push(-o)},function(t){var n=t.stack,o=n.pop();e.DEBUG&&console.log(t.step,"FLOOR[]",o),n.push(64*Math.floor(o/64))},function(t){var n=t.stack,o=n.pop();e.DEBUG&&console.log(t.step,"CEILING[]",o),n.push(64*Math.ceil(o/64))},vn.bind(void 0,0),vn.bind(void 0,1),vn.bind(void 0,2),vn.bind(void 0,3),void 0,void 0,void 0,void 0,function(t){var n=t.stack,o=n.pop(),r=n.pop();e.DEBUG&&console.log(t.step,"WCVTF[]",o,r),t.cvt[r]=o*t.ppem/t.font.unitsPerEm},yn.bind(void 0,2),yn.bind(void 0,3),bn.bind(void 0,1),bn.bind(void 0,2),bn.bind(void 0,3),function(t){var n,o=t.stack.pop();switch(e.DEBUG&&console.log(t.step,"SROUND[]",o),t.round=Ht,192&o){case 0:n=.5;break;case 64:n=1;break;case 128:n=2;break;default:throw new Error("invalid SROUND value")}switch(t.srPeriod=n,48&o){case 0:t.srPhase=0;break;case 16:t.srPhase=.25*n;break;case 32:t.srPhase=.5*n;break;case 48:t.srPhase=.75*n;break;default:throw new Error("invalid SROUND value")}o&=15,t.srThreshold=0===o?0:(o/8-.5)*n},function(t){var n,o=t.stack.pop();switch(e.DEBUG&&console.log(t.step,"S45ROUND[]",o),t.round=Ht,192&o){case 0:n=Math.sqrt(2)/2;break;case 64:n=Math.sqrt(2);break;case 128:n=2*Math.sqrt(2);break;default:throw new Error("invalid S45ROUND value")}switch(t.srPeriod=n,48&o){case 0:t.srPhase=0;break;case 16:t.srPhase=.25*n;break;case 32:t.srPhase=.5*n;break;case 48:t.srPhase=.75*n;break;default:throw new Error("invalid S45ROUND value")}o&=15,t.srThreshold=0===o?0:(o/8-.5)*n},void 0,void 0,function(t){e.DEBUG&&console.log(t.step,"ROFF[]"),t.round=Bt},void 0,function(t){e.DEBUG&&console.log(t.step,"RUTG[]"),t.round=zt},function(t){e.DEBUG&&console.log(t.step,"RDTG[]"),t.round=Vt},ln,ln,void 0,void 0,void 0,void 0,void 0,function(t){var n=t.stack.pop();e.DEBUG&&console.log(t.step,"SCANCTRL[]",n)},xn.bind(void 0,0),xn.bind(void 0,1),function(t){var n=t.stack,o=n.pop(),r=0;e.DEBUG&&console.log(t.step,"GETINFO[]",o),1&o&&(r=35),32&o&&(r|=4096),n.push(r)},void 0,function(t){var n=t.stack,o=n.pop(),r=n.pop(),a=n.pop();e.DEBUG&&console.log(t.step,"ROLL[]"),n.push(r),n.push(o),n.push(a)},function(t){var n=t.stack,o=n.pop(),r=n.pop();e.DEBUG&&console.log(t.step,"MAX[]",o,r),n.push(Math.max(r,o))},function(t){var n=t.stack,o=n.pop(),r=n.pop();e.DEBUG&&console.log(t.step,"MIN[]",o,r),n.push(Math.min(r,o))},function(t){var n=t.stack.pop();e.DEBUG&&console.log(t.step,"SCANTYPE[]",n)},function(t){var n=t.stack.pop(),o=t.stack.pop();switch(e.DEBUG&&console.log(t.step,"INSTCTRL[]",n,o),n){case 1:return void(t.inhibitGridFit=!!o);case 2:return void(t.ignoreCvt=!!o);default:throw new Error("invalid INSTCTRL[] selector")}},void 0,void 0,void 0,void 0,void 0,void 0,void 0,void 0,void 0,void 0,void 0,void 0,void 0,void 0,void 0,void 0,void 0,void 0,void 0,void 0,void 0,void 0,void 0,void 0,void 0,void 0,void 0,void 0,void 0,void 0,void 0,void 0,void 0,wn.bind(void 0,1),wn.bind(void 0,2),wn.bind(void 0,3),wn.bind(void 0,4),wn.bind(void 0,5),wn.bind(void 0,6),wn.bind(void 0,7),wn.bind(void 0,8),kn.bind(void 0,1),kn.bind(void 0,2),kn.bind(void 0,3),kn.bind(void 0,4),kn.bind(void 0,5),kn.bind(void 0,6),kn.bind(void 0,7),kn.bind(void 0,8),Cn.bind(void 0,0,0,0,0,0),Cn.bind(void 0,0,0,0,0,1),Cn.bind(void 0,0,0,0,0,2),Cn.bind(void 0,0,0,0,0,3),Cn.bind(void 0,0,0,0,1,0),Cn.bind(void 0,0,0,0,1,1),Cn.bind(void 0,0,0,0,1,2),Cn.bind(void 0,0,0,0,1,3),Cn.bind(void 0,0,0,1,0,0),Cn.bind(void 0,0,0,1,0,1),Cn.bind(void 0,0,0,1,0,2),Cn.bind(void 0,0,0,1,0,3),Cn.bind(void 0,0,0,1,1,0),Cn.bind(void 0,0,0,1,1,1),Cn.bind(void 0,0,0,1,1,2),Cn.bind(void 0,0,0,1,1,3),Cn.bind(void 0,0,1,0,0,0),Cn.bind(void 0,0,1,0,0,1),Cn.bind(void 0,0,1,0,0,2),Cn.bind(void 0,0,1,0,0,3),Cn.bind(void 0,0,1,0,1,0),Cn.bind(void 0,0,1,0,1,1),Cn.bind(void 0,0,1,0,1,2),Cn.bind(void 0,0,1,0,1,3),Cn.bind(void 0,0,1,1,0,0),Cn.bind(void 0,0,1,1,0,1),Cn.bind(void 0,0,1,1,0,2),Cn.bind(void 0,0,1,1,0,3),Cn.bind(void 0,0,1,1,1,0),Cn.bind(void 0,0,1,1,1,1),Cn.bind(void 0,0,1,1,1,2),Cn.bind(void 0,0,1,1,1,3),Cn.bind(void 0,1,0,0,0,0),Cn.bind(void 0,1,0,0,0,1),Cn.bind(void 0,1,0,0,0,2),Cn.bind(void 0,1,0,0,0,3),Cn.bind(void 0,1,0,0,1,0),Cn.bind(void 0,1,0,0,1,1),Cn.bind(void 0,1,0,0,1,2),Cn.bind(void 0,1,0,0,1,3),Cn.bind(void 0,1,0,1,0,0),Cn.bind(void 0,1,0,1,0,1),Cn.bind(void 0,1,0,1,0,2),Cn.bind(void 0,1,0,1,0,3),Cn.bind(void 0,1,0,1,1,0),Cn.bind(void 0,1,0,1,1,1),Cn.bind(void 0,1,0,1,1,2),Cn.bind(void 0,1,0,1,1,3),Cn.bind(void 0,1,1,0,0,0),Cn.bind(void 0,1,1,0,0,1),Cn.bind(void 0,1,1,0,0,2),Cn.bind(void 0,1,1,0,0,3),Cn.bind(void 0,1,1,0,1,0),Cn.bind(void 0,1,1,0,1,1),Cn.bind(void 0,1,1,0,1,2),Cn.bind(void 0,1,1,0,1,3),Cn.bind(void 0,1,1,1,0,0),Cn.bind(void 0,1,1,1,0,1),Cn.bind(void 0,1,1,1,0,2),Cn.bind(void 0,1,1,1,0,3),Cn.bind(void 0,1,1,1,1,0),Cn.bind(void 0,1,1,1,1,1),Cn.bind(void 0,1,1,1,1,2),Cn.bind(void 0,1,1,1,1,3)],Sn.prototype.setState=function(e,t){return this.state[e]=t,this.activeState={key:e,value:this.state[e]},this.activeState},Sn.prototype.getState=function(e){return this.state[e]||null},Pn.prototype.inboundIndex=function(e){return e>=0&&e<this.tokens.length},Pn.prototype.composeRUD=function(e){var t=this,n=e.map((function(e){return t[e[0]].apply(t,e.slice(1).concat(!0))})),o=function(e){return"object"==typeof e&&e.hasOwnProperty("FAIL")};if(n.every(o))return{FAIL:"composeRUD: one or more operations hasn't completed successfully",report:n.filter(o)};this.dispatch("composeRUD",[n.filter((function(e){return!o(e)}))])},Pn.prototype.replaceRange=function(e,t,n,o){t=null!==t?t:this.tokens.length;var r=n.every((function(e){return e instanceof Sn}));if(!isNaN(e)&&this.inboundIndex(e)&&r){var a=this.tokens.splice.apply(this.tokens,[e,t].concat(n));return o||this.dispatch("replaceToken",[e,t,n]),[a,n]}return{FAIL:"replaceRange: invalid tokens or startIndex."}},Pn.prototype.replaceToken=function(e,t,n){if(!isNaN(e)&&this.inboundIndex(e)&&t instanceof Sn){var o=this.tokens.splice(e,1,t);return n||this.dispatch("replaceToken",[e,t]),[o[0],t]}return{FAIL:"replaceToken: invalid token or index."}},Pn.prototype.removeRange=function(e,t,n){t=isNaN(t)?this.tokens.length:t;var o=this.tokens.splice(e,t);return n||this.dispatch("removeRange",[o,e,t]),o},Pn.prototype.removeToken=function(e,t){if(!isNaN(e)&&this.inboundIndex(e)){var n=this.tokens.splice(e,1);return t||this.dispatch("removeToken",[n,e]),n}return{FAIL:"removeToken: invalid token index."}},Pn.prototype.insertToken=function(e,t,n){return e.every((function(e){return e instanceof Sn}))?(this.tokens.splice.apply(this.tokens,[t,0].concat(e)),n||this.dispatch("insertToken",[e,t]),e):{FAIL:"insertToken: invalid token(s)."}},Pn.prototype.registerModifier=function(e,t,n){this.events.newToken.subscribe((function(o,r){var a=[o,r],i=[o,r];if(null===t||!0===t.apply(this,a)){var s=n.apply(this,i);o.setState(e,s)}})),this.registeredModifiers.push(e)},Fn.prototype.subscribe=function(e){return"function"==typeof e?this.subscribers.push(e)-1:{FAIL:"invalid '"+this.eventId+"' event handler"}},Fn.prototype.unsubscribe=function(e){this.subscribers.splice(e,1)},Mn.prototype.setCurrentIndex=function(e){this.index=e,this.current=this.context[e],this.backtrack=this.context.slice(0,e),this.lookahead=this.context.slice(e+1)},Mn.prototype.get=function(e){switch(!0){case 0===e:return this.current;case e<0&&Math.abs(e)<=this.backtrack.length:return this.backtrack.slice(e)[0];case e>0&&e<=this.lookahead.length:return this.lookahead[e-1];default:return null}},Pn.prototype.rangeToText=function(e){if(e instanceof Tn)return this.getRangeTokens(e).map((function(e){return e.char})).join("")},Pn.prototype.getText=function(){return this.tokens.map((function(e){return e.char})).join("")},Pn.prototype.getContext=function(e){var t=this.registeredContexts[e];return t||null},Pn.prototype.on=function(e,t){var n=this.events[e];return n?n.subscribe(t):null},Pn.prototype.dispatch=function(e,t){var n=this,o=this.events[e];o instanceof Fn&&o.subscribers.forEach((function(e){e.apply(n,t||[])}))},Pn.prototype.registerContextChecker=function(e,t,n){if(this.getContext(e))return{FAIL:"context name '"+e+"' is already registered."};if("function"!=typeof t)return{FAIL:"missing context start check."};if("function"!=typeof n)return{FAIL:"missing context end check."};var o=new An(e,t,n);return this.registeredContexts[e]=o,this.contextCheckers.push(o),o},Pn.prototype.getRangeTokens=function(e){var t=e.startIndex+e.endOffset;return[].concat(this.tokens.slice(e.startIndex,t))},Pn.prototype.getContextRanges=function(e){var t=this.getContext(e);return t?t.ranges:{FAIL:"context checker '"+e+"' is not registered."}},Pn.prototype.resetContextsRanges=function(){var e=this.registeredContexts;for(var t in e){if(e.hasOwnProperty(t))e[t].ranges=[]}},Pn.prototype.updateContextsRanges=function(){this.resetContextsRanges();for(var e=this.tokens.map((function(e){return e.char})),t=0;t<e.length;t++){var n=new Mn(e,t);this.runContextCheck(n)}this.dispatch("updateContextsRanges",[this.registeredContexts])},Pn.prototype.setEndOffset=function(e,t){var n=new Tn(this.getContext(t).openRange.startIndex,e,t),o=this.getContext(t).ranges;return n.rangeId=t+"."+o.length,o.push(n),this.getContext(t).openRange=null,n},Pn.prototype.runContextCheck=function(e){var t=this,n=e.index;this.contextCheckers.forEach((function(o){var r=o.contextName,a=t.getContext(r).openRange;if(!a&&o.checkStart(e)&&(a=new Tn(n,null,r),t.getContext(r).openRange=a,t.dispatch("contextStart",[r,n])),a&&o.checkEnd(e)){var i=n-a.startIndex+1,s=t.setEndOffset(i,r);t.dispatch("contextEnd",[r,s])}}))},Pn.prototype.tokenize=function(e){this.tokens=[],this.resetContextsRanges();var t=Array.from(e);this.dispatch("start");for(var n=0;n<t.length;n++){var o=t[n],r=new Mn(t,n);this.dispatch("next",[r]),this.runContextCheck(r);var a=new Sn(o);this.tokens.push(a),this.dispatch("newToken",[a,r])}return this.dispatch("end",[this.tokens]),this.tokens},Dn.prototype.getDefaultScriptFeaturesIndexes=function(){for(var e=this.font.tables.gsub.scripts,t=0;t<e.length;t++){var n=e[t];if("DFLT"===n.tag)return n.script.defaultLangSys.featureIndexes}return[]},Dn.prototype.getScriptFeaturesIndexes=function(e){if(!this.font.tables.gsub)return[];if(!e)return this.getDefaultScriptFeaturesIndexes();for(var t=this.font.tables.gsub.scripts,n=0;n<t.length;n++){var o=t[n];if(o.tag===e&&o.script.defaultLangSys)return o.script.defaultLangSys.featureIndexes;var r=o.langSysRecords;if(r)for(var a=0;a<r.length;a++){var i=r[a];if(i.tag===e)return i.langSys.featureIndexes}}return this.getDefaultScriptFeaturesIndexes()},Dn.prototype.mapTagsToFeatures=function(e,t){for(var n={},o=0;o<e.length;o++){var r=e[o].tag,a=e[o].feature;n[r]=a}this.features[t].tags=n},Dn.prototype.getScriptFeatures=function(e){var t=this.features[e];if(this.features.hasOwnProperty(e))return t;var n=this.getScriptFeaturesIndexes(e);if(!n)return null;var o=this.font.tables.gsub;return t=n.map((function(e){return o.features[e]})),this.features[e]=t,this.mapTagsToFeatures(t,e),t},Dn.prototype.getSubstitutionType=function(e,t){return e.lookupType.toString()+t.substFormat.toString()},Dn.prototype.getLookupMethod=function(e,t){var n=this;switch(this.getSubstitutionType(e,t)){case"11":return function(e){return Bn.apply(n,[e,t])};case"12":return function(e){return Gn.apply(n,[e,t])};case"63":return function(e){return Wn.apply(n,[e,t])};case"41":return function(e){return zn.apply(n,[e,t])};case"21":return function(e){return Vn.apply(n,[e,t])};default:throw new Error("lookupType: "+e.lookupType+" - substFormat: "+t.substFormat+" is not yet supported")}},Dn.prototype.lookupFeature=function(e){var t=e.contextParams,n=t.index,o=this.getFeature({tag:e.tag,script:e.script});if(!o)return new Error("font '"+this.font.names.fullName.en+"' doesn't support feature '"+e.tag+"' for script '"+e.script+"'.");for(var r=this.getFeatureLookups(o),a=[].concat(t.context),i=0;i<r.length;i++)for(var s=r[i],l=this.getLookupSubtables(s),c=0;c<l.length;c++){var u=l[c],p=this.getSubstitutionType(s,u),d=this.getLookupMethod(s,u),h=void 0;switch(p){case"11":(h=d(t.current))&&a.splice(n,1,new En({id:11,tag:e.tag,substitution:h}));break;case"12":(h=d(t.current))&&a.splice(n,1,new En({id:12,tag:e.tag,substitution:h}));break;case"63":h=d(t),Array.isArray(h)&&h.length&&a.splice(n,1,new En({id:63,tag:e.tag,substitution:h}));break;case"41":(h=d(t))&&a.splice(n,1,new En({id:41,tag:e.tag,substitution:h}));break;case"21":(h=d(t.current))&&a.splice(n,1,new En({id:21,tag:e.tag,substitution:h}))}t=new Mn(a,n),Array.isArray(h)&&!h.length||(h=null)}return a.length?a:null},Dn.prototype.supports=function(e){if(!e.script)return!1;this.getScriptFeatures(e.script);var t=this.features.hasOwnProperty(e.script);if(!e.tag)return t;var n=this.features[e.script].some((function(t){return t.tag===e.tag}));return t&&n},Dn.prototype.getLookupSubtables=function(e){return e.subtables||null},Dn.prototype.getLookupByIndex=function(e){return this.font.tables.gsub.lookups[e]||null},Dn.prototype.getFeatureLookups=function(e){return e.lookupListIndexes.map(this.getLookupByIndex.bind(this))},Dn.prototype.getFeature=function(e){if(!this.font)return{FAIL:"No font was found"};this.features.hasOwnProperty(e.script)||this.getScriptFeatures(e.script);var t=this.features[e.script];return t?t.tags[e.tag]?this.features[e.script].tags[e.tag]:null:{FAIL:"No feature for script "+e.script}};var Hn={startCheck:function(e){var t=e.current,n=e.get(-1);return null===n&&Rn(t)||!Rn(n)&&Rn(t)},endCheck:function(e){var t=e.get(1);return(null===t||!Rn(t))}};var jn={startCheck:function(e){var t=e.current,n=e.get(-1);return(Rn(t)||In(t))&&!Rn(n)},endCheck:function(e){var t=e.get(1);switch(!0){case null===t:return!0;case!Rn(t)&&!In(t):var n=/\s/.test(t);if(!n)return!0;if(n){if(!e.lookahead.some((function(e){return Rn(e)||In(e)})))return!0}break;default:return!1}}};var Xn={11:function(e,t,n){t[n].setState(e.tag,e.substitution)},12:function(e,t,n){t[n].setState(e.tag,e.substitution)},63:function(e,t,n){e.substitution.forEach((function(o,r){t[n+r].setState(e.tag,o)}))},41:function(e,t,n){var o=t[n];o.setState(e.tag,e.substitution.ligGlyph);for(var r=e.substitution.components.length,a=0;a<r;a++)(o=t[n+a+1]).setState("deleted",!0)}};function Yn(e,t,n){e instanceof En&&Xn[e.id](e,t,n)}function Kn(e){var t=this,n=this.featuresTags.arab,o=this.tokenizer.getRangeTokens(e);if(1!==o.length){var r=new Mn(o.map((function(e){return e.getState("glyphIndex")})),0),a=new Mn(o.map((function(e){return e.char})),0);o.forEach((function(e,i){if(!In(e.char)){r.setCurrentIndex(i),a.setCurrentIndex(i);var s,l=0;switch(function(e){for(var t=[].concat(e.backtrack),n=t.length-1;n>=0;n--){var o=t[n],r=Ln(o),a=In(o);if(!r&&!a)return!0;if(r)return!1}return!1}(a)&&(l|=1),function(e){if(Ln(e.current))return!1;for(var t=0;t<e.lookahead.length;t++){if(!In(e.lookahead[t]))return!0}return!1}(a)&&(l|=2),l){case 1:s="fina";break;case 2:s="init";break;case 3:s="medi"}if(-1!==n.indexOf(s)){var c=t.query.lookupFeature({tag:s,script:"arab",contextParams:r});if(c instanceof Error)return console.info(c.message);c.forEach((function(e,t){e instanceof En&&(Yn(e,o,t),r.context[t]=e.substitution)}))}}}))}}function Zn(e,t){return new Mn(e.map((function(e){return e.activeState.value})),t||0)}function Jn(e){var t=this,n=this.tokenizer.getRangeTokens(e),o=Zn(n);o.context.forEach((function(e,r){o.setCurrentIndex(r);var a=t.query.lookupFeature({tag:"rlig",script:"arab",contextParams:o});a.length&&(a.forEach((function(e){return Yn(e,n,r)})),o=Zn(n))}))}var $n={startCheck:function(e){var t=e.current,n=e.get(-1);return null===n&&Un(t)||!Un(n)&&Un(t)},endCheck:function(e){var t=e.get(1);return(null===t||!Un(t))}};function Qn(e,t){return new Mn(e.map((function(e){return e.activeState.value})),t||0)}function eo(e){var t=this,n=this.tokenizer.getRangeTokens(e),o=Qn(n);o.context.forEach((function(e,r){o.setCurrentIndex(r);var a=t.query.lookupFeature({tag:"liga",script:"latn",contextParams:o});a.length&&(a.forEach((function(e){return Yn(e,n,r)})),o=Qn(n))}))}function to(e){this.baseDir=e||"ltr",this.tokenizer=new Pn,this.featuresTags={}}function no(e){var t=this.contextChecks[e+"Check"];return this.tokenizer.registerContextChecker(e,t.startCheck,t.endCheck)}function oo(){return no.call(this,"latinWord"),no.call(this,"arabicWord"),no.call(this,"arabicSentence"),this.tokenizer.tokenize(this.text)}function ro(){var e=this;this.tokenizer.getContextRanges("arabicSentence").forEach((function(t){var n=e.tokenizer.getRangeTokens(t);e.tokenizer.replaceRange(t.startIndex,t.endOffset,n.reverse())}))}function ao(){if(-1===this.tokenizer.registeredModifiers.indexOf("glyphIndex"))throw new Error("glyphIndex modifier is required to apply arabic presentation features.")}function io(){var e=this;this.featuresTags.hasOwnProperty("arab")&&(ao.call(this),this.tokenizer.getContextRanges("arabicWord").forEach((function(t){Kn.call(e,t)})))}function so(){var e=this;this.featuresTags.hasOwnProperty("arab")&&(-1!==this.featuresTags.arab.indexOf("rlig")&&(ao.call(this),this.tokenizer.getContextRanges("arabicWord").forEach((function(t){Jn.call(e,t)}))))}function lo(){var e=this;this.featuresTags.hasOwnProperty("latn")&&(-1!==this.featuresTags.latn.indexOf("liga")&&(ao.call(this),this.tokenizer.getContextRanges("latinWord").forEach((function(t){eo.call(e,t)}))))}function co(e){(e=e||{}).empty||(At(e.familyName,"When creating a new Font object, familyName is required."),At(e.styleName,"When creating a new Font object, styleName is required."),At(e.unitsPerEm,"When creating a new Font object, unitsPerEm is required."),At(e.ascender,"When creating a new Font object, ascender is required."),At(e.descender,"When creating a new Font object, descender is required."),At(e.descender<0,"Descender should be negative (e.g. -512)."),this.names={fontFamily:{en:e.familyName||" "},fontSubfamily:{en:e.styleName||" "},fullName:{en:e.fullName||e.familyName+" "+e.styleName},postScriptName:{en:e.postScriptName||(e.familyName+e.styleName).replace(/\s/g,"")},designer:{en:e.designer||" "},designerURL:{en:e.designerURL||" "},manufacturer:{en:e.manufacturer||" "},manufacturerURL:{en:e.manufacturerURL||" "},license:{en:e.license||" "},licenseURL:{en:e.licenseURL||" "},version:{en:e.version||"Version 0.1"},description:{en:e.description||" "},copyright:{en:e.copyright||" "},trademark:{en:e.trademark||" "}},this.unitsPerEm=e.unitsPerEm||1e3,this.ascender=e.ascender,this.descender=e.descender,this.createdTimestamp=e.createdTimestamp,this.tables={os2:{usWeightClass:e.weightClass||this.usWeightClasses.MEDIUM,usWidthClass:e.widthClass||this.usWidthClasses.MEDIUM,fsSelection:e.fsSelection||this.fsSelectionValues.REGULAR}}),this.supported=!0,this.glyphs=new be.GlyphSet(this,e.glyphs||[]),this.encoding=new pe(this),this.position=new wt(this),this.substitution=new kt(this),this.tables=this.tables||{},this._push=null,this._hmtxTableData={},Object.defineProperty(this,"hinting",{get:function(){return this._hinting?this._hinting:"truetype"===this.outlinesFormat?this._hinting=new Nt(this):void 0}})}function uo(e,t){var n=JSON.stringify(e),o=256;for(var r in t){var a=parseInt(r);if(a&&!(a<256)){if(JSON.stringify(t[r])===n)return a;o<=a&&(o=a+1)}}return t[o]=e,o}function po(e,t,n){var o=uo(t.name,n);return[{name:"tag_"+e,type:"TAG",value:t.tag},{name:"minValue_"+e,type:"FIXED",value:t.minValue<<16},{name:"defaultValue_"+e,type:"FIXED",value:t.defaultValue<<16},{name:"maxValue_"+e,type:"FIXED",value:t.maxValue<<16},{name:"flags_"+e,type:"USHORT",value:0},{name:"nameID_"+e,type:"USHORT",value:o}]}function ho(e,t,n){var o={},r=new re.Parser(e,t);return o.tag=r.parseTag(),o.minValue=r.parseFixed(),o.defaultValue=r.parseFixed(),o.maxValue=r.parseFixed(),r.skip("uShort",1),o.name=n[r.parseUShort()]||{},o}function _o(e,t,n,o){for(var r=[{name:"nameID_"+e,type:"USHORT",value:uo(t.name,o)},{name:"flags_"+e,type:"USHORT",value:0}],a=0;a<n.length;++a){var i=n[a].tag;r.push({name:"axis_"+e+" "+i,type:"FIXED",value:t.coordinates[i]<<16})}return r}function go(e,t,n,o){var r={},a=new re.Parser(e,t);r.name=o[a.parseUShort()]||{},a.skip("uShort",1),r.coordinates={};for(var i=0;i<n.length;++i)r.coordinates[n[i].tag]=a.parseFixed();return r}to.prototype.setText=function(e){this.text=e},to.prototype.contextChecks={latinWordCheck:$n,arabicWordCheck:Hn,arabicSentenceCheck:jn},to.prototype.registerFeatures=function(e,t){var n=this,o=t.filter((function(t){return n.query.supports({script:e,tag:t})}));this.featuresTags.hasOwnProperty(e)?this.featuresTags[e]=this.featuresTags[e].concat(o):this.featuresTags[e]=o},to.prototype.applyFeatures=function(e,t){if(!e)throw new Error("No valid font was provided to apply features");this.query||(this.query=new Dn(e));for(var n=0;n<t.length;n++){var o=t[n];this.query.supports({script:o.script})&&this.registerFeatures(o.script,o.tags)}},to.prototype.registerModifier=function(e,t,n){this.tokenizer.registerModifier(e,t,n)},to.prototype.checkContextReady=function(e){return!!this.tokenizer.getContext(e)},to.prototype.applyFeaturesToContexts=function(){this.checkContextReady("arabicWord")&&(io.call(this),so.call(this)),this.checkContextReady("latinWord")&&lo.call(this),this.checkContextReady("arabicSentence")&&ro.call(this)},to.prototype.processText=function(e){this.text&&this.text===e||(this.setText(e),oo.call(this),this.applyFeaturesToContexts())},to.prototype.getBidiText=function(e){return this.processText(e),this.tokenizer.getText()},to.prototype.getTextGlyphs=function(e){this.processText(e);for(var t=[],n=0;n<this.tokenizer.tokens.length;n++){var o=this.tokenizer.tokens[n];if(!o.state.deleted){var r=o.activeState.value;t.push(Array.isArray(r)?r[0]:r)}}return t},co.prototype.hasChar=function(e){return null!==this.encoding.charToGlyphIndex(e)},co.prototype.charToGlyphIndex=function(e){return this.encoding.charToGlyphIndex(e)},co.prototype.charToGlyph=function(e){var t=this.charToGlyphIndex(e),n=this.glyphs.get(t);return n||(n=this.glyphs.get(0)),n},co.prototype.updateFeatures=function(e){return this.defaultRenderOptions.features.map((function(t){return"latn"===t.script?{script:"latn",tags:t.tags.filter((function(t){return e[t]}))}:t}))},co.prototype.stringToGlyphs=function(e,t){var n=this,o=new to;o.registerModifier("glyphIndex",null,(function(e){return n.charToGlyphIndex(e.char)}));var r=t?this.updateFeatures(t.features):this.defaultRenderOptions.features;o.applyFeatures(this,r);for(var a=o.getTextGlyphs(e),i=a.length,s=new Array(i),l=this.glyphs.get(0),c=0;c<i;c+=1)s[c]=n.glyphs.get(a[c])||l;return s},co.prototype.nameToGlyphIndex=function(e){return this.glyphNames.nameToGlyphIndex(e)},co.prototype.nameToGlyph=function(e){var t=this.nameToGlyphIndex(e),n=this.glyphs.get(t);return n||(n=this.glyphs.get(0)),n},co.prototype.glyphIndexToName=function(e){return this.glyphNames.glyphIndexToName?this.glyphNames.glyphIndexToName(e):""},co.prototype.getKerningValue=function(e,t){e=e.index||e,t=t.index||t;var n=this.position.defaultKerningTables;return n?this.position.getKerningValue(n,e,t):this.kerningPairs[e+","+t]||0},co.prototype.defaultRenderOptions={kerning:!0,features:[{script:"arab",tags:["init","medi","fina","rlig"]},{script:"latn",tags:["liga","rlig"]}]},co.prototype.forEachGlyph=function(e,t,n,o,r,a){t=void 0!==t?t:0,n=void 0!==n?n:0,o=void 0!==o?o:72,r=Object.assign({},this.defaultRenderOptions,r);var i,s=1/this.unitsPerEm*o,l=this.stringToGlyphs(e,r);if(r.kerning){var c=r.script||this.position.getDefaultScriptName();i=this.position.getKerningTables(c,r.language)}for(var u=0;u<l.length;u+=1){var p=l[u];if(a.call(this,p,t,n,o,r),p.advanceWidth&&(t+=p.advanceWidth*s),r.kerning&&u<l.length-1)t+=(i?this.position.getKerningValue(i,p.index,l[u+1].index):this.getKerningValue(p,l[u+1]))*s;r.letterSpacing?t+=r.letterSpacing*o:r.tracking&&(t+=r.tracking/1e3*o)}return t},co.prototype.getPath=function(e,t,n,o,r){var a=new T;return this.forEachGlyph(e,t,n,o,r,(function(e,t,n,o){var i=e.getPath(t,n,o,r,this);a.extend(i)})),a},co.prototype.getPaths=function(e,t,n,o,r){var a=[];return this.forEachGlyph(e,t,n,o,r,(function(e,t,n,o){var i=e.getPath(t,n,o,r,this);a.push(i)})),a},co.prototype.getAdvanceWidth=function(e,t,n){return this.forEachGlyph(e,0,0,t,n,(function(){}))},co.prototype.draw=function(e,t,n,o,r,a){this.getPath(t,n,o,r,a).draw(e)},co.prototype.drawPoints=function(e,t,n,o,r,a){this.forEachGlyph(t,n,o,r,a,(function(t,n,o,r){t.drawPoints(e,n,o,r)}))},co.prototype.drawMetrics=function(e,t,n,o,r,a){this.forEachGlyph(t,n,o,r,a,(function(t,n,o,r){t.drawMetrics(e,n,o,r)}))},co.prototype.getEnglishName=function(e){var t=this.names[e];if(t)return t.en},co.prototype.validate=function(){var e=this;function t(t){var n=e.getEnglishName(t);n&&n.trim().length}t("fontFamily"),t("weightName"),t("manufacturer"),t("copyright"),t("version"),this.unitsPerEm},co.prototype.toTables=function(){return mt.fontToTable(this)},co.prototype.toBuffer=function(){return console.warn("Font.toBuffer is deprecated. Use Font.toArrayBuffer instead."),this.toArrayBuffer()},co.prototype.toArrayBuffer=function(){for(var e=this.toTables().encode(),t=new ArrayBuffer(e.length),n=new Uint8Array(t),o=0;o<e.length;o++)n[o]=e[o];return t},co.prototype.download=function(e){var t=this.getEnglishName("fontFamily"),n=this.getEnglishName("fontSubfamily");e=e||t.replace(/\s/g,"")+"-"+n+".otf";var o=this.toArrayBuffer();if("undefined"!=typeof window)if(window.URL=window.URL||window.webkitURL,window.URL){var r=new DataView(o),a=new Blob([r],{type:"font/opentype"}),i=document.createElement("a");i.href=window.URL.createObjectURL(a),i.download=e;var s=document.createEvent("MouseEvents");s.initEvent("click",!0,!1),i.dispatchEvent(s)}else console.warn("Font file could not be downloaded. Try using a different browser.");else{var l=require("fs"),c=function(e){for(var t=new Buffer(e.byteLength),n=new Uint8Array(e),o=0;o<t.length;++o)t[o]=n[o];return t}(o);l.writeFileSync(e,c)}},co.prototype.fsSelectionValues={ITALIC:1,UNDERSCORE:2,NEGATIVE:4,OUTLINED:8,STRIKEOUT:16,BOLD:32,REGULAR:64,USER_TYPO_METRICS:128,WWS:256,OBLIQUE:512},co.prototype.usWidthClasses={ULTRA_CONDENSED:1,EXTRA_CONDENSED:2,CONDENSED:3,SEMI_CONDENSED:4,MEDIUM:5,SEMI_EXPANDED:6,EXPANDED:7,EXTRA_EXPANDED:8,ULTRA_EXPANDED:9},co.prototype.usWeightClasses={THIN:100,EXTRA_LIGHT:200,LIGHT:300,NORMAL:400,MEDIUM:500,SEMI_BOLD:600,BOLD:700,EXTRA_BOLD:800,BLACK:900};var fo={make:function(e,t){var n=new Z.Table("fvar",[{name:"version",type:"ULONG",value:65536},{name:"offsetToData",type:"USHORT",value:0},{name:"countSizePairs",type:"USHORT",value:2},{name:"axisCount",type:"USHORT",value:e.axes.length},{name:"axisSize",type:"USHORT",value:20},{name:"instanceCount",type:"USHORT",value:e.instances.length},{name:"instanceSize",type:"USHORT",value:4+4*e.axes.length}]);n.offsetToData=n.sizeOf();for(var o=0;o<e.axes.length;o++)n.fields=n.fields.concat(po(o,e.axes[o],t));for(var r=0;r<e.instances.length;r++)n.fields=n.fields.concat(_o(r,e.instances[r],e.axes,t));return n},parse:function(e,t,n){var o=new re.Parser(e,t),r=o.parseULong();F.argument(65536===r,"Unsupported fvar table version.");var a=o.parseOffset16();o.skip("uShort",1);for(var i=o.parseUShort(),s=o.parseUShort(),l=o.parseUShort(),c=o.parseUShort(),u=[],p=0;p<i;p++)u.push(ho(e,t+a+p*s,n));for(var d=[],h=t+a+i*s,_=0;_<l;_++)d.push(go(e,h+_*c,u,n));return{axes:u,instances:d}}},mo=new Array(10);mo[1]=function(){var e=this.offset+this.relativeOffset,t=this.parseUShort();return 1===t?{posFormat:1,coverage:this.parsePointer(ne.coverage),value:this.parseValueRecord()}:2===t?{posFormat:2,coverage:this.parsePointer(ne.coverage),values:this.parseValueRecordList()}:void F.assert(!1,"0x"+e.toString(16)+": GPOS lookup type 1 format must be 1 or 2.")},mo[2]=function(){var e=this.offset+this.relativeOffset,t=this.parseUShort();F.assert(1===t||2===t,"0x"+e.toString(16)+": GPOS lookup type 2 format must be 1 or 2.");var n=this.parsePointer(ne.coverage),o=this.parseUShort(),r=this.parseUShort();if(1===t)return{posFormat:t,coverage:n,valueFormat1:o,valueFormat2:r,pairSets:this.parseList(ne.pointer(ne.list((function(){return{secondGlyph:this.parseUShort(),value1:this.parseValueRecord(o),value2:this.parseValueRecord(r)}}))))};if(2===t){var a=this.parsePointer(ne.classDef),i=this.parsePointer(ne.classDef),s=this.parseUShort(),l=this.parseUShort();return{posFormat:t,coverage:n,valueFormat1:o,valueFormat2:r,classDef1:a,classDef2:i,class1Count:s,class2Count:l,classRecords:this.parseList(s,ne.list(l,(function(){return{value1:this.parseValueRecord(o),value2:this.parseValueRecord(r)}})))}}},mo[3]=function(){return{error:"GPOS Lookup 3 not supported"}},mo[4]=function(){return{error:"GPOS Lookup 4 not supported"}},mo[5]=function(){return{error:"GPOS Lookup 5 not supported"}},mo[6]=function(){return{error:"GPOS Lookup 6 not supported"}},mo[7]=function(){return{error:"GPOS Lookup 7 not supported"}},mo[8]=function(){return{error:"GPOS Lookup 8 not supported"}},mo[9]=function(){return{error:"GPOS Lookup 9 not supported"}};var yo=new Array(10);var vo={parse:function(e,t){var n=new ne(e,t=t||0),o=n.parseVersion(1);return F.argument(1===o||1.1===o,"Unsupported GPOS table version "+o),1===o?{version:o,scripts:n.parseScriptList(),features:n.parseFeatureList(),lookups:n.parseLookupList(mo)}:{version:o,scripts:n.parseScriptList(),features:n.parseFeatureList(),lookups:n.parseLookupList(mo),variations:n.parseFeatureVariationsList()}},make:function(e){return new Z.Table("GPOS",[{name:"version",type:"ULONG",value:65536},{name:"scripts",type:"TABLE",value:new Z.ScriptList(e.scripts)},{name:"features",type:"TABLE",value:new Z.FeatureList(e.features)},{name:"lookups",type:"TABLE",value:new Z.LookupList(e.lookups,yo)}])}};var bo={parse:function(e,t){var n=new re.Parser(e,t),o=n.parseUShort();if(0===o)return function(e){var t={};e.skip("uShort");var n=e.parseUShort();F.argument(0===n,"Unsupported kern sub-table version."),e.skip("uShort",2);var o=e.parseUShort();e.skip("uShort",3);for(var r=0;r<o;r+=1){var a=e.parseUShort(),i=e.parseUShort(),s=e.parseShort();t[a+","+i]=s}return t}(n);if(1===o)return function(e){var t={};e.skip("uShort"),e.parseULong()>1&&console.warn("Only the first kern subtable is supported."),e.skip("uLong");var n=255&e.parseUShort();if(e.skip("uShort"),0===n){var o=e.parseUShort();e.skip("uShort",3);for(var r=0;r<o;r+=1){var a=e.parseUShort(),i=e.parseUShort(),s=e.parseShort();t[a+","+i]=s}}return t}(n);throw new Error("Unsupported kern table version ("+o+").")}};var xo={parse:function(e,t,n,o){for(var r=new re.Parser(e,t),a=o?r.parseUShort:r.parseULong,i=[],s=0;s<n+1;s+=1){var l=a.call(r);o&&(l*=2),i.push(l)}return i}};function wo(e,t){require("fs").readFile(e,(function(e,n){if(e)return t(e.message);t(null,Tt(n))}))}function ko(e,t){var n=new XMLHttpRequest;n.open("get",e,!0),n.responseType="arraybuffer",n.onload=function(){return n.response?t(null,n.response):t("Font could not be loaded: "+n.statusText)},n.onerror=function(){t("Font could not be loaded")},n.send()}function Co(e,t){for(var n=[],o=12,r=0;r<t;r+=1){var a=re.getTag(e,o),i=re.getULong(e,o+4),s=re.getULong(e,o+8),l=re.getULong(e,o+12);n.push({tag:a,checksum:i,offset:s,length:l,compression:!1}),o+=16}return n}function So(e,t){if("WOFF"===t.compression){var n=new Uint8Array(e.buffer,t.offset+2,t.compressedLength-2),o=new Uint8Array(t.length);if(k(n,o),o.byteLength!==t.length)throw new Error("Decompression error: "+t.tag+" decompressed length doesn't match recorded length");return{data:new DataView(o.buffer,0),offset:0}}return{data:e,offset:t.offset}}function To(e,t){var n,o;t=null==t?{}:t;var r,a,i,s,l,c,u,p,d,h,_,g,f=new co({empty:!0}),m=new DataView(e,0),y=[],v=re.getTag(m,0);if(v===String.fromCharCode(0,1,0,0)||"true"===v||"typ1"===v)f.outlinesFormat="truetype",y=Co(m,r=re.getUShort(m,4));else if("OTTO"===v)f.outlinesFormat="cff",y=Co(m,r=re.getUShort(m,4));else{if("wOFF"!==v)throw new Error("Unsupported OpenType signature "+v);var b=re.getTag(m,4);if(b===String.fromCharCode(0,1,0,0))f.outlinesFormat="truetype";else{if("OTTO"!==b)throw new Error("Unsupported OpenType flavor "+v);f.outlinesFormat="cff"}y=function(e,t){for(var n=[],o=44,r=0;r<t;r+=1){var a=re.getTag(e,o),i=re.getULong(e,o+4),s=re.getULong(e,o+8),l=re.getULong(e,o+12),c=void 0;c=s<l&&"WOFF",n.push({tag:a,offset:i,compression:c,compressedLength:s,length:l}),o+=20}return n}(m,r=re.getUShort(m,12))}for(var x=0;x<r;x+=1){var w=y[x],k=void 0;switch(w.tag){case"cmap":k=So(m,w),f.tables.cmap=ie.parse(k.data,k.offset),f.encoding=new de(f.tables.cmap);break;case"cvt ":k=So(m,w),g=new re.Parser(k.data,k.offset),f.tables.cvt=g.parseShortList(w.length/2);break;case"fvar":i=w;break;case"fpgm":k=So(m,w),g=new re.Parser(k.data,k.offset),f.tables.fpgm=g.parseByteList(w.length);break;case"head":k=So(m,w),f.tables.head=Ge.parse(k.data,k.offset),f.unitsPerEm=f.tables.head.unitsPerEm,n=f.tables.head.indexToLocFormat;break;case"hhea":k=So(m,w),f.tables.hhea=qe.parse(k.data,k.offset),f.ascender=f.tables.hhea.ascender,f.descender=f.tables.hhea.descender,f.numberOfHMetrics=f.tables.hhea.numberOfHMetrics;break;case"hmtx":u=w;break;case"ltag":k=So(m,w),o=ze.parse(k.data,k.offset);break;case"maxp":k=So(m,w),f.tables.maxp=Ve.parse(k.data,k.offset),f.numGlyphs=f.tables.maxp.numGlyphs;break;case"name":h=w;break;case"OS/2":k=So(m,w),f.tables.os2=rt.parse(k.data,k.offset);break;case"post":k=So(m,w),f.tables.post=at.parse(k.data,k.offset),f.glyphNames=new _e(f.tables.post);break;case"prep":k=So(m,w),g=new re.Parser(k.data,k.offset),f.tables.prep=g.parseByteList(w.length);break;case"glyf":s=w;break;case"loca":d=w;break;case"CFF ":a=w;break;case"kern":p=w;break;case"GPOS":l=w;break;case"GSUB":c=w;break;case"meta":_=w}}var C=So(m,h);if(f.tables.name=nt.parse(C.data,C.offset,o),f.names=f.tables.name,s&&d){var S=0===n,T=So(m,d),A=xo.parse(T.data,T.offset,f.numGlyphs,S),M=So(m,s);f.glyphs=Et.parse(M.data,M.offset,A,f,t)}else{if(!a)throw new Error("Font doesn't contain TrueType or CFF outlines.");var F=So(m,a);Be.parse(F.data,F.offset,f,t)}var O=So(m,u);if(We.parse(f,O.data,O.offset,f.numberOfHMetrics,f.numGlyphs,f.glyphs,t),ge(f,t),p){var P=So(m,p);f.kerningPairs=bo.parse(P.data,P.offset)}else f.kerningPairs={};if(l){var R=So(m,l);f.tables.gpos=vo.parse(R.data,R.offset),f.position.init()}if(c){var L=So(m,c);f.tables.gsub=ct.parse(L.data,L.offset)}if(i){var I=So(m,i);f.tables.fvar=fo.parse(I.data,I.offset,f.names)}if(_){var U=So(m,_);f.tables.meta=ut.parse(U.data,U.offset),f.metas=f.tables.meta}return f}e.BoundingBox=S,e.Font=co,e.Glyph=me,e.Path=T,e._parse=re,e.load=function(e,t,n){var o="undefined"==typeof window?wo:ko;return new Promise((function(r){o(e,(function(e,o){if(e)return t(e);var a;try{a=To(o,n)}catch(e){return t(e,null)}if(t)return t(null,a);r(a)}))}))},e.loadSync=function(e,t){return To(Tt(require("fs").readFileSync(e)),t)},e.parse=To,Object.defineProperty(e,"__esModule",{value:!0})})),this.earcut=function(e,t){var n=[];return function(e,t,n){n=n||2;var i,s,l,c,d,h,g,f=t&&t.length,m=f?t[0]*n:e.length,y=o(e,0,m,n,!0),v=[];if(!y||y.next===y.prev)return v;f&&(y=function(e,t,n,a){var i,s,l,c,d,h=[];for(i=0,s=t.length;i<s;i++)l=t[i]*a,c=i<s-1?t[i+1]*a:e.length,(d=o(e,l,c,a,!1))===d.next&&(d.steiner=!0),h.push(_(d));for(h.sort(u),i=0;i<h.length;i++)p(h[i],n),n=r(n,n.next);return n}(e,t,y,n));if(e.length>80*n){i=l=e[0],s=c=e[1];for(var b=n;b<m;b+=n)d=e[b],h=e[b+1],d<i&&(i=d),h<s&&(s=h),d>l&&(l=d),h>c&&(c=h);g=0!==(g=Math.max(l-i,c-s))?1/g:0}return a(y,v,n,i,s,g),v}(e,t).forEach((function(t){n=n.concat([e[2*t],e[2*t+1]])})),n;function o(e,t,n,o,r){var a,i;if(r===function(e,t,n,o){for(var r=0,a=t,i=n-o;a<n;a+=o)r+=(e[i]-e[a])*(e[a+1]+e[i+1]),i=a;return r}(e,t,n,o)>0)for(a=t;a<n;a+=o)i=C(a,e[a],e[a+1],i);else for(a=n-o;a>=t;a-=o)i=C(a,e[a],e[a+1],i);return i&&y(i,i.next)&&(S(i),i=i.next),i}function r(e,t){if(!e)return e;t||(t=e);var n,o=e;do{if(n=!1,o.steiner||!y(o,o.next)&&0!==m(o.prev,o,o.next))o=o.next;else{if(S(o),(o=t=o.prev)===o.next)break;n=!0}}while(n||o!==t);return t}function a(e,t,n,o,u,p,d){if(e){!d&&p&&function(e,t,n,o){var r=e;do{null===r.z&&(r.z=h(r.x,r.y,t,n,o)),r.prevZ=r.prev,r.nextZ=r.next,r=r.next}while(r!==e);r.prevZ.nextZ=null,r.prevZ=null,function(e){var t,n,o,r,a,i,s,l,c=1;do{for(n=e,e=null,a=null,i=0;n;){for(i++,o=n,s=0,t=0;t<c&&(s++,o=o.nextZ);t++);for(l=c;s>0||l>0&&o;)0!==s&&(0===l||!o||n.z<=o.z)?(r=n,n=n.nextZ,s--):(r=o,o=o.nextZ,l--),a?a.nextZ=r:e=r,r.prevZ=a,a=r;n=o}a.nextZ=null,c*=2}while(i>1)}(r)}(e,o,u,p);for(var _,g,f=e;e.prev!==e.next;)if(_=e.prev,g=e.next,p?s(e,o,u,p):i(e))t.push(_.i/n),t.push(e.i/n),t.push(g.i/n),S(e),e=g.next,f=g.next;else if((e=g)===f){d?1===d?a(e=l(r(e),t,n),t,n,o,u,p,2):2===d&&c(e,t,n,o,u,p):a(r(e),t,n,o,u,p,1);break}}}function i(e){var t=e.prev,n=e,o=e.next;if(m(t,n,o)>=0)return!1;for(var r=e.next.next;r!==e.prev;){if(g(t.x,t.y,n.x,n.y,o.x,o.y,r.x,r.y)&&m(r.prev,r,r.next)>=0)return!1;r=r.next}return!0}function s(e,t,n,o){var r=e.prev,a=e,i=e.next;if(m(r,a,i)>=0)return!1;for(var s=r.x<a.x?r.x<i.x?r.x:i.x:a.x<i.x?a.x:i.x,l=r.y<a.y?r.y<i.y?r.y:i.y:a.y<i.y?a.y:i.y,c=r.x>a.x?r.x>i.x?r.x:i.x:a.x>i.x?a.x:i.x,u=r.y>a.y?r.y>i.y?r.y:i.y:a.y>i.y?a.y:i.y,p=h(s,l,t,n,o),d=h(c,u,t,n,o),_=e.prevZ,f=e.nextZ;_&&_.z>=p&&f&&f.z<=d;){if(_!==e.prev&&_!==e.next&&g(r.x,r.y,a.x,a.y,i.x,i.y,_.x,_.y)&&m(_.prev,_,_.next)>=0)return!1;if(_=_.prevZ,f!==e.prev&&f!==e.next&&g(r.x,r.y,a.x,a.y,i.x,i.y,f.x,f.y)&&m(f.prev,f,f.next)>=0)return!1;f=f.nextZ}for(;_&&_.z>=p;){if(_!==e.prev&&_!==e.next&&g(r.x,r.y,a.x,a.y,i.x,i.y,_.x,_.y)&&m(_.prev,_,_.next)>=0)return!1;_=_.prevZ}for(;f&&f.z<=d;){if(f!==e.prev&&f!==e.next&&g(r.x,r.y,a.x,a.y,i.x,i.y,f.x,f.y)&&m(f.prev,f,f.next)>=0)return!1;f=f.nextZ}return!0}function l(e,t,n){var o=e;do{var a=o.prev,i=o.next.next;!y(a,i)&&v(a,o,o.next,i)&&w(a,i)&&w(i,a)&&(t.push(a.i/n),t.push(o.i/n),t.push(i.i/n),S(o),S(o.next),o=e=i),o=o.next}while(o!==e);return r(o)}function c(e,t,n,o,i,s){var l=e;do{for(var c=l.next.next;c!==l.prev;){if(l.i!==c.i&&f(l,c)){var u=k(l,c);return l=r(l,l.next),u=r(u,u.next),a(l,t,n,o,i,s),void a(u,t,n,o,i,s)}c=c.next}l=l.next}while(l!==e)}function u(e,t){return e.x-t.x}function p(e,t){if(t=function(e,t){var n,o=t,r=e.x,a=e.y,i=-1/0;do{if(a<=o.y&&a>=o.next.y&&o.next.y!==o.y){var s=o.x+(a-o.y)*(o.next.x-o.x)/(o.next.y-o.y);if(s<=r&&s>i){if(i=s,s===r){if(a===o.y)return o;if(a===o.next.y)return o.next}n=o.x<o.next.x?o:o.next}}o=o.next}while(o!==t);if(!n)return null;if(r===i)return n;var l,c=n,u=n.x,p=n.y,h=1/0;o=n;do{r>=o.x&&o.x>=u&&r!==o.x&&g(a<p?r:i,a,u,p,a<p?i:r,a,o.x,o.y)&&(l=Math.abs(a-o.y)/(r-o.x),w(o,e)&&(l<h||l===h&&(o.x>n.x||o.x===n.x&&d(n,o)))&&(n=o,h=l)),o=o.next}while(o!==c);return n}(e,t)){var n=k(t,e);r(t,t.next),r(n,n.next)}}function d(e,t){return m(e.prev,e,t.prev)<0&&m(t.next,e,e.next)<0}function h(e,t,n,o,r){return(e=1431655765&((e=858993459&((e=252645135&((e=16711935&((e=32767*(e-n)*r)|e<<8))|e<<4))|e<<2))|e<<1))|(t=1431655765&((t=858993459&((t=252645135&((t=16711935&((t=32767*(t-o)*r)|t<<8))|t<<4))|t<<2))|t<<1))<<1}function _(e){var t=e,n=e;do{(t.x<n.x||t.x===n.x&&t.y<n.y)&&(n=t),t=t.next}while(t!==e);return n}function g(e,t,n,o,r,a,i,s){return(r-i)*(t-s)-(e-i)*(a-s)>=0&&(e-i)*(o-s)-(n-i)*(t-s)>=0&&(n-i)*(a-s)-(r-i)*(o-s)>=0}function f(e,t){return e.next.i!==t.i&&e.prev.i!==t.i&&!function(e,t){var n=e;do{if(n.i!==e.i&&n.next.i!==e.i&&n.i!==t.i&&n.next.i!==t.i&&v(n,n.next,e,t))return!0;n=n.next}while(n!==e);return!1}(e,t)&&(w(e,t)&&w(t,e)&&function(e,t){var n=e,o=!1,r=(e.x+t.x)/2,a=(e.y+t.y)/2;do{n.y>a!=n.next.y>a&&n.next.y!==n.y&&r<(n.next.x-n.x)*(a-n.y)/(n.next.y-n.y)+n.x&&(o=!o),n=n.next}while(n!==e);return o}(e,t)&&(m(e.prev,e,t.prev)||m(e,t.prev,t))||y(e,t)&&m(e.prev,e,e.next)>0&&m(t.prev,t,t.next)>0)}function m(e,t,n){return(t.y-e.y)*(n.x-t.x)-(t.x-e.x)*(n.y-t.y)}function y(e,t){return e.x===t.x&&e.y===t.y}function v(e,t,n,o){var r=x(m(e,t,n)),a=x(m(e,t,o)),i=x(m(n,o,e)),s=x(m(n,o,t));return r!==a&&i!==s||(!(0!==r||!b(e,n,t))||(!(0!==a||!b(e,o,t))||(!(0!==i||!b(n,e,o))||!(0!==s||!b(n,t,o)))))}function b(e,t,n){return t.x<=Math.max(e.x,n.x)&&t.x>=Math.min(e.x,n.x)&&t.y<=Math.max(e.y,n.y)&&t.y>=Math.min(e.y,n.y)}function x(e){return e>0?1:e<0?-1:0}function w(e,t){return m(e.prev,e,e.next)<0?m(e,t,e.next)>=0&&m(e,e.prev,t)>=0:m(e,t,e.prev)<0||m(e,e.next,t)<0}function k(e,t){var n=new T(e.i,e.x,e.y),o=new T(t.i,t.x,t.y),r=e.next,a=t.prev;return e.next=t,t.prev=e,n.next=r,r.prev=n,o.next=n,n.prev=o,a.next=o,o.prev=a,o}function C(e,t,n,o){var r=new T(e,t,n);return o?(r.next=o.next,r.prev=o,o.next.prev=r,o.next=r):(r.prev=r,r.next=r),r}function S(e){e.next.prev=e.prev,e.prev.next=e.next,e.prevZ&&(e.prevZ.nextZ=e.nextZ),e.nextZ&&(e.nextZ.prevZ=e.prevZ)}function T(e,t,n){this.i=e,this.x=t,this.y=n,this.prev=null,this.next=null,this.z=null,this.prevZ=null,this.nextZ=null,this.steiner=!1}},function e(t,n,o){function r(i,s){if(!n[i]){if(!t[i]){var l="function"==typeof require&&require;if(!s&&l)return l(i,!0);if(a)return a(i,!0);var c=new Error("Cannot find module '"+i+"'");throw c.code="MODULE_NOT_FOUND",c}var u=n[i]={exports:{}};t[i][0].call(u.exports,(function(e){var n=t[i][1][e];return r(n||e)}),u,u.exports,e,t,n,o)}return n[i].exports}for(var a="function"==typeof require&&require,i=0;i<o.length;i++)r(o[i]);return r}({1:[function(t,n,o){var r,a=t("./lib/build-log"),i=t("./lib/epsilon"),s=t("./lib/intersecter"),l=t("./lib/segment-chainer"),c=t("./lib/segment-selector"),u=t("./lib/geojson"),p=!1,d=i();function h(e,t,n){var o=r.segments(e),a=r.segments(t),i=n(r.combine(o,a));return r.polygon(i)}r={buildLog:function(e){return!0===e?p=a():!1===e&&(p=!1),!1!==p&&p.list},epsilon:function(e){return d.epsilon(e)},segments:function(e){var t=s(!0,d,p);return e.regions.forEach(t.addRegion),{segments:t.calculate(e.inverted),inverted:e.inverted}},combine:function(e,t){return{combined:s(!1,d,p).calculate(e.segments,e.inverted,t.segments,t.inverted),inverted1:e.inverted,inverted2:t.inverted}},selectUnion:function(e){return{segments:c.union(e.combined,p),inverted:e.inverted1||e.inverted2}},selectIntersect:function(e){return{segments:c.intersect(e.combined,p),inverted:e.inverted1&&e.inverted2}},selectDifference:function(e){return{segments:c.difference(e.combined,p),inverted:e.inverted1&&!e.inverted2}},selectDifferenceRev:function(e){return{segments:c.differenceRev(e.combined,p),inverted:!e.inverted1&&e.inverted2}},selectXor:function(e){return{segments:c.xor(e.combined,p),inverted:e.inverted1!==e.inverted2}},polygon:function(e){return{regions:l(e.segments,d,p),inverted:e.inverted}},polygonFromGeoJSON:function(e){return u.toPolygon(r,e)},polygonToGeoJSON:function(e){return u.fromPolygon(r,d,e)},union:function(e,t){return h(e,t,r.selectUnion)},intersect:function(e,t){return h(e,t,r.selectIntersect)},difference:function(e,t){return h(e,t,r.selectDifference)},differenceRev:function(e,t){return h(e,t,r.selectDifferenceRev)},xor:function(e,t){return h(e,t,r.selectXor)}},e.PolyBool=r},{"./lib/build-log":2,"./lib/epsilon":3,"./lib/geojson":4,"./lib/intersecter":5,"./lib/segment-chainer":7,"./lib/segment-selector":8}],2:[function(e,t,n){t.exports=function(){var e,t=0,n=!1;function o(t,n){return e.list.push({type:t,data:n?JSON.parse(JSON.stringify(n)):void 0}),e}return e={list:[],segmentId:function(){return t++},checkIntersection:function(e,t){return o("check",{seg1:e,seg2:t})},segmentChop:function(e,t){return o("div_seg",{seg:e,pt:t}),o("chop",{seg:e,pt:t})},statusRemove:function(e){return o("pop_seg",{seg:e})},segmentUpdate:function(e){return o("seg_update",{seg:e})},segmentNew:function(e,t){return o("new_seg",{seg:e,primary:t})},segmentRemove:function(e){return o("rem_seg",{seg:e})},tempStatus:function(e,t,n){return o("temp_status",{seg:e,above:t,below:n})},rewind:function(e){return o("rewind",{seg:e})},status:function(e,t,n){return o("status",{seg:e,above:t,below:n})},vert:function(t){return t===n?e:(n=t,o("vert",{x:t}))},log:function(e){return"string"!=typeof e&&(e=JSON.stringify(e,!1,"  ")),o("log",{txt:e})},reset:function(){return o("reset")},selected:function(e){return o("selected",{segs:e})},chainStart:function(e){return o("chain_start",{seg:e})},chainRemoveHead:function(e,t){return o("chain_rem_head",{index:e,pt:t})},chainRemoveTail:function(e,t){return o("chain_rem_tail",{index:e,pt:t})},chainNew:function(e,t){return o("chain_new",{pt1:e,pt2:t})},chainMatch:function(e){return o("chain_match",{index:e})},chainClose:function(e){return o("chain_close",{index:e})},chainAddHead:function(e,t){return o("chain_add_head",{index:e,pt:t})},chainAddTail:function(e,t){return o("chain_add_tail",{index:e,pt:t})},chainConnect:function(e,t){return o("chain_con",{index1:e,index2:t})},chainReverse:function(e){return o("chain_rev",{index:e})},chainJoin:function(e,t){return o("chain_join",{index1:e,index2:t})},done:function(){return o("done")}}}},{}],3:[function(e,t,n){t.exports=function(e){"number"!=typeof e&&(e=1e-10);var t={epsilon:function(t){return"number"==typeof t&&(e=t),e},pointAboveOrOnLine:function(t,n,o){var r=n[0],a=n[1],i=o[0],s=o[1],l=t[0];return(i-r)*(t[1]-a)-(s-a)*(l-r)>=-e},pointBetween:function(t,n,o){var r=t[1]-n[1],a=o[0]-n[0],i=t[0]-n[0],s=o[1]-n[1],l=i*a+r*s;return!(l<e)&&!(l-(a*a+s*s)>-e)},pointsSameX:function(t,n){return Math.abs(t[0]-n[0])<e},pointsSameY:function(t,n){return Math.abs(t[1]-n[1])<e},pointsSame:function(e,n){return t.pointsSameX(e,n)&&t.pointsSameY(e,n)},pointsCompare:function(e,n){return t.pointsSameX(e,n)?t.pointsSameY(e,n)?0:e[1]<n[1]?-1:1:e[0]<n[0]?-1:1},pointsCollinear:function(t,n,o){var r=t[0]-n[0],a=t[1]-n[1],i=n[0]-o[0],s=n[1]-o[1];return Math.abs(r*s-i*a)<e},linesIntersect:function(t,n,o,r){var a=n[0]-t[0],i=n[1]-t[1],s=r[0]-o[0],l=r[1]-o[1],c=a*l-i*s;if(Math.abs(c)<e)return!1;var u=t[0]-o[0],p=t[1]-o[1],d=(s*p-l*u)/c,h=(a*p-i*u)/c,_={alongA:0,alongB:0,pt:[t[0]+d*a,t[1]+d*i]};return _.alongA=d<=-e?-2:d<e?-1:d-1<=-e?0:d-1<e?1:2,_.alongB=h<=-e?-2:h<e?-1:h-1<=-e?0:h-1<e?1:2,_},pointInsideRegion:function(t,n){for(var o=t[0],r=t[1],a=n[n.length-1][0],i=n[n.length-1][1],s=!1,l=0;l<n.length;l++){var c=n[l][0],u=n[l][1];u-r>e!=i-r>e&&(a-c)*(r-u)/(i-u)+c-o>e&&(s=!s),a=c,i=u}return s}};return t}},{}],4:[function(e,t,n){var o={toPolygon:function(e,t){function n(t){if(t.length<=0)return e.segments({inverted:!1,regions:[]});function n(t){var n=t.slice(0,t.length-1);return e.segments({inverted:!1,regions:[n]})}for(var o=n(t[0]),r=1;r<t.length;r++)o=e.selectDifference(e.combine(o,n(t[r])));return o}if("Polygon"===t.type)return e.polygon(n(t.coordinates));if("MultiPolygon"===t.type){for(var o=e.segments({inverted:!1,regions:[]}),r=0;r<t.coordinates.length;r++)o=e.selectUnion(e.combine(o,n(t.coordinates[r])));return e.polygon(o)}throw new Error("PolyBool: Cannot convert GeoJSON object to PolyBool polygon")},fromPolygon:function(e,t,n){function o(e,n){return t.pointInsideRegion([.5*(e[0][0]+e[1][0]),.5*(e[0][1]+e[1][1])],n)}function r(e){return{region:e,children:[]}}n=e.polygon(e.segments(n));var a=r(null);function i(e,t){for(var n=0;n<e.children.length;n++){if(o(t,(s=e.children[n]).region))return void i(s,t)}var a=r(t);for(n=0;n<e.children.length;n++){var s;o((s=e.children[n]).region,t)&&(a.children.push(s),e.children.splice(n,1),n--)}e.children.push(a)}for(var s=0;s<n.regions.length;s++){var l=n.regions[s];l.length<3||i(a,l)}function c(e,t){for(var n=0,o=e[e.length-1][0],r=e[e.length-1][1],a=[],i=0;i<e.length;i++){var s=e[i][0],l=e[i][1];a.push([s,l]),n+=l*o-s*r,o=s,r=l}return n<0!==t&&a.reverse(),a.push([a[0][0],a[0][1]]),a}var u=[];function p(e){var t=[c(e.region,!1)];u.push(t);for(var n=0;n<e.children.length;n++)t.push(d(e.children[n]))}function d(e){for(var t=0;t<e.children.length;t++)p(e.children[t]);return c(e.region,!0)}for(s=0;s<a.children.length;s++)p(a.children[s]);return u.length<=0?{type:"Polygon",coordinates:[]}:1==u.length?{type:"Polygon",coordinates:u[0]}:{type:"MultiPolygon",coordinates:u}}};t.exports=o},{}],5:[function(e,t,n){var o=e("./linked-list");t.exports=function(e,t,n){function r(e,t,o){return{id:n?n.segmentId():-1,start:e,end:t,myFill:{above:o.myFill.above,below:o.myFill.below},otherFill:null}}var a=o.create();function i(e,n){a.insertBefore(e,(function(o){return function(e,n,o,r,a,i){var s=t.pointsCompare(n,a);return 0!==s?s:t.pointsSame(o,i)?0:e!==r?e?1:-1:t.pointAboveOrOnLine(o,r?a:i,r?i:a)?1:-1}(e.isStart,e.pt,n,o.isStart,o.pt,o.other.pt)<0}))}function s(e,t){var n=function(e,t){var n=o.node({isStart:!0,pt:e.start,seg:e,primary:t,other:null,status:null});return i(n,e.end),n}(e,t);return function(e,t,n){var r=o.node({isStart:!1,pt:t.end,seg:t,primary:n,other:e,status:null});e.other=r,i(r,e.pt)}(n,e,t),n}function l(e,t){var o=r(t,e.seg.end,e.seg);return function(e,t){n&&n.segmentChop(e.seg,t),e.other.remove(),e.seg.end=t,e.other.pt=t,i(e.other,e.pt)}(e,t),s(o,e.primary)}function c(r,i){var s=o.create();function c(e){return s.findTransition((function(n){var o,r,a,i,s,l;return(o=e,r=n.ev,a=o.seg.start,i=o.seg.end,s=r.seg.start,l=r.seg.end,t.pointsCollinear(a,s,l)?t.pointsCollinear(i,s,l)?1:t.pointAboveOrOnLine(i,s,l)?1:-1:t.pointAboveOrOnLine(a,s,l)?1:-1)>0}))}function u(e,o){var r=e.seg,a=o.seg,i=r.start,s=r.end,c=a.start,u=a.end;n&&n.checkIntersection(r,a);var p=t.linesIntersect(i,s,c,u);if(!1===p){if(!t.pointsCollinear(i,s,c))return!1;if(t.pointsSame(i,u)||t.pointsSame(s,c))return!1;var d=t.pointsSame(i,c),h=t.pointsSame(s,u);if(d&&h)return o;var _=!d&&t.pointBetween(i,c,u),g=!h&&t.pointBetween(s,c,u);if(d)return g?l(o,s):l(e,u),o;_&&(h||(g?l(o,s):l(e,u)),l(o,i))}else 0===p.alongA&&(-1===p.alongB?l(e,c):0===p.alongB?l(e,p.pt):1===p.alongB&&l(e,u)),0===p.alongB&&(-1===p.alongA?l(o,i):0===p.alongA?l(o,p.pt):1===p.alongA&&l(o,s));return!1}for(var p=[];!a.isEmpty();){var d=a.getHead();if(n&&n.vert(d.pt[0]),d.isStart){n&&n.segmentNew(d.seg,d.primary);var h=c(d),_=h.before?h.before.ev:null,g=h.after?h.after.ev:null;function f(){if(_){var e=u(d,_);if(e)return e}return!!g&&u(d,g)}n&&n.tempStatus(d.seg,!!_&&_.seg,!!g&&g.seg);var m,y=f();if(y){var v;if(e)(v=null===d.seg.myFill.below||d.seg.myFill.above!==d.seg.myFill.below)&&(y.seg.myFill.above=!y.seg.myFill.above);else y.seg.otherFill=d.seg.myFill;n&&n.segmentUpdate(y.seg),d.other.remove(),d.remove()}if(a.getHead()!==d){n&&n.rewind(d.seg);continue}if(e)v=null===d.seg.myFill.below||d.seg.myFill.above!==d.seg.myFill.below,d.seg.myFill.below=g?g.seg.myFill.above:r,d.seg.myFill.above=v?!d.seg.myFill.below:d.seg.myFill.below;else if(null===d.seg.otherFill)m=g?d.primary===g.primary?g.seg.otherFill.above:g.seg.myFill.above:d.primary?i:r,d.seg.otherFill={above:m,below:m};n&&n.status(d.seg,!!_&&_.seg,!!g&&g.seg),d.other.status=h.insert(o.node({ev:d}))}else{var b=d.status;if(null===b)throw new Error("PolyBool: Zero-length segment detected; your epsilon is probably too small or too large");if(s.exists(b.prev)&&s.exists(b.next)&&u(b.prev.ev,b.next.ev),n&&n.statusRemove(b.ev.seg),b.remove(),!d.primary){var x=d.seg.myFill;d.seg.myFill=d.seg.otherFill,d.seg.otherFill=x}p.push(d.seg)}a.getHead().remove()}return n&&n.done(),p}return e?{addRegion:function(e){for(var o,r,a,i=e[e.length-1],l=0;l<e.length;l++){o=i,i=e[l];var c=t.pointsCompare(o,i);0!==c&&s((r=c<0?o:i,a=c<0?i:o,{id:n?n.segmentId():-1,start:r,end:a,myFill:{above:null,below:null},otherFill:null}),!0)}},calculate:function(e){return c(e,!1)}}:{calculate:function(e,t,n,o){return e.forEach((function(e){s(r(e.start,e.end,e),!0)})),n.forEach((function(e){s(r(e.start,e.end,e),!1)})),c(t,o)}}}},{"./linked-list":6}],6:[function(e,t,n){t.exports={create:function(){var e={root:{root:!0,next:null},exists:function(t){return null!==t&&t!==e.root},isEmpty:function(){return null===e.root.next},getHead:function(){return e.root.next},insertBefore:function(t,n){for(var o=e.root,r=e.root.next;null!==r;){if(n(r))return t.prev=r.prev,t.next=r,r.prev.next=t,void(r.prev=t);o=r,r=r.next}o.next=t,t.prev=o,t.next=null},findTransition:function(t){for(var n=e.root,o=e.root.next;null!==o&&!t(o);)n=o,o=o.next;return{before:n===e.root?null:n,after:o,insert:function(e){return e.prev=n,e.next=o,n.next=e,null!==o&&(o.prev=e),e}}}};return e},node:function(e){return e.prev=null,e.next=null,e.remove=function(){e.prev.next=e.next,e.next&&(e.next.prev=e.prev),e.prev=null,e.next=null},e}}},{}],7:[function(e,t,n){t.exports=function(e,t,n){var o=[],r=[];return e.forEach((function(e){var a=e.start,i=e.end;if(t.pointsSame(a,i))console.warn("PolyBool: Warning: Zero-length segment detected; your epsilon is probably too small or too large");else{n&&n.chainStart(e);for(var s={index:0,matches_head:!1,matches_pt1:!1},l={index:0,matches_head:!1,matches_pt1:!1},c=s,u=0;u<o.length;u++){var p=(f=o[u])[0],d=(f[1],f[f.length-1]);f[f.length-2];if(t.pointsSame(p,a)){if(C(u,!0,!0))break}else if(t.pointsSame(p,i)){if(C(u,!0,!1))break}else if(t.pointsSame(d,a)){if(C(u,!1,!0))break}else if(t.pointsSame(d,i)&&C(u,!1,!1))break}if(c===s)return o.push([a,i]),void(n&&n.chainNew(a,i));if(c===l){n&&n.chainMatch(s.index);var h=s.index,_=s.matches_pt1?i:a,g=s.matches_head,f=o[h],m=g?f[0]:f[f.length-1],y=g?f[1]:f[f.length-2],v=g?f[f.length-1]:f[0],b=g?f[f.length-2]:f[1];return t.pointsCollinear(y,m,_)&&(g?(n&&n.chainRemoveHead(s.index,_),f.shift()):(n&&n.chainRemoveTail(s.index,_),f.pop()),m=y),t.pointsSame(v,_)?(o.splice(h,1),t.pointsCollinear(b,v,m)&&(g?(n&&n.chainRemoveTail(s.index,m),f.pop()):(n&&n.chainRemoveHead(s.index,m),f.shift())),n&&n.chainClose(s.index),void r.push(f)):void(g?(n&&n.chainAddHead(s.index,_),f.unshift(_)):(n&&n.chainAddTail(s.index,_),f.push(_)))}var x=s.index,w=l.index;n&&n.chainConnect(x,w);var k=o[x].length<o[w].length;s.matches_head?l.matches_head?k?(S(x),T(x,w)):(S(w),T(w,x)):T(w,x):l.matches_head?T(x,w):k?(S(x),T(w,x)):(S(w),T(x,w))}function C(e,t,n){return c.index=e,c.matches_head=t,c.matches_pt1=n,c===s?(c=l,!1):(c=null,!0)}function S(e){n&&n.chainReverse(e),o[e].reverse()}function T(e,r){var a=o[e],i=o[r],s=a[a.length-1],l=a[a.length-2],c=i[0],u=i[1];t.pointsCollinear(l,s,c)&&(n&&n.chainRemoveTail(e,s),a.pop(),s=l),t.pointsCollinear(s,c,u)&&(n&&n.chainRemoveHead(r,c),i.shift()),n&&n.chainJoin(e,r),o[e]=a.concat(i),o.splice(r,1)}})),r}},{}],8:[function(e,t,n){function o(e,t,n){var o=[];return e.forEach((function(e){var r=(e.myFill.above?8:0)+(e.myFill.below?4:0)+(e.otherFill&&e.otherFill.above?2:0)+(e.otherFill&&e.otherFill.below?1:0);0!==t[r]&&o.push({id:n?n.segmentId():-1,start:e.start,end:e.end,myFill:{above:1===t[r],below:2===t[r]},otherFill:null})})),n&&n.selected(o),o}var r={union:function(e,t){return o(e,[0,2,1,0,2,2,0,0,1,0,1,0,0,0,0,0],t)},intersect:function(e,t){return o(e,[0,0,0,0,0,2,0,2,0,0,1,1,0,2,1,0],t)},difference:function(e,t){return o(e,[0,0,0,0,2,0,2,0,1,1,0,0,0,1,2,0],t)},differenceRev:function(e,t){return o(e,[0,2,1,0,0,0,1,1,0,2,0,2,0,0,0,0],t)},xor:function(e,t){return o(e,[0,2,1,0,2,0,0,1,1,0,0,2,0,1,2,0],t)}};t.exports=r},{}]},{},[1])}},_canvas_.layers.registerLayer("library",_canvas_.library),_canvas_.library.audio.nowReady=function(){_canvas_.layers.declareLayerAsLoaded("library")},_canvas_.core=new function(){this.versionInformation={tick:0,lastDateModified:{y:2021,m:1,d:11}};const core=this,core_engine=new Worker("js/core_engine.min.js"),communicationModuleMaker=function(e,t){const n=this;this.log=function(){},this.function={},this.delayedFunction={};let o=0;const r={};e.onmessage=function(t){let o=t.data;if(o.response)r[o.id](o.cargo),delete r[o.id];else{if(null==o.cargo)return;o.cargo.function in n.function?(null==o.cargo.arguments&&(o.cargo.arguments=[]),null==o.id?n.function[o.cargo.function](...o.cargo.arguments):e.postMessage({id:o.id,response:!0,cargo:n.function[o.cargo.function](...o.cargo.arguments)})):o.cargo.function in n.delayedFunction&&(null==o.cargo.arguments&&(o.cargo.arguments=[]),null==o.id?n.delayedFunction[o.cargo.function](...o.cargo.arguments):n.delayedFunction[o.cargo.function](...[function(t){e.postMessage({id:o.id,response:!0,cargo:t})}].concat(o.cargo.arguments)))}},this.run_withoutPromise=function(t,n=[],o){e.postMessage({id:void 0,response:!1,cargo:{function:t,arguments:n}},o)},this.run_withPromise=function(t,n=[],a){let i=o++;return new Promise((o,s)=>{r[i]=o,e.postMessage({id:i,response:!1,cargo:{function:t,arguments:n}},a)})}},communicationModule=new communicationModuleMaker(core_engine,"core_console");_canvas_.setAttribute("tabIndex",1),_canvas_.style.outline="none";const dev=new function(){const e="core_console",t={service:!1,interface:!1,elementLibrary:{Group:!1,Rectangle:!1,RectangleWithOutline:!1,Circle:!1,CircleWithOutline:!1,Polygon:!1,PolygonWithOutline:!1,Path:!1,Image:!1,Canvas:!1,Character:!1,CharacterString:!1},element:!1,arrangement:!1,render:!1,viewport:!1,stats:!1,callback:!1};this.log={},Object.entries(t).forEach(n=>{"object"==typeof n[1]?(this.log[n[0]]={},Object.keys(t[n[0]]).forEach(o=>{this.log[n[0]][o]=function(){t[n[0]][o]&&console.log(e+"."+n[0]+"."+o+arguments[0],...new Array(...arguments).slice(1))}})):this.log[n[0]]=function(){t[n[0]]&&console.log(e+"."+n[0]+arguments[0],...new Array(...arguments).slice(1))}});const n={};this.count=function(e){e in n?n[e]++:n[e]=1},this.countResults=function(){return n}};communicationModule.function.frame=function(e){_canvas_.getContext("bitmaprenderer").transferFromImageBitmap(e)},communicationModule.function.ready=function(){core.ready()},communicationModule.function.setCanvasSize=function(e,t){_canvas_.setAttribute("width",e),_canvas_.setAttribute("height",t)},communicationModule.function.updateElement=function(e,t={}){const n=_canvas_.core.element.getElementById(e);null!=n.__updateValues&&n.__updateValues(t)},communicationModule.function.runElementCallback=function(e,t={}){const n=_canvas_.core.element.getElementById(e);null!=n.__runCallback&&n.__runCallback(t)},communicationModule.function.getCanvasAttributes=function(e=[],t=[]){return e.map((e,n)=>_canvas_.getAttribute((t[n]?__canvasPrefix:"")+e))},communicationModule.function.setCanvasAttributes=function(e=[],t=[],n=[]){e.map((e,o)=>{_canvas_.setAttribute((n[o]?__canvasPrefix:"")+e,t[o])})},communicationModule.function.getCanvasParentAttributes=function(e=[],t=[]){return e.map((e,n)=>_canvas_.parentElement[(t[n]?__canvasPrefix:"")+e])},communicationModule.function.getDocumentAttributes=function(attributeNames=[]){return attributeNames.map(attribute=>eval("document."+attribute))},communicationModule.function.setDocumentAttributes=function(attributeNames=[],values=[]){return attributeNames.map((attribute,index)=>{eval("document."+attribute+' = "'+values[index]+'"')})},communicationModule.function.getWindowAttributes=function(attributeNames=[]){return attributeNames.map(attribute=>eval("window."+attribute))},communicationModule.function.setWindowAttributes=function(attributes=[]){attributes.map((attribute,index)=>{eval("window."+attribute.name+' = "'+attribute.value+'"')})};const interface=new function(){this.operator=new function(){this.element=new function(){this.getAvailableElements=function(){return communicationModule.run_withPromise("operator__element__getAvailableElements")},this.create=function(e,t){return communicationModule.run_withPromise("operator__element__create",[e,t])},this.delete=function(e){communicationModule.run_withoutPromise("operator__element__delete",[e])},this.deleteAllCreated=function(){communicationModule.run_withoutPromise("operator__element__deleteAllCreated")},this.getTypeById=function(e){return communicationModule.run_withPromise("operator__element__getTypeById",[e])},this.executeMethod=new function(){this.getElementType=function(e){communicationModule.run_withPromise("operator__element__executeMethod__getElementType",[e])},this.getName=function(e){communicationModule.run_withPromise("operator__element__executeMethod__getName",[e])},this.setName=function(e,t){communicationModule.run_withoutPromise("operator__element__executeMethod__getName",[e,t])},this.getParentId=function(e){communicationModule.run_withPromise("operator__element__executeMethod__getParentId",[e])},this.setX=function(e,t){communicationModule.run_withoutPromise("operator__element__executeMethod__setX",[e,t])},this.setY=function(e,t){communicationModule.run_withoutPromise("operator__element__executeMethod__setY",[e,t])},this.setAngle=function(e,t){communicationModule.run_withoutPromise("operator__element__executeMethod__setAngle",[e,t])},this.setScale=function(e,t){communicationModule.run_withoutPromise("operator__element__executeMethod__setScale",[e,t])},this.getIgnored=function(e){return communicationModule.run_withPromise("operator__element__executeMethod__getIgnored",[e])},this.setIgnored=function(e,t){communicationModule.run_withoutPromise("operator__element__executeMethod__setIgnored",[e,t])},this.unifiedAttribute=function(e,t,n){communicationModule.run_withoutPromise("operator__element__executeMethod__unifiedAttribute",[e,t],n)},this.getAddress=function(e){return communicationModule.run_withPromise("operator__element__executeMethod__getAddress",[e])},this.getAllowComputeExtremities=function(e){return communicationModule.run_withPromise("operator__element__executeMethod__getAllowComputeExtremities",[e])},this.setAllowComputeExtremities=function(e,t){communicationModule.run_withoutPromise("operator__element__executeMethod__setAllowComputeExtremities",[e,t])},this.getDotFrame=function(e){return communicationModule.run_withPromise("operator__element__executeMethod__getDotFrame",[e])},this.setDotFrame=function(e,t){communicationModule.run_withoutPromise("operator__element__executeMethod__setDotFrame",[e,t])},this.info=function(e){return communicationModule.run_withPromise("operator__element__executeMethod__info",[e])},this.dump=function(e){communicationModule.run_withoutPromise("operator__element__executeMethod__dump",[e])},this.Group=new function(){this.setUnifiedAttribute=function(e,t,n,o,r,a){communicationModule.run_withoutPromise("operator__element__executeMethod__Group__setUnifiedAttribute",[e,t,n,o,r,a])},this.children=function(e){return communicationModule.run_withPromise("operator__element__executeMethod__Group__children",[e])},this.getChildByName=function(e,t){return communicationModule.run_withPromise("operator__element__executeMethod__Group__getChildByName",[e,t])},this.append=function(e,t){communicationModule.run_withoutPromise("operator__element__executeMethod__Group__append",[e,t])},this.prepend=function(e,t){communicationModule.run_withoutPromise("operator__element__executeMethod__Group__prepend",[e,t])},this.remove=function(e,t){communicationModule.run_withoutPromise("operator__element__executeMethod__Group__remove",[e,t])},this.clear=function(e){communicationModule.run_withoutPromise("operator__element__executeMethod__Group__clear",[e])},this.shift=function(e,t,n){communicationModule.run_withoutPromise("operator__element__executeMethod__Group__shift",[e,t,n])},this.replaceWithTheseChildren=function(e,t){communicationModule.run_withoutPromise("operator__element__executeMethod__Group__replace_with_these_children",[e,t])},this.getElementsUnderPoint=function(e,t,n){return communicationModule.run_withPromise("operator__element__executeMethod__Group__getElementsUnderPoint",[e,t,n])},this.getElementsUnderArea=function(e,t){return communicationModule.run_withPromise("operator__element__executeMethod__Group__getElementsUnderArea",[e,t])},this.stencil=function(e,t){communicationModule.run_withoutPromise("operator__element__executeMethod__Group__stencil",[e,t])},this.getClipActive=function(e){return communicationModule.run_withPromise("operator__element__executeMethod__Group__getClipActive",[e])},this.setClipActive=function(e,t){communicationModule.run_withoutPromise("operator__element__executeMethod__Group__setClipActive",[e,t])}}},this.createSetAppend=function(e,t,n,o){return communicationModule.run_withPromise("operator__element___createSetAppend",[e,t,n,o])},this._dump=function(){communicationModule.run_withoutPromise("operator__element___dump")}},this.arrangement=new function(){this.prepend=function(e){communicationModule.run_withoutPromise("operator__arrangement__prepend",[e])},this.append=function(e){communicationModule.run_withoutPromise("operator__arrangement__append",[e])},this.remove=function(e){communicationModule.run_withoutPromise("operator__arrangement__remove",[e])},this.clear=function(){communicationModule.run_withoutPromise("operator__arrangement__clear")},this.getElementByAddress=function(e){return communicationModule.run_withPromise("operator__arrangement__getElementByAddress",[e])},this.getElementsUnderPoint=function(e,t){return communicationModule.run_withPromise("operator__arrangement__getElementsUnderPoint",[e,t])},this.getElementsUnderArea=function(e){return communicationModule.run_withPromise("operator__arrangement__getElementsUnderArea",[e])},this.printTree=function(e){communicationModule.run_withoutPromise("operator__arrangement__printTree",[e])},this.printSurvey=function(){communicationModule.run_withoutPromise("operator__arrangement__printSurvey")},this._dump=function(){communicationModule.run_withoutPromise("operator__arrangement___dump")}},this.render=new function(){this.clearColour=function(e){communicationModule.run_withoutPromise("operator__render__clearColour",[e])},this.getCanvasSize=function(){return communicationModule.run_withPromise("operator__render__getCanvasSize",void 0)},this.adjustCanvasSize=function(e,t){communicationModule.run_withoutPromise("operator__render__adjustCanvasSize",[e,t])},this.refreshCoordinates=function(){communicationModule.run_withoutPromise("operator__render__refreshCoordinates")},this.refresh=function(){communicationModule.run_withoutPromise("operator__render__refresh")},this.activeLimitToFrameRate=function(e){communicationModule.run_withoutPromise("operator__render__activeLimitToFrameRate",[e])},this.frameRateLimit=function(e){communicationModule.run_withoutPromise("operator__render__frameRateLimit",[e])},this.allowFrameSkipping=function(e){communicationModule.run_withoutPromise("operator__render__allowFrameSkipping",[e])},this.frame=function(e){communicationModule.run_withoutPromise("operator__render__frame",[e])},this.active=function(e){communicationModule.run_withoutPromise("operator__render__active",[e])},this.drawDot=function(e,t,n,o){communicationModule.run_withoutPromise("operator__render__drawDot",[e,t,n,o])},this._dump=function(){communicationModule.run_withoutPromise("operator__render___dump")}},this.viewport=new function(){this.position=function(e,t){communicationModule.run_withoutPromise("operator__viewport__position",[e,t])},this.scale=function(e){communicationModule.run_withoutPromise("operator__viewport__scale",[e])},this.angle=function(e){communicationModule.run_withoutPromise("operator__viewport__angle",[e])},this.anchor=function(e,t){communicationModule.run_withoutPromise("operator__viewport__anchor",[e,t])},this.scaleAroundWindowPoint=function(e,t,n){return communicationModule.run_withPromise("operator__viewport__scaleAroundWindowPoint",[e,t,n])},this.getElementsUnderPoint=function(e,t){return communicationModule.run_withPromise("operator__viewport__getElementsUnderPoint",[e,t])},this.getElementsUnderArea=function(e){return communicationModule.run_withPromise("operator__viewport__getElementsUnderArea",[e])},this.stopMouseScroll=function(e){communicationModule.run_withoutPromise("operator__viewport__stopMouseScroll",[e])},this.refresh=function(){communicationModule.run_withoutPromise("operator__viewport___refresh")},this._dump=function(){communicationModule.run_withoutPromise("operator__viewport___dump")}},this.stats=new function(){this.active=function(e){communicationModule.run_withoutPromise("operator__stats__active",[e])},this.getReport=function(){return communicationModule.run_withPromise("operator__stats__getReport")},this.elementRenderDecision_clearData=function(){return communicationModule.run_withPromise("operator__stats__elementRenderDecision_clearData")},this._dump=function(){communicationModule.run_withoutPromise("operator__stats___dump")}},this.callback=new function(){this.listCallbackTypes=function(){return communicationModule.run_withPromise("operator__callback__listCallbackTypes")},this.listActivationModes=function(){return communicationModule.run_withPromise("operator__callback__listActivationModes")},this.attachCallback=function(e,t){communicationModule.run_withoutPromise("operator__callback__attachCallback",[e,t])},this.removeCallback=function(e,t){communicationModule.run_withoutPromise("operator__callback__removeCallback",[e,t])},this.callbackActivationMode=function(e){communicationModule.run_withoutPromise("operator__callback__callbackActivationMode",[e])},this._dump=function(){communicationModule.run_withoutPromise("operator__callback___dump")}},this.meta=new function(){this.refresh=function(){return communicationModule.run_withPromise("operator__meta__refresh")}}}};this.if=interface,this.element=new function(){const e=new function(){const e=function(e,t){const n=e;this.getType=function(){return n};let o=void 0;this.getId=function(){return o},this.__onIdReceived=function(){},this.__id=function(e){o=e,s(s()),Object.entries(l).forEach(e=>{core.callback.attachCallback(this,e[0],e[1])}),null!=this.__repush&&this.__repush(),this.__onIdReceived&&this.__onIdReceived(o)};let r=t;this.getName=function(){return r},this.parent=void 0,this.getAddress=function(){return(null!=this.parent&&0!=this.parent.getId()?this.parent.getAddress():"")+"/"+r},this.getOffset=function(){let e={x:0,y:0,scale:1,angle:0};if(this.parent){const t=this.parent.getOffset(),n=_canvas_.library.math.cartesianAngleAdjust(a.x,a.y,t.angle);e={x:n.x*t.scale+t.x,y:n.y*t.scale+t.y,scale:t.scale*a.scale,angle:t.angle+a.angle}}else e={x:a.x,y:a.y,scale:a.scale,angle:a.angle};return e};const a={},i=[];this.__setupSimpleAttribute=function(e,t){a[e]=t,this[e]=function(t){if(null==t)return a[e];if(t!=a[e]&&(a[e]=t,null!=this.getId())){const n={};n[e]=t,interface.operator.element.executeMethod.unifiedAttribute(this.getId(),n)}}},this.__setupTransferableAttribute=function(e,t){i.push(e),a[e]=t,this[e]=function(t){if(null==t)return a[e];if(t!=a[e]&&(a[e]=t,null!=this.getId())){const n={};n[e]=t,interface.operator.element.executeMethod.unifiedAttribute(this.getId(),n,[t])}}},Object.entries({x:0,y:0,angle:0,scale:1,ignored:!1}).forEach(([e,t])=>this.__setupSimpleAttribute(e,t));const s=function(e){if(null==e)return a;Object.keys(e).forEach(t=>{a[t]=e[t]}),null!=o&&interface.operator.element.executeMethod.unifiedAttribute(o,e,i.map(t=>e[t]).filter(e=>null!=e))};this.unifiedAttribute=function(e){return s(e)};const l={};this.getCallback=function(e){return l[e]},this.attachCallback=function(e,t){l[e]=t,null!=o&&interface.operator.callback.attachCallback(this,e,t)},this.removeCallback=function(e){delete l[e],null!=o&&interface.operator.callback.removeCallback(this,e)},this._dump=function(){null!=o&&interface.operator.element.executeMethod.dump(o)}};this.Group=function(t){e.call(this,"Group",t),Object.entries({heedCamera:!1,heedCameraActive:!1,clipActive:!1,framebufferActive:!1}).forEach(([e,t])=>this.__setupSimpleAttribute(e,t));const n=this;let o=[],r={},a=void 0;function i(e){return null!=e&&(null==e.getName()||0==e.getName().length?(console.error('group error: element with no name being inserted into group "'+n.getAddress()+'", therefore; the element will not be added'),!1):!function(e){return null!=r[e]}(e.getName())||(console.error('group error: element with name "'+e.getName()+'" already exists in group "'+n.getAddress()+'", therefore; the element will not be added'),!1))}this.__repush=function(){if(n.unifiedAttribute(n.unifiedAttribute()),null!=a){!function e(){null==a.getId()?setTimeout(e,1):interface.operator.element.executeMethod.Group.stencil(n.getId(),a.getId())}()}!function e(){const t=o.map(e=>e.getId());-1!=t.indexOf(-1)?setTimeout(e,1):interface.operator.element.executeMethod.Group.replaceWithTheseChildren(n.getId(),t.filter(e=>null!=e))}()},this.getChildren=function(){return o},this.getChildByName=function(e){return r[e]},this.getChildIndexByName=function(e){return o.indexOf(r[e])},this.contains=function(e){return-1!=o.indexOf(e)},this.prepend=function(e){if(!i(e))return!1;o.includes(e)||(e.parent=this,o.push(e),r[e.getName()]=e,e.getCallback("onadd")&&e.getCallback("onadd")(),null==e.getId()?(e.__calledBy=n.getAddress(),e.__onIdReceived=function(){null!=n.getId()&&-1!=o.indexOf(e)&&interface.operator.element.executeMethod.Group.prepend(n.getId(),e.getId())}):null!=n.getId()&&interface.operator.element.executeMethod.Group.prepend(n.getId(),e.getId()))},this.append=function(e){if(!i(e))return!1;o.includes(e)||(e.parent=this,o.push(e),r[e.getName()]=e,e.getCallback("onadd")&&e.getCallback("onadd")(),null==e.getId()?(e.__calledBy=n.getAddress(),e.__onIdReceived=function(){null!=n.getId()&&-1!=o.indexOf(e)&&interface.operator.element.executeMethod.Group.append(n.getId(),e.getId())}):null!=n.getId()&&interface.operator.element.executeMethod.Group.append(n.getId(),e.getId()))},this.remove=function(e){o.includes(e)&&("Group"==e.getType()&&e.clear(),e.getCallback("onremove")&&e.getCallback("onremove")(),o.splice(o.indexOf(e),1),delete r[e.getName()],e.parent=void 0,null==e.getId()?e.__onIdReceived=function(){-1==o.indexOf(e)&&interface.operator.element.executeMethod.Group.remove(n.getId(),e.getId())}:null!=n.getId()&&interface.operator.element.executeMethod.Group.remove(n.getId(),e.getId()))},this.clear=function(){o.forEach(e=>{e.getCallback("onremove")&&e.getCallback("onremove")()}),o=[],r={},null!=n.getId()&&interface.operator.element.executeMethod.Group.clear(n.getId())},this.shift=function(e,t){o.includes(e)&&(o.splice(o.indexOf(e),1),o.splice(t,0,e),e.getCallback("onshift")&&e.getCallback("onshift")(o.indexOf(e)),null==e.getId()?e.__onIdReceived=function(){null!=n.getId()&&-1!=o.indexOf(e)&&interface.operator.element.executeMethod.Group.replaceWithTheseChildren(n.getId(),o.map(e=>e.getId()).filter(e=>null!=e))}:null!=n.getId()&&interface.operator.element.executeMethod.Group.shift(n.getId(),e.getId(),t))},this.getElementsUnderPoint=function(e,t){if(null!=n.getId())return interface.operator.element.executeMethod.Group.getElementsUnderPoint(n.getId(),e,t)},this.stencil=function(e){return null==e?a:!!i(e)&&(a=e,void(null==e.getId()?e.__onIdReceived=function(){null!=n.getId()&&interface.operator.element.executeMethod.Group.stencil(n.getId(),e.getId())}:null!=n.getId()&&interface.operator.element.executeMethod.Group.stencil(n.getId(),e.getId())))}},this.Rectangle=function(t){e.call(this,"Rectangle",t),Object.entries({colour:{r:1,g:0,b:0,a:1},anchor:{x:0,y:0},width:10,height:10}).forEach(([e,t])=>this.__setupSimpleAttribute(e,t))},this.RectangleWithOutline=function(t){e.call(this,"RectangleWithOutline",t),Object.entries({colour:{r:1,g:0,b:0,a:1},lineColour:{r:1,g:0,b:0,a:1},anchor:{x:0,y:0},width:10,height:10,thickness:0}).forEach(([e,t])=>this.__setupSimpleAttribute(e,t))},this.Circle=function(t){e.call(this,"Circle",t),Object.entries({colour:{r:1,g:0,b:0,a:1},radius:10,detail:25}).forEach(([e,t])=>this.__setupSimpleAttribute(e,t))},this.CircleWithOutline=function(t){e.call(this,"CircleWithOutline",t),Object.entries({colour:{r:1,g:0,b:0,a:1},lineColour:{r:1,g:0,b:0,a:1},radius:10,detail:25,thickness:0}).forEach(([e,t])=>this.__setupSimpleAttribute(e,t))},this.Polygon=function(t){function n(e){return e.flatMap(e=>[e.x,e.y])}function o(e){const t=[];for(let n=0;n<e.length;n+=2)t.push({x:e[n],y:e[n+1]});return t}e.call(this,"Polygon",t),Object.entries({colour:{r:1,g:0,b:0,a:1},points:[]}).forEach(([e,t])=>this.__setupSimpleAttribute(e,t)),this.pointsAsXYArray=function(e){if(null==e)return o(this.points());this.points(n(e))};const r=this.unifiedAttribute;this.unifiedAttribute=function(e){if(null==e)return r();null!=e.points&&(e.pointsAsXYArray=o(e.points)),null!=e.pointsAsXYArray&&(e.points=n(e.pointsAsXYArray)),r(e)}},this.PolygonWithOutline=function(t){function n(e){return e.flatMap(e=>[e.x,e.y])}function o(e){const t=[];for(let n=0;n<e.length;n+=2)t.push({x:e[n],y:e[n+1]});return t}e.call(this,"PolygonWithOutline",t),Object.entries({colour:{r:1,g:0,b:0,a:1},lineColour:{r:1,g:0,b:0,a:1},points:[],thickness:0,jointDetail:25,jointType:"sharp",sharpLimit:4}).forEach(([e,t])=>this.__setupSimpleAttribute(e,t)),this.pointsAsXYArray=function(e){if(null==e)return o(this.points());this.points(n(e))};const r=this.unifiedAttribute;this.unifiedAttribute=function(e){if(null==e)return r();null!=e.points&&(e.pointsAsXYArray=o(e.points)),null!=e.pointsAsXYArray&&(e.points=n(e.pointsAsXYArray)),r(e)}},this.Path=function(t){function n(e){return e.flatMap(e=>[e.x,e.y])}function o(e){const t=[];for(let n=0;n<e.length;n+=2)t.push({x:e[n],y:e[n+1]});return t}e.call(this,"Path",t),Object.entries({colour:{r:1,g:0,b:0,a:1},points:[],thickness:0,capType:"none",jointDetail:25,jointType:"sharp",sharpLimit:4,loop:!1}).forEach(([e,t])=>this.__setupSimpleAttribute(e,t)),this.pointsAsXYArray=function(e){if(null==e)return o(this.points());this.points(n(e))};const r=this.unifiedAttribute;this.unifiedAttribute=function(e){if(null==e)return r();null!=e.points&&(e.pointsAsXYArray=o(e.points)),null!=e.pointsAsXYArray&&(e.points=n(e.pointsAsXYArray)),r(e)}},this.Image=function(t){e.call(this,"Image",t),Object.entries({x:0,y:0,angle:0,anchor:{x:0,y:0},width:10,height:10,url:void 0}).forEach(([e,t])=>this.__setupSimpleAttribute(e,t)),Object.entries({bitmap:void 0}).forEach(([e,t])=>this.__setupTransferableAttribute(e,t))},this.Canvas=function(t){e.call(this,"Canvas",t),Object.entries({x:0,y:0,angle:0,anchor:{x:0,y:0},width:10,height:10}).forEach(([e,t])=>this.__setupSimpleAttribute(e,t));const n={object:document.createElement("canvas"),context:void 0,resolution:1};function o(e){n.object.setAttribute("width",e.width()*n.resolution),n.object.setAttribute("height",e.height()*n.resolution)}n.context=n.object.getContext("2d"),o(this),this._=n.context,this.$=function(e){return e*n.resolution},this.resolution=function(e){if(null==e)return n.resolution;n.resolution=e,o(this)},this.requestUpdate=function(){null!=this.getId()&&createImageBitmap(n.object).then(e=>{interface.operator.element.executeMethod.unifiedAttribute(this.getId(),{bitmap:e},[e])})},this.requestUpdate(),this.__repush=function(){this.requestUpdate()};const r=this.unifiedAttribute;this.unifiedAttribute=function(e){if(null==e)return r();null!=e.resolution&&(this.resolution(e.resolution),delete e.resolution),r(e),o(this)}},this.Character=function(t){e.call(this,"Character",t),Object.entries({colour:{r:1,g:0,b:0,a:1},x:0,y:0,angle:0,anchor:{x:0,y:0},width:10,height:10,font:"defaultThin",character:"",printingMode:{horizontal:"left",vertical:"bottom"}}).forEach(([e,t])=>this.__setupSimpleAttribute(e,t))},this.CharacterString=function(t){e.call(this,"CharacterString",t),Object.entries({colour:{r:1,g:0,b:0,a:1},x:0,y:0,angle:0,width:10,height:10,font:"defaultThin",string:"",spacing:.5,interCharacterSpacing:0,printingMode:{widthCalculation:"absolute",horizontal:"left",vertical:"bottom"}}).forEach(([e,t])=>this.__setupSimpleAttribute(e,t));const n={resultingWidth:0},o={onFontUpdateCallback:function(){}};this.__updateValues=function(e){Object.keys(e).forEach(t=>{n[t]=e[t]})},this.__runCallback=function(e){Object.entries(e).forEach(([e,t])=>{e in o&&o[e](t)})},this.resultingWidth=function(){return n.resultingWidth};const r=this.getCallback;this.getCallback=function(e){if(e in o)return o[e];r(e)};const a=this.attachCallback;this.attachCallback=function(e,t){e in o?o[e]=t:a(e)};const i=this.removeCallback;this.removeCallback=function(e){e in o?delete o[e]:i(e)}}},t=[];this.getAvailableElements=function(){return Object.keys(e)},this.getElementById=function(e){return t[e]},this.__createLocalWithId=function(n,o,r){return null==n||null==o||null==r?(console.error("core.element.__createLocalWithId(",n,o,r),void console.error("missing arguments")):null!=t[r]?(console.error("core.element.__createLocalWithId(",n,o,r),void console.error("proxy already present")):(t[r]=new e[n](o),t[r].__id(r),t[r])},this.create=function(n,o){if(!(n in e))return void console.error('core.element.create -> element type: "'+n+'" is not a known type');const r=new e[n](o);return interface.operator.element.create(n,o).then(e=>{r.__id(e),t[e]=r}),r},this.delete=function(e){interface.operator.element.delete(e.getId()),t[e.getId()]=void 0},this.deleteAllCreated=function(){interface.operator.element.deleteAllCreated(),t=[]},this._dump=function(){console.log("┌─Console Element Dump─"),console.log("│ elementRegistry:",t),console.log("└──────────────────────"),interface.operator.element._dump()}},this.arrangement=new function(){const e=core.element.__createLocalWithId("Group","root",0);this.prepend=function(t){return e.prepend(t)},this.append=function(t){return e.append(t)},this.remove=function(t){return e.remove(t)},this.clear=function(){return e.clear()},this.shift=function(t,n){return e.shift(t,n)},this.getElementByAddress=function(t,n=!0){if(n){const n=t.split("/");n.shift(),n.shift();let o=e;return n.forEach(e=>{o=o.getChildByName(e)}),o}return new Promise((e,n)=>{interface.operator.arrangement.getElementByAddress(t).then(t=>{e(core.element.getElementById(t))})})},this.getElementsUnderPoint=function(e,t){return new Promise((n,o)=>{interface.operator.arrangement.getElementsUnderPoint(e,t).then(e=>{const t=[];for(let n=0;n<e.length;n++)t.push(core.element.getElementById(e[n]));n(t)})})},this.getElementsUnderArea=function(e){return new Promise((t,n)=>{interface.operator.arrangement.getElementsUnderArea(e).then(e=>{const n=[];for(let t=0;t<e.length;t++)n.push(core.element.getElementById(e[t]));t(n)})})},this.printTree=function(t="spaced",n=!1){if(n){function o(e,t="",n="spaced"){const o="(id:"+e.getId()+", type:"+e.getType()+", x:"+e.x()+", y:"+e.y()+", angle:"+e.angle()+", scale:"+e.scale()+")";return"spaced"==n?t+e.getName()+" "+o:"tabular"==n?t+e.getName()+" "+o:"address"==n?t+"/"+e.getName()+" "+o:void 0}!function e(t,n="",r="spaced"){console.log(o(t,n,r));let a="";"spaced"==r?a=n+"- ":"tabular"==r?a=n+"-\t":"address"==r&&(a=n+"/"+t.getName()),t.getChildren().forEach(t=>{"Group"==t.getType()?e(t,a,r):console.log(o(t,a,r))})}(e,void 0,t)}else interface.operator.arrangement.printTree(t)},this.printSurvey=function(e=!1){e||interface.operator.arrangement.printSurvey()},this._dump=function(){interface.operator.arrangement._dump()}},this.render=new function(){const e={clearColour:{r:1,g:1,b:1,a:1},activeLimitToFrameRate:!1,frameRateLimit:30,active:!1,allowFrameSkipping:!0};this.clearColour=function(t){if(null==t)return e.clearColour;e.clearColour=t,interface.operator.render.clearColour(t)},this.getCanvasSize=function(){return interface.operator.render.getCanvasSize()},this.adjustCanvasSize=function(e,t){interface.operator.render.adjustCanvasSize(e,t)},this.refreshCoordinates=function(){interface.operator.render.refreshCoordinates()},this.refresh=function(){interface.operator.render.refresh()},this.activeLimitToFrameRate=function(t){if(null==t)return e.activeLimitToFrameRate;e.activeLimitToFrameRate=t,interface.operator.render.activeLimitToFrameRate(t)},this.frameRateLimit=function(t){if(null==t)return e.frameRateLimit;e.frameRateLimit=t,interface.operator.render.frameRateLimit(t)},this.allowFrameSkipping=function(t){if(null==t)return e.allowFrameSkipping;e.allowFrameSkipping=t,interface.operator.render.allowFrameSkipping(t)},this.frame=function(e=!1){interface.operator.render.frame(e)},this.active=function(t){if(null==t)return e.active;e.active=t,interface.operator.render.active(t)},this.drawDot=function(e,t,n=2,o={r:1,g:0,b:0,a:1}){interface.operator.render.drawDot(e,t,n,o)},this._dump=function(){interface.operator.render._dump()}},this.viewport=new function(){const e={position:{x:0,y:0},scale:1,angle:0,anchor:{x:0,y:0},stopMouseScroll:!1};this.adapter=new function(){this.windowPoint2workspacePoint=function(t,n){const o=e.position,r=e.scale,a=e.angle;let i={x:t,y:n};return i=_canvas_.library.math.cartesianAngleAdjust(i.x,i.y,-a),i.x=i.x/r+o.x,i.y=i.y/r+o.y,i}},this.position=function(t,n){if(null==t||null==n)return e.position;e.position={x:t,y:n},interface.operator.viewport.position(t,n)},this.scale=function(t){if(null==t)return e.scale;0==t&&console.error("cannot set scale to zero"),e.scale=t,interface.operator.viewport.scale(t)},this.angle=function(t){if(null==t)return e.angle;e.angle=t,interface.operator.viewport.angle(t)},this.anchor=function(t,n){if(null==t||null==n)return e.anchor;e.anchor={x:t,y:n},interface.operator.viewport.anchor(t,n)},this.scaleAroundWindowPoint=function(t,n,o){null!=t&&null!=n&&null!=o&&(0==t&&console.error("cannot set scale to zero"),e.scale=t,interface.operator.viewport.scaleAroundWindowPoint(t,n,o).then(t=>{e.position={x:t[0],y:t[1]}}))},this.getElementsUnderPoint=function(e,t){return new Promise((n,o)=>{interface.operator.viewport.getElementsUnderPoint(e,t).then(e=>{n(e.map(e=>self.element.getElementById(e)))})})},this.getElementsUnderArea=function(e){return new Promise((t,n)=>{interface.operator.viewport.getElementsUnderArea(e).then(e=>{t(e.map(e=>self.element.getElementById(e)))})})},this.stopMouseScroll=function(t){if(null==t)return e.stopMouseScroll;e.stopMouseScroll=t,interface.operator.viewport.stopMouseScroll(t)},this.refresh=function(){interface.operator.viewport.refresh()},this.cursor=function(e){if(null==e)return document.body.style.cursor;document.body.style.cursor=e},this._dump=function(){interface.operator.viewport._dump()}},this.stats=new function(){const e={active:!1};this.elementRenderDecision_clearData=function(){interface.operator.stats.elementRenderDecision_clearData()},this.active=function(t){if(null==t)return e.active;e.active=t,interface.operator.stats.active(t)},this.getReport=function(){return interface.operator.stats.getReport()};let t=!1,n=void 0;this.autoPrint=function(e){if(null==e)return t;t=e,t?n=setInterval(()=>{core.stats.getReport().then(console.log)},500):clearInterval(n)};let o=!1,r=void 0;this.autoPrintRenderDecisionReport=function(e){if(null==e)return o;o=e,o?r=setInterval(()=>{core.stats.getReport().then(e=>{Object.keys(e.renderDecision).sort().forEach(t=>{let n=t+": ";Object.keys(e.renderDecision[t]).sort().forEach((o,r,a)=>{n+=o+":"+e.renderDecision[t][o].percentage,r<a.length-1&&(n+=" - ")}),console.log(n)}),console.log("")})},500):clearInterval(r)};let a=!1,i=!1,s=void 0;this.onScreenAutoPrint=function(e){if(null==e)return a;a=e,core.stats.active(e),a?(s=document.createElement("section"),s.style="position:fixed; z-index:1; margin:0; font-family:Helvetica;",document.body.prepend(s),i=setInterval(()=>{s.style.top=window.innerHeight-s.offsetHeight+"px",core.stats.getReport().then(e=>{const t=core.viewport.position(),n=core.viewport.anchor(),o=0!=e.secondsPerFrameOverTheLastThirtyFrames?(1/e.secondsPerFrameOverTheLastThirtyFrames).toFixed(2):"infinite ";s.innerHTML='<p style="margin:1px"> position: x:'+t.x+" y:"+t.y+'</p><p style="margin:1px"> scale:'+core.viewport.scale()+'</p><p style="margin:1px"> angle:'+core.viewport.angle()+'</p><p style="margin:1px"> anchor: x:'+n.x+" y:"+n.y+'</p><p style="margin:1px"> framesPerSecond: '+e.framesPerSecond.toFixed(2)+'</p><p style="margin:1px"> secondsPerFrameOverTheLastThirtyFrames: '+e.secondsPerFrameOverTheLastThirtyFrames.toFixed(15)+" (potentially "+o+'fps)</p><p style="margin:1px"> renderSplitOverTheLastThirtyFrames: '+e.renderSplit+"</p>",s.innerHTML+='<p style="margin:1px">render decision</p>',Object.keys(e.renderDecision).sort().forEach(t=>{let n=t+": ";Object.keys(e.renderDecision[t]).sort().forEach((o,r,a)=>{n+=o+":"+e.renderDecision[t][o].percentage,r<a.length-1&&(n+=" - ")}),s.innerHTML+='<p style="margin:1px"> - '+n+"</p>"})})},250)):(clearInterval(i),null!=s&&s.remove(),s=void 0)},this._dump=function(){interface.operator.stats._dump()}},this.callback=new function(){const e={x:void 0,y:void 0};this.listCallbackTypes=function(){return interface.operator.callback.listCallbackTypes()},this.listActivationModes=function(){return interface.operator.callback.listActivationModes()};const t=new function(){const e={};this.getCallback=function(t,n){if(null!=t&&null!=e[t]&&null!=e[t][n])return e[t][n]},this.register=function(t,n,o){t in e||(e[t]={}),e[t][n]=o},this.remove=function(t,n){e[t][n]=void 0,delete e[t][n]},this.call=function(t,n,o,r,a){return null!=t&&null!=e[t]&&null!=e[t][n]&&(e[t][n](o,r,a),!0)}};this.getCallback=function(e,n){t.getCallback(e.getId(),n)},this.attachCallback=function(e,n,o){t.register(e.getId(),n,o),interface.operator.callback.attachCallback(e.getId(),n)},this.removeCallback=function(e,n){t.remove(e.getId(),n),interface.operator.callback.removeCallback(e.getId(),n)};let n="firstMatch";this.callbackActivationMode=function(e){return null==e?n:(n=e,interface.operator.callback.callbackActivationMode(n))},this.functions={},this.__attachCallbacks=function(){return new Promise((n,o)=>{this.listCallbackTypes().then(o=>{o.forEach(o=>{_canvas_[o]=function(t){let n={};t instanceof KeyboardEvent?n={key:t.key,code:t.code,keyCode:t.keyCode,altKey:t.altKey,ctrlKey:t.ctrlKey,metaKey:t.metaKey,shiftKey:t.shiftKey}:t instanceof WheelEvent?(e.x=t.offsetX,e.y=t.offsetY,n={x:t.offsetX,y:t.offsetY,wheelDelta:t.wheelDelta,wheelDeltaX:t.wheelDeltaX,wheelDeltaY:t.wheelDeltaY,altKey:t.altKey,ctrlKey:t.ctrlKey,metaKey:t.metaKey,shiftKey:t.shiftKey}):t instanceof MouseEvent?(e.x=t.offsetX,e.y=t.offsetY,n={x:t.offsetX,y:t.offsetY,altKey:t.altKey,ctrlKey:t.ctrlKey,metaKey:t.metaKey,shiftKey:t.shiftKey,buttons:t.buttons}):console.warn("unknown event type: ",t),communicationModule.run_withoutPromise("operator__callback__coupling_in__"+o,[n])},communicationModule.function["callback__"+o]=function(e,n,r,a){core.callback.functions[o]&&core.callback.functions[o](e.x,e.y,n,{all:r.map(core.element.getElementById),relevant:a.map(core.element.getElementById)}),a.forEach(r=>t.call(r,o,e.x,e.y,n))},n()})})})},this.mousePosition=function(){return e},this._dump=function(){interface.operator.callback._dump()}},this.meta=new function(){this.refresh=function(){return interface.operator.meta.refresh()}},this.ready=function(){core.callback.__attachCallbacks().then(()=>{_canvas_.layers.declareLayerAsLoaded("core")})}},_canvas_.layers.registerLayer("core",_canvas_.core),_canvas_.system=new function(){this.versionInformation={tick:0,lastDateModified:{y:2021,m:1,d:13}},this.mouseReady=!1},_canvas_.system.mouse=new function(){const e=this;this.tmp={},this.functionList={},this.functionList.onmousedown=[],this.functionList.onmousemove=[],this.functionList.onmouseup=[],this.functionList.onmouseleave=[],this.functionList.onmouseenter=[],this.functionList.onwheel=[],this.functionList.onclick=[],this.functionList.ondblclick=[],this.functionList.onmouseenterelement=[],this.functionList.onmouseleaveelement=[],_canvas_.layers.registerFunctionForLayer("core",(function(){_canvas_.system.mouse.original={onmousemove:_canvas_.onmousemove,onmouseleave:_canvas_.onmouseleave,onmouseup:_canvas_.onmouseup},_canvas_.system.mouseReady=!0})),this.mouseInteractionHandler=function(t,n){_canvas_.onmousemove=function(e){if(null!=t){const n=_canvas_.core.viewport.adapter.windowPoint2workspacePoint(e.offsetX,e.offsetY);t(n.x,n.y,e)}},_canvas_.onmouseup=function(t){if(null!=n){const e=_canvas_.core.viewport.adapter.windowPoint2workspacePoint(t.offsetX,t.offsetY);n(e.x,e.y,t)}_canvas_.onmousemove=e.original.onmousemove,_canvas_.onmouseleave=e.original.onmouseleave,_canvas_.onmouseup=e.original.onmouseup,_canvas_.onmouseup(t)},_canvas_.onmouseleave=_canvas_.onmouseup},this.forceMouseUp=function(){_canvas_.onmouseup()},this.setUpCallbacks=function(){["onmousedown","onmouseup","onmousemove","onmouseenter","onmouseleave","onwheel","onclick","ondblclick","onmouseenterelement","onmouseleaveelement"].forEach(t=>{_canvas_.core.callback.functions[t]=function(n,o,r,a){0==a.relevant.length&&_canvas_.library.structure.functionListRunner(e.functionList[t],_canvas_.system.keyboard.pressedKeys)({x:n,y:o,event:r})}})},this.setUpCallbacks()},_canvas_.system.keyboard=new function(){const e=this;function t(t,n){const o=e.pressedKeys;"ControlLeft"==t.code||"ControlRight"==t.code?o.control=n:"AltLeft"==t.code||"AltRight"==t.code?o.alt=n:"MetaLeft"==t.code||"MetaRight"==t.code?o.meta=n:"ShiftLeft"!=t.code&&"ShiftRight"!=t.code||(o.shift=n),-1!=window.navigator.platform.indexOf("Mac")&&(o.option=o.alt,o.command=o.meta)}this.pressedKeys={control:!1,alt:!1,meta:!1},this.functionList={},this.functionList.onkeydown=[],this.functionList.onkeyup=[],this.releaseAll=function(){Object.keys(this.pressedKeys).forEach(t=>{e.releaseKey(t)})},this.releaseKey=function(e){_canvas_.onkeyup(new KeyboardEvent("keyup",{code:e}))},_canvas_.core.callback.functions.onkeydown=function(n,o,r,a){e.pressedKeys[r.code]||(e.pressedKeys[r.code]=!0,t(r,!0),_canvas_.library.structure.functionListRunner(e.functionList.onkeydown,e.pressedKeys)({x:r.X,y:r.Y,event:r})&&null!=e.pressedKeys.command&&e.pressedKeys.command&&e.releaseAll())},_canvas_.core.callback.functions.onkeyup=function(n,o,r,a){e.pressedKeys[r.code]&&(delete e.pressedKeys[r.code],t(r,!1),_canvas_.library.structure.functionListRunner(e.functionList.onkeyup,e.pressedKeys)({x:r.X,y:r.Y,event:r}))}},_canvas_.layers.registerLayer("system",_canvas_.system),_canvas_.system.pane={},_canvas_.layers.registerFunctionForLayer("core",(function(){_canvas_.system.pane.background=_canvas_.core.element.create("Group","background"),_canvas_.system.pane.background.ignored(!0),_canvas_.system.pane.background.framebufferActive(!0),_canvas_.core.arrangement.append(_canvas_.system.pane.background),_canvas_.system.pane.middleground=_canvas_.core.element.create("Group","middleground"),_canvas_.system.pane.middleground.heedCamera(!0),_canvas_.system.pane.middleground.heedCameraActive(!0),_canvas_.system.pane.middleground.framebufferActive(!0),_canvas_.core.arrangement.append(_canvas_.system.pane.middleground),_canvas_.system.pane.middleground_back=_canvas_.core.element.create("Group","back"),_canvas_.system.pane.middleground.append(_canvas_.system.pane.middleground_back),_canvas_.system.pane.middleground_middle=_canvas_.core.element.create("Group","middle"),_canvas_.system.pane.middleground.append(_canvas_.system.pane.middleground_middle),_canvas_.system.pane.middleground_front=_canvas_.core.element.create("Group","front"),_canvas_.system.pane.middleground.append(_canvas_.system.pane.middleground_front),_canvas_.system.pane.foreground=_canvas_.core.element.create("Group","foreground"),_canvas_.system.pane.foreground.framebufferActive(!0),_canvas_.core.arrangement.append(_canvas_.system.pane.foreground),_canvas_.system.pane.b=_canvas_.system.pane.background,_canvas_.system.pane.mb=_canvas_.system.pane.middleground_back,_canvas_.system.pane.mm=_canvas_.system.pane.middleground_middle,_canvas_.system.pane.mf=_canvas_.system.pane.middleground_front,_canvas_.system.pane.f=_canvas_.system.pane.foreground})),_canvas_.system.pane.getMiddlegroundPane=function(e){let t=e;for(;null!=t;){if(t==_canvas_.system.pane.mb)return _canvas_.system.pane.mb;if(t==_canvas_.system.pane.mm)return _canvas_.system.pane.mm;if(t==_canvas_.system.pane.mf)return _canvas_.system.pane.mf;t=t.parent}};const checkingInterval=setInterval(()=>{null!=_canvas_.system.pane&&null!=_canvas_.system.pane.b&&-1!=_canvas_.system.pane.b.getId()&&-1!=_canvas_.system.pane.mb.getId()&&-1!=_canvas_.system.pane.mm.getId()&&-1!=_canvas_.system.pane.mf.getId()&&-1!=_canvas_.system.pane.f.getId()&&null!=_canvas_.system.mouse.original&&(clearInterval(checkingInterval),_canvas_.layers.declareLayerAsLoaded("system"))},100);_canvas_.interface=new function(){this.versionInformation={tick:0,lastDateModified:{y:2021,m:1,d:25}};const e=this,t={prefix:"interface",channels:{circuit:{prefix:"circuit",active:!1,fontStyle:"color:rgb(195, 81, 172); font-style:italic;"},part:{prefix:"part",active:!1,fontStyle:"color:rgb(81, 178, 223); font-style:italic;"},partBasic:{prefix:"part.collection.basic",active:!1,fontStyle:"color:rgb(229, 96, 83);  font-style:italic;"},partDisplay:{prefix:"part.collection.display",active:!1,fontStyle:"color:rgb(99, 196, 129); font-style:italic;"},partControl:{prefix:"part.collection.control",active:!1,fontStyle:"color:rgb(243, 194, 95); font-style:italic;"},partDynamic:{prefix:"part.collection.dynamic",active:!1,fontStyle:"color:rgb(24, 53, 157);  font-style:italic;"},unit:{prefix:"unit",active:!1,fontStyle:"color:rgb(66, 145, 115); font-style:italic;"}},log:{}};Object.keys(t.channels).forEach(e=>{t.log[e]=function(n){t.channels[e].active&&console.log("%c"+t.prefix+"."+t.channels[e].prefix+new Array(...arguments).join(" "),t.channels[e].fontStyle)}}),this.circuit=new function(){this.rapidAmplitudeModulator=function(e){let t="internalOscillator";const n={signalToModulate:{},modulatingSignal:{},internalOscillator:{},amplitudeControlledModulator:{},out:{}};n.signalToModulate.gain=1,n.signalToModulate.node=e.createGain(),_canvas_.library.audio.changeAudioParam(e,n.signalToModulate.node.gain,n.signalToModulate.gain,.01,"instant",!0),n.modulatingSignal.gain=1,n.modulatingSignal.node=e.createGain(),_canvas_.library.audio.changeAudioParam(e,n.modulatingSignal.node.gain,n.modulatingSignal.gain,.01,"instant",!0),n.internalOscillator.frequency=1,n.internalOscillator.type="sine",n.internalOscillator.node=e.createOscillator(),n.internalOscillator.node.frequency.setTargetAtTime(n.internalOscillator.frequency,_canvas_.library.audio.context.currentTime,0),n.internalOscillator.node.type=n.internalOscillator.type,n.internalOscillator.node.start(),n.amplitudeControlledModulator.node=e.createAmplitudeControlledModulator(),n.out.gain=1,n.out.node=e.createGain(),_canvas_.library.audio.changeAudioParam(e,n.out.node.gain,n.out.gain,.01,"instant",!0),n.signalToModulate.node.connect(n.amplitudeControlledModulator.node,void 0,0),n.internalOscillator.node.connect(n.amplitudeControlledModulator.node,void 0,1),n.amplitudeControlledModulator.node.connect(n.out.node),this.signalToModulate=function(){return n.signalToModulate.node},this.modulatingSignal=function(){return n.modulatingSignal.node},this.out=function(){return n.out.node},this.frequency=function(e,t=0){if(null==e)return n.internalOscillator.frequency;n.internalOscillator.frequency=e,n.internalOscillator.node.frequency.linearRampToValueAtTime(n.internalOscillator.frequency,_canvas_.library.audio.context.currentTime+t)},this.waveType=function(e){if(null==e)return n.internalOscillator.type;"custom"==e?"internalOscillator"==t&&(n.internalOscillator.node.disconnect(n.amplitudeControlledModulator.node,void 0,1),n.modulatingSignal.node.connect(n.amplitudeControlledModulator.node,void 0,1),t="internalOscillator"):("modulatingSignal"==t&&(n.modulatingSignal.node.disconnect(n.amplitudeControlledModulator.node,void 0,1),n.internalOscillator.node.connect(n.amplitudeControlledModulator.node,void 0,1),t="modulatingSignal"),n.internalOscillator.type=e,n.internalOscillator.node.type=n.internalOscillator.type)}},this.audio2percentage=function(){return new function(){const e={timeDomainDataArray:null,frequencyData:null,refreshRate:30,refreshInterval:null,returnedValueLimits:{min:0,max:256,halfdiff:128},resolution:128};e.analyserNode=_canvas_.library.audio.context.createAnalyser(),e.analyserNode.fftSize=e.resolution,e.timeDomainDataArray=new Uint8Array(e.analyserNode.fftSize),e.frequencyData=new Uint8Array(e.analyserNode.fftSize),this.__render=function(){e.analyserNode.getByteTimeDomainData(e.timeDomainDataArray);const t=[];for(let n=0;n<e.timeDomainDataArray.length;n++)t.push(e.timeDomainDataArray[n]/e.returnedValueLimits.halfdiff-1);let n=0;t.forEach((function(e){Math.abs(e)>n&&(n=Math.abs(e))})),this.newValue(n)},this.audioIn=function(){return e.analyserNode},this.start=function(){e.refreshInterval=setInterval((function(e){e.__render()}),1e3/30,this)},this.stop=function(){clearInterval(e.refreshInterval)},this.newValue=function(e){}}},this.synthesizer_2=function(e,t="sine",n={sin:[0,1,0],cos:[0,0,1]},o=1,r=0,a=0,i={time:.01,curve:"linear"},s={time:.05,curve:"linear"},l={active:!1,depth:0,period:1,periodMin:.01,periodMax:1},c={depth:0,period:1,periodMin:.01,periodMax:1}){function u(){const t={oscillator:e.createOscillator(),gain:e.createGain()};return t.oscillator.connect(t.gain),t.oscillator.start(0),_canvas_.library.audio.changeAudioParam(e,t.gain.gain,0,0,"instant"),t.detune=function(n,o,r){_canvas_.library.audio.changeAudioParam(e,t.oscillator.detune,n,o,r)},t}const p={oscillators:[],wobbler_detune:{},aggregator:{},LFO:{},amplitudeModifier:{},gain:{}};p.oscillators[0]=u(),p.wobbler_detune.phase=!0,p.wobbler_detune.wave="s",p.wobbler_detune.interval=null,p.wobbler_detune.start=function(){c.period<c.periodMin||c.period>=c.periodMax||(p.wobbler_detune.interval=setInterval((function(){const e=Object.keys(p.oscillators);if(p.wobbler_detune.phase)for(let t=0;t<e.length;t++)p.oscillators[e[t]].detune(c.depth+a,.9*c.period,p.wobbler_detune.wave);else for(let t=0;t<e.length;t++)p.oscillators[e[t]].detune(-c.depth+a,.9*c.period,p.wobbler_detune.wave);p.wobbler_detune.phase=!p.wobbler_detune.phase}),1e3*c.period))},p.wobbler_detune.stop=function(){clearInterval(p.wobbler_detune.interval)},p.aggregator.node=e.createGain(),p.aggregator.node.gain.setTargetAtTime(o,e.currentTime,0),p.oscillators[0].gain.connect(p.aggregator.node),p.LFO={oscillator:e.createOscillator(),gain:e.createGain()},p.LFO.oscillator.start(0),p.LFO.oscillator.frequency.setTargetAtTime(1/l.period,e.currentTime,0),p.LFO.gain.gain.setTargetAtTime(l.depth,e.currentTime,0),p.LFO.oscillator.connect(p.LFO.gain),p.amplitudeModifier=new _canvas_.library.audio.audioWorklet.production.wasm.amplitudeModifier(_canvas_.library.audio.context),p.LFO.gain.connect(p.amplitudeModifier),p.amplitudeModifier.divisor.setTargetAtTime(2,e.currentTime,0),p.amplitudeModifier.offset.setTargetAtTime(1-l.depth/2,e.currentTime,0),p.gain.node=new _canvas_.library.audio.audioWorklet.production.wasm.gain(_canvas_.library.audio.context),p.aggregator.node.connect(p.gain.node,void 0,0),p.amplitudeModifier.connect(p.gain.node,void 0,1),this.out=function(){return p.gain.node},this.perform=function(o){const a=p.oscillators.filter(e=>e.noteNumber==o.num&&null==e.stoppingTimeout)[0];if(null!=a&&0==o.velocity)_canvas_.library.audio.changeAudioParam(e,a.gain.gain,0,s.time,s.curve),a.stoppingTimeout=setTimeout((function(){a.noteNumber=void 0,a.stoppingTimeout=void 0}),1e3*s.time);else if(null!=a)_canvas_.library.audio.changeAudioParam(e,a.gain.gain,o.velocity,0,"instant");else if(null==a&&0==o.velocity);else{const a=p.oscillators.filter(e=>null==e.noteNumber);if(a.length<1){const e=u();e.gain.connect(p.aggregator.node),p.oscillators.push(e)}const s=0==a.length,l=s?p.oscillators[p.oscillators.length-1]:a[0];"custom"==t?l.oscillator.setPeriodicWave(e.createPeriodicWave(new Float32Array(n.cos),new Float32Array(n.sin))):l.oscillator.type=t,l.oscillator.frequency.setTargetAtTime(_canvas_.library.audio.num2freq(o.num+12*r),e.currentTime,0),l.noteNumber=o.num,_canvas_.library.audio.changeAudioParam(e,l.gain.gain,o.velocity,i.time,i.curve,!s)}},this.panic=function(){p.oscillators.map(e=>e.noteNumber).forEach(e=>{this.perform({num:e,velocity:0})})},this.waveType=function(o,r){if(null==o&&null==r)return{type:t,periodicWave:r};null!=o&&(t=o),null!=r&&(n=r),"custom"==o?p.oscillators.forEach(t=>{t.oscillator.setPeriodicWave(e.createPeriodicWave(new Float32Array(n.cos),new Float32Array(n.sin)))}):p.oscillators.forEach(e=>{e.oscillator.type=t})},this.gain=function(t){p.aggregator.node.gain.setTargetAtTime(t,e.currentTime,0)},this.octave=function(t){if(null==t)return r;r=t,p.oscillators.forEach(t=>{null!=t.noteNumber&&t.oscillator.frequency.setTargetAtTime(_canvas_.library.audio.num2freq(t.noteNumber+12*r),e.currentTime,0)})},this.detune=function(t){if(null==t)return a;a=t,p.oscillators.forEach(n=>{n.oscillator.detune.cancelScheduledValues(0),n.oscillator.detune.setTargetAtTime(t,e.currentTime,0)})},this.attack=function(e,t){if(null==e&&null==t)return{time:i.time,curve:i.curve};null!=e&&(i.time=e),null!=t&&(i.curve=t)},this.release=function(e,t){if(null==e&&null==t)return{time:s.time,curve:s.curve};null!=e&&(s.time=e),null!=t&&(s.curve=t)},this.gainWobbleActive=function(e){if(null==e)return l.active;l.active=e,p.gain.node.mode=e},this.gainWobbleDepth=function(t){if(null==t)return l.depth;t<0?t=0:t>1&&(t=1),l.depth=t,p.LFO.gain.gain.setTargetAtTime(t,e.currentTime,0),p.amplitudeModifier.offset.setTargetAtTime(1-l.depth/2,e.currentTime,0)},this.gainWobblePeriod=function(t){if(null==t)return l.period;t<l.periodMin?t=l.periodMin:t>l.periodMax&&(t=l.periodMax),l.period=t,p.LFO.oscillator.frequency.setTargetAtTime(1/t,e.currentTime,0)},this.detuneWobbleDepth=function(e){if(null==e)return c.depth;e<0?e=0:e>100&&(e=100),c.depth=e,p.wobbler_detune.stop(),p.wobbler_detune.start()},this.detuneWobblePeriod=function(e){if(null==e)return c.period;e<c.periodMin?e=c.periodMin:e>c.periodMax&&(e=c.periodMax),c.period=e,p.wobbler_detune.stop(),p.wobbler_detune.start()},this._dump=function(){console.log("waveType:",t),console.log("gain:",o),console.log("octave:",r),console.log("detune:",a),console.log("attack:",i),console.log("release:",s),p.oscillators.forEach((e,t)=>{console.log("flow.oscillators["+t+"]",e)}),console.log("flow.aggregator:",p.aggregator),console.log("flow.LFO:",p.LFO),console.log("flow.amplitudeModifier:",p.amplitudeModifier),console.log("flow.gain:",p.gain)},this._flow=function(){return p}},this.synthesizer_1=function(e,t="sine",n={sin:[0,1],cos:[0,0]},o=1,r=0,a=0,i=.01,s=1,l={time:.01,curve:"linear"},c={time:.05,curve:"linear"},u=0,p=0,d=0,h=0,_=.01,g=1){const f={OSCmaker:{},liveOscillators:{},wobbler_detune:{},aggregator:{},wobbler_gain:{},mainOut:{}};f.OSCmaker.waveType=t,f.OSCmaker.periodicWave=n,f.OSCmaker.attack=l,f.OSCmaker.release=c,f.OSCmaker.octave=u,f.OSCmaker.detune=p,f.OSCmaker.func=function(e,t,n,o,r,a,i,s,l,c){return new function(){this.generator=e.createOscillator(),"custom"==o?this.generator.setPeriodicWave(e.createPeriodicWave(new Float32Array(r.cos),new Float32Array(r.sin))):this.generator.type=o,this.generator.frequency.setTargetAtTime(_canvas_.library.audio.num2freq(n+12*c),e.currentTime,0),this.generator.detune.setTargetAtTime(l,e.currentTime,0),this.generator.start(0),this.gain=e.createGain(),this.generator.connect(this.gain),this.gain.gain.setTargetAtTime(0,e.currentTime,0),_canvas_.library.audio.changeAudioParam(e,this.gain.gain,a,i.time,i.curve,!1),this.gain.connect(t),this.detune=function(t,n,o){_canvas_.library.audio.changeAudioParam(e,this.generator.detune,t,n,o)},this.changeVelocity=function(t){_canvas_.library.audio.changeAudioParam(e,this.gain.gain,t,i.time,i.curve)},this.stop=function(){_canvas_.library.audio.changeAudioParam(e,this.gain.gain,0,s.time,s.curve),setTimeout((function(e){e.gain.disconnect(),e.generator.stop(),e.generator.disconnect(),e.gain=null,e.generator=null,e=null}),1e3*s.time,this)}}},f.wobbler_detune.depth=d,f.wobbler_detune.period=h,f.wobbler_detune.phase=!0,f.wobbler_detune.wave="s",f.wobbler_detune.interval=null,f.wobbler_detune.start=function(){f.wobbler_detune.period<_||f.wobbler_detune.period>=g||(f.wobbler_detune.interval=setInterval((function(){const e=Object.keys(f.liveOscillators);if(f.wobbler_detune.phase)for(let t=0;t<e.length;t++)f.liveOscillators[e[t]].detune(f.wobbler_detune.depth,.9*f.wobbler_detune.period,f.wobbler_detune.wave);else for(let t=0;t<e.length;t++)f.liveOscillators[e[t]].detune(-f.wobbler_detune.depth,.9*f.wobbler_detune.period,f.wobbler_detune.wave);f.wobbler_detune.phase=!f.wobbler_detune.phase}),1e3*f.wobbler_detune.period))},f.wobbler_detune.stop=function(){clearInterval(f.wobbler_detune.interval)},f.aggregator.node=e.createGain(),f.aggregator.node.gain.setTargetAtTime(1,e.currentTime,0),f.wobbler_gain.depth=r,f.wobbler_gain.period=a,f.wobbler_gain.phase=!0,f.wobbler_gain.wave="s",f.wobbler_gain.interval=null,f.wobbler_gain.start=function(){f.wobbler_gain.period<i||f.wobbler_gain.period>=s?_canvas_.library.audio.changeAudioParam(e,f.wobbler_gain.node.gain,1,.01,f.wobbler_gain.wave):f.wobbler_gain.interval=setInterval((function(){f.wobbler_gain.phase?_canvas_.library.audio.changeAudioParam(e,f.wobbler_gain.node.gain,1,.9*f.wobbler_gain.period,f.wobbler_gain.wave):_canvas_.library.audio.changeAudioParam(e,f.wobbler_gain.node.gain,1-f.wobbler_gain.depth,.9*f.wobbler_gain.period,f.wobbler_gain.wave),f.wobbler_gain.phase=!f.wobbler_gain.phase}),1e3*f.wobbler_gain.period)},f.wobbler_gain.stop=function(){clearInterval(f.wobbler_gain.interval)},f.wobbler_gain.node=e.createGain(),f.wobbler_gain.node.gain.setTargetAtTime(1,e.currentTime,0),f.aggregator.node.connect(f.wobbler_gain.node),f.mainOut.gain=o,f.mainOut.node=e.createGain(),f.mainOut.node.gain.setTargetAtTime(o,e.currentTime,0),f.wobbler_gain.node.connect(f.mainOut.node),this.out=function(){return f.mainOut.node},this.perform=function(t){(f.liveOscillators[t.num]||0!=t.velocity)&&(f.liveOscillators[t.num]||0==t.velocity?0==t.velocity?(f.liveOscillators[t.num].stop(),delete f.liveOscillators[t.num]):f.liveOscillators[t.num].changeVelocity(t.velocity):f.liveOscillators[t.num]=f.OSCmaker.func(e,f.aggregator.node,t.num,f.OSCmaker.waveType,f.OSCmaker.periodicWave,t.velocity,f.OSCmaker.attack,f.OSCmaker.release,f.OSCmaker.detune,f.OSCmaker.octave))},this.panic=function(){const e=Object.keys(f.liveOscillators);for(let t=0;t<e.length;t++)this.perform({num:e[t],velocity:0})},this.waveType=function(e){if(null==e)return f.OSCmaker.waveType;f.OSCmaker.waveType=e},this.periodicWave=function(e){if(null==e)return f.OSCmaker.periodicWave;f.OSCmaker.periodicWave=e},this.gain=function(t,n,o){return _canvas_.library.audio.changeAudioParam(e,f.mainOut.node.gain,t,n,o)},this.attack=function(e,t){if(null==e&&null==t)return f.OSCmaker.attack;f.OSCmaker.attack.time=e||f.OSCmaker.attack.time,f.OSCmaker.attack.curve=t||f.OSCmaker.attack.curve},this.release=function(e,t){if(null==e&&null==t)return f.OSCmaker.release;f.OSCmaker.release.time=e||f.OSCmaker.release.time,f.OSCmaker.release.curve=t||f.OSCmaker.release.curve},this.octave=function(e){if(null==e)return f.OSCmaker.octave;f.OSCmaker.octave=e},this.detune=function(e,t,n){if(null==e)return f.OSCmaker.detune;const o=f.OSCmaker.detune,r=e-o,a=Math.round(Math.abs(r)),i=a*t;let s=[1];switch(n){case"linear":s=system.utility.math.curveGenerator.linear(i);break;case"exponential":s=system.utility.math.curveGenerator.exponential(i);break;case"s":s=system.utility.math.curveGenerator.s(i,8)}if(0!=s.length){const e=setInterval((function(){f.OSCmaker.detune=o+s.shift()*r,0==s.length&&clearInterval(e)}),1e3/a)}const l=Object.keys(f.liveOscillators);for(let o=0;o<l.length;o++)f.liveOscillators[l[o]].detune(e,t,n)},this.gainWobbleDepth=function(e){if(null==e)return f.wobbler_gain.depth;f.wobbler_gain.depth=e,f.wobbler_gain.stop(),f.wobbler_gain.start()},this.gainWobblePeriod=function(e){if(null==e)return f.wobbler_gain.period;f.wobbler_gain.period=e,f.wobbler_gain.stop(),f.wobbler_gain.start()},this.detuneWobbleDepth=function(e){if(null==e)return f.wobbler_detune.depth;f.wobbler_detune.depth=e,f.wobbler_detune.stop(),f.wobbler_detune.start()},this.detuneWobblePeriod=function(e){if(null==e)return f.wobbler_detune.period;f.wobbler_detune.period=e,f.wobbler_detune.stop(),f.wobbler_detune.start()}},this.multibandFilter=function(e,t,n=!1){const o={settings:[],responses:[]},r={inAggregator:{},filterNodes:[],gainNodes:[],outAggregator:{}};function a(t){const n={frequency:110,Q:.1,node:e.createBiquadFilter()};return n.node.type=t,_canvas_.library.audio.changeAudioParam(e,n.node.frequency,110,.01,"instant",!0),_canvas_.library.audio.changeAudioParam(e,n.node.Q,.1,.01,"instant",!0),n}if(r.inAggregator.gain=1,r.inAggregator.node=e.createGain(),_canvas_.library.audio.changeAudioParam(e,r.inAggregator.node.gain,r.inAggregator.gain,.01,"instant",!0),n){t<2&&(t=2),r.filterNodes.push(a("lowpass"));for(let e=1;e<t-1;e++)r.filterNodes.push(a("bandpass"));r.filterNodes.push(a("highpass"))}else for(let e=0;e<t;e++)r.filterNodes.push(a("bandpass"));for(let n=0;n<t;n++){const t={gain:1,node:e.createGain()};_canvas_.library.audio.changeAudioParam(e,t.node.gain,t.gain,.01,"instant",!0),r.gainNodes.push(t),o.settings[n]={Q:.1,gain:1,frequency:110,fresh:!0}}r.outAggregator.gain=1,r.outAggregator.node=e.createGain(),_canvas_.library.audio.changeAudioParam(e,r.outAggregator.node.gain,r.outAggregator.gain,.01,"instant",!0);for(let e=0;e<t;e++)r.inAggregator.node.connect(r.filterNodes[e].node),r.filterNodes[e].node.connect(r.gainNodes[e].node),r.gainNodes[e].node.connect(r.outAggregator.node);this.in=function(){return r.inAggregator.node},this.out=function(){return r.outAggregator.node},this.masterGain=function(t){if(null==t)return r.outAggregator.gain;r.outAggregator.gain=t,_canvas_.library.audio.changeAudioParam(e,r.outAggregator.node.gain,r.outAggregator.gain,.01,"instant",!0)},this.gain=function(t,n){return null==t?r.gainNodes.map(e=>e.gain):null==n?r.gainNodes[t].gain:(r.gainNodes[t].gain=n,_canvas_.library.audio.changeAudioParam(e,r.gainNodes[t].node.gain,r.gainNodes[t].gain,.01,"instant",!0),o.settings[t].gain=n,void(o.settings[t].fresh=!0))},this.frequency=function(t,n){return null==t?r.filterNodes.map(e=>e.frequency):null==n?r.filterNodes[t].frequency:(r.filterNodes[t].frequency=n,_canvas_.library.audio.changeAudioParam(e,r.filterNodes[t].node.frequency,r.filterNodes[t].frequency,.01,"instant",!0),o.settings[t].frequency=n,void(o.settings[t].fresh=!0))},this.Q=function(t,n){return null==t?r.filterNodes.map(e=>e.Q):null==n?r.filterNodes[t].Q:(r.filterNodes[t].Q=n,_canvas_.library.audio.changeAudioParam(e,r.filterNodes[t].node.Q,r.filterNodes[t].Q,.01,"instant",!0),o.settings[t].Q=n,void(o.settings[t].fresh=!0))},this.measureFrequencyResponse=function(e,n){if(null==e)return Array(t).fill(0).map((e,t)=>this.measureFrequencyResponse(t,n));if(!o.settings[e].fresh)return[o.responses[e].magResponse.map(e=>e*r.outAggregator.gain),o.responses[e].requencyArray];const a=new Float32Array(n),i=new Float32Array(a.length),s=new Float32Array(a.length);return r.filterNodes[e].node.getFrequencyResponse(a,i,s),o.responses[e]={magResponse:i.map(t=>t*r.gainNodes[e].gain),phaseResponse:s,frequencyArray:n},o.settings[e].fresh=!1,[i.map(t=>t*r.gainNodes[e].gain*r.outAggregator.gain),n]}},this.player=function(e){const t=this,n={fileLoaded:!1,playhead:[],loop:{active:!1,timeout:[]},rate:1,concurrentPlayCountLimit:1,area:{percentage_start:0,percentage_end:1,actual_start:0,actual_end:1}},o={track:{},bufferSource:[],channelSplitter:{},leftOut:{},rightOut:{}};function r(e,r){0!==Object.keys(e).length&&(t.stop(),o.track=e,n.fileLoaded=!0,n.playhead=[],t.area(n.area.percentage_start,n.area.percentage_end),r(e))}function a(){let e=0;for(;null!=n.playhead[e]&&n.playhead[e].playing;)e++;return e}function i(o){if(null==o)return void Object.keys(n.playhead).map(e=>i(parseInt(e)));clearInterval(n.loop.timeout[o]);const r=t.currentTime(o);if(null==n.playhead[o])return;if(n.playhead[o].position=r,n.playhead[o].lastSightingTime=e.currentTime,!n.loop.active||!n.playhead[o].playing)return;let a=n.area.actual_end-r;a<0&&(a=0),n.loop.timeout[o]=setTimeout(function(e){return function(){s(e,n.area.actual_start,!0),i(e)}}(o),1e3*a/n.rate)}function s(o=0,r,a=!1){if(n.fileLoaded&&null!=n.playhead[o]){if(!n.playhead[o].playing)return n.playhead[o].position=r,void(n.playhead[o].lastSightingTime=e.currentTime);if(n.loop.active&&r>n.loop.actual_end&&(r=n.loop.actual_start),a)return n.playhead[o].position=r,void(n.playhead[o].lastSightingTime=e.currentTime);t.pause(o,function(o){return function(){n.playhead[o].position=r,n.playhead[o].lastSightingTime=e.currentTime,t.resume(o)}}(o))}}function l(e){null!=e?s(e,n.playhead[e].position):Object.keys(n.playhead).map(e=>l(parseInt(e)))}o.channelSplitter=e.createChannelSplitter(2),o.leftOut.gain=1,o.leftOut.node=e.createGain(),o.leftOut.node.gain.setTargetAtTime(o.leftOut.gain,e.currentTime,0),o.channelSplitter.connect(o.leftOut.node,0),o.rightOut.gain=1,o.rightOut.node=e.createGain(),o.rightOut.node.gain.setTargetAtTime(o.rightOut.gain,e.currentTime,0),o.channelSplitter.connect(o.rightOut.node,1),this.out_left=function(){return o.leftOut.node},this.out_right=function(){return o.rightOut.node},this.concurrentPlayCountLimit=function(e){if(null==e)return n.concurrentPlayCountLimit;n.concurrentPlayCountLimit=e;for(let t=e;t<n.playhead.length;t++)this.stop(t)},this.unloadRaw=function(){return o.track},this.loadRaw=function(e,t){r(e,t)},this.load=function(e,t,o="",a){!function(e,t,o="",a){_canvas_.library.audio.loadAudioFile((function(e){n.fileLoaded=!1,r(e,t)}),e,o,a)}(e,t,o,a)},this.start=function(r){if(n.fileLoaded){if(null==r){if(-1!=n.concurrentPlayCountLimit&&n.playhead.filter(()=>!0).length>=n.concurrentPlayCountLimit)return-1;r=a(),n.playhead[r]={position:0,lastSightingTime:0}}return n.playhead[r].position<n.area.actual_start&&(n.playhead[r].position=n.area.actual_start),n.playhead[r].position>n.area.actual_end&&(n.playhead[r].position=n.area.actual_start),o.bufferSource[r]=_canvas_.library.audio.loadBuffer(e,o.track.buffer,o.channelSplitter,function(e){return function(){t.stop(e)}}(r)),o.bufferSource[r].loop=n.loop.active,o.bufferSource[r].loopStart=n.area.actual_start,o.bufferSource[r].loopEnd=n.area.actual_end,o.bufferSource[r].playbackRate.value=n.rate,o.bufferSource[r].start(0,n.playhead[r].position,n.loop.active?void 0:n.area.actual_end-n.playhead[r].position),n.playhead[r].lastSightingTime=e.currentTime,n.playhead[r].playing=!0,i(r),r}},this.pause=function(e,r){null!=e?null!=n.playhead[e]&&n.playhead[e].playing&&(i(e),n.playhead[e].playing=!1,o.bufferSource[e].onended=r,o.bufferSource[e].stop(0)):Object.keys(n.playhead).map(e=>t.pause(parseInt(e)))},this.resume=function(e){null!=e?n.playhead[e].playing||this.start(e):Object.keys(n.playhead).map(e=>t.resume(parseInt(e)))},this.stop=function(e,r){null!=e?null!=n.playhead[e]&&n.playhead[e].playing&&(o.bufferSource[e].onended=r,o.bufferSource[e].stop(0),n.playhead[e].playing=!1,i(e)):Object.keys(n.playhead).map(e=>t.stop(parseInt(e)))},this.restart=function(e){this.stop(e),this.start(e)},this.jumpTo=function(e=0,t=0,n=!0){n?(t=(t=t>1?1:t)<0?0:t,s(e,this.duration()*t)):s(e,t),i(e)},this.area=function(e,t,o=!0){return null==e&&null==t?n.area:(null==e&&(e=o?n.area.percentage_start:n.area.actual_start),null==t&&(t=o?n.area.percentage_end:n.area.actual_end),o?(n.area.percentage_start=e,n.area.percentage_end=t,n.area.actual_start=e*this.duration(),n.area.actual_end=t*this.duration()):(n.area.percentage_start=e/this.duration(),n.area.percentage_end=t/this.duration(),n.area.actual_start=e,n.area.actual_end=t),i(),l(),n.area)},this.loop=function(e){if(null==e)return n.loop.active;n.loop.active=e,i(),l()},this.rate=function(e){if(null==e)return n.rate;i(),n.rate=e,o.bufferSource.forEach(t=>t.playbackRate.value=e),i()},this.createPlayhead=function(e){if(-1!=n.concurrentPlayCountLimit&&n.playhead.filter(()=>!0).length>=n.concurrentPlayCountLimit)return-1;playhead=a(),n.playhead[playhead]={position:this.duration()*e,lastSightingTime:0}},this._printState=function(){console.log(n)},this.isLoaded=function(){return n.fileLoaded},this.duration=function(){return n.fileLoaded?o.track.duration:-1},this.title=function(){return n.fileLoaded?o.track.name:""},this.currentPlayingState=function(e){return!!n.fileLoaded&&(null==e?Object.keys(n.playhead).map(e=>t.currentPlayingState(e)):n.playhead[e].playing)},this.currentTime=function(o){return n.fileLoaded?null==o?Object.keys(n.playhead).map(e=>t.currentTime(e)):null==n.playhead[o]?-1:n.playhead[o].playing?n.playhead[o].position+n.rate*(e.currentTime-n.playhead[o].lastSightingTime):n.playhead[o].position:-1},this.progress=function(e){if(null==e)return Object.keys(n.playhead).map(e=>t.progress(e));const o=this.currentTime(e);return-1==o?-1:o/this.duration()},this.waveformSegment=function(e={start:0,end:1},t){return null!=e&&n.fileLoaded?_canvas_.library.audio.waveformSegment(o.track.buffer,e,t):[]}},this.channelMultiplier=function(e,t=2){const n={in:{},outs:[],out_0:{},out_1:{}};n.in.gain=1,n.in.node=e.createGain(),_canvas_.library.audio.changeAudioParam(e,n.in.node.gain,n.in.gain,.01,"instant",!0);for(let o=0;o<t;o++){const t={gain:.5,node:e.createGain()};_canvas_.library.audio.changeAudioParam(e,t.node.gain,t.gain,.01,"instant",!0),n.outs.push(t),n.in.node.connect(t.node)}this.in=function(){return n.in.node},this.out=function(e){return n.outs[e].node},this.inGain=function(t){if(null==t)return n.in.gain;n.in.gain=t,_canvas_.library.audio.changeAudioParam(e,n.in.node.gain,n.in.gain,.01,"instant",!0)},this.outGain=function(t,o){if(null==o)return n.outs[t].gain;n.outs[t].gain=o,_canvas_.library.audio.changeAudioParam(e,n.outs[t].node.gain,n.outs[t].gain,.01,"instant",!0)}},this.recorder=function(e){const t={recordedChunks:[],recordingStartTime:-1,recordingLength:0},n={leftIn:{},rightIn:{},recordingNode:{},leftOut:{},rightOut:{}};function o(){switch(n.recordingNode.node.state){case"inactive":case"paused":return t.recordingLength;case"recording":return e.currentTime-t.recordingStartTime}}n.leftIn.node=e.createAnalyser(),n.rightIn.node=e.createAnalyser(),n.recordingNode.audioDest=new MediaStreamAudioDestinationNode(e),n.recordingNode.node=new MediaRecorder(n.recordingNode.audioDest.stream,{mimeType:"audio/webm"}),n.recordingNode.node.onstart=function(){},n.recordingNode.node.ondataavailable=function(e){t.recordedChunks.push(e.data)},n.recordingNode.node.onpause=function(){},n.recordingNode.node.onresume=function(){},n.recordingNode.node.onerror=function(e){console.log(e)},n.recordingNode.node.onstop=function(){},n.leftIn.node.connect(n.recordingNode.audioDest),n.rightIn.node.connect(n.recordingNode.audioDest),n.leftOut.node=e.createAnalyser(),n.leftIn.node.connect(n.leftOut.node),n.rightOut.node=e.createAnalyser(),n.rightIn.node.connect(n.rightOut.node),this.clear=function(){this.stop(),t.recordedChunks=[],t.recordingStartTime=-1,t.recordingLength=0},this.start=function(){this.clear(),n.recordingNode.node.start(),t.recordingStartTime=e.currentTime},this.pause=function(){"inactive"!=this.state()&&(t.recordingLength=o(),n.recordingNode.node.pause())},this.resume=function(){n.recordingNode.node.resume(),t.recordingStartTime=e.currentTime-t.recordingLength},this.stop=function(){"inactive"!=this.state()&&(t.recordingLength=o(),n.recordingNode.node.stop())},this.export=function(){return new Blob(t.recordedChunks,{type:"audio/ogg; codecs=opus"})},this.save=function(e="output"){const t=document.createElement("a");t.href=URL.createObjectURL(this.export()),t.download=e+".ogg",document.body.appendChild(t),t.click(),document.body.removeChild(t)},this.state=function(){return n.recordingNode.node.state},this.recordingTime=function(){return o()},this.getTrack=function(){return this.export()},this.in_left=function(){return n.leftIn.node},this.in_right=function(){return n.rightIn.node},this.out_left=function(){return n.leftOut.node},this.out_right=function(){return n.rightOut.node}},this.audioIn=function(e,t=!0){const n={audioDevice:void 0,outAggregator:{}};n.outAggregator.gain=1,n.outAggregator.node=e.createGain(),_canvas_.library.audio.changeAudioParam(e,n.outAggregator.node.gain,n.outAggregator.gain),this.out=function(){return n.outAggregator.node},this.listDevices=function(e){navigator.mediaDevices.enumerateDevices().then((function(t){e(t.filter(e=>"audioinput"===e.kind))}))},this.selectDevice=function(e){navigator.mediaDevices.getUserMedia({audio:{deviceId:e}}).then((function(e){null!=n.audioDevice&&n.audioDevice.disconnect(),n.audioDevice=_canvas_.library.audio.context.createMediaStreamSource(e),n.audioDevice.connect(n.outAggregator.node)}),(function(t){console.warn('could not find audio input device: "'+e+'"'),console.warn("\terror:",t)}))},this.gain=function(t){if(null==t)return n.outAggregator.gain;n.outAggregator.gain=t,_canvas_.library.audio.changeAudioParam(e,n.outAggregator.node.gain,t)},t&&this.selectDevice("default")},this.gain=function(e){const t={controlIn:{},gain:{}};t.controlIn={node:new _canvas_.library.audio.audioWorklet.production.only_js.nothing(e)},t.gain={mode:!1,gain:1,node:new _canvas_.library.audio.audioWorklet.production.wasm.gain(e)},t.controlIn.node.connect(t.gain.node,void 0,1),this.in=function(){return t.gain.node},this.out=function(){return t.gain.node},this.control=function(){return t.controlIn.node},this.shutdown=function(){t.controlIn.node.shutdown(),t.gain.node.shutdown(),t.controlIn.node.disconnect(t.gain.node)},this.mode=function(e){if(null==e)return t.gain.mode;t.gain.mode=e,t.gain.node.mode=e},this.gain=function(n){if(null==n)return t.gain.gain;t.gain.gain=n,_canvas_.library.audio.changeAudioParam(e,t.gain.node.gain,n,.01,"instant",!0)}},this.amplitudeModifier=function(e){const t={amplitudeModifierNode:{}};t.amplitudeModifierNode={invert:!1,offset:0,divisor:1,ceiling:10,floor:-10,node:new _canvas_.library.audio.audioWorklet.production.wasm.amplitudeModifier(e)},this.in=function(){return t.amplitudeModifierNode.node},this.out=function(e){return t.amplitudeModifierNode.node},this.shutdown=function(){t.amplitudeModifierNode.node.shutdown()},this.invert=function(e){if(null==e)return t.amplitudeModifierNode.invert;t.amplitudeModifierNode.invert=e,t.amplitudeModifierNode.node.invert=e},this.offset=function(n){if(null==n)return t.amplitudeModifierNode.offset;t.amplitudeModifierNode.offset=n,_canvas_.library.audio.changeAudioParam(e,t.amplitudeModifierNode.node.offset,n,.01,"instant",!0)},this.divisor=function(n){if(null==n)return t.amplitudeModifierNode.divisor;t.amplitudeModifierNode.divisor=n,_canvas_.library.audio.changeAudioParam(e,t.amplitudeModifierNode.node.divisor,n,.01,"instant",!0)},this.ceiling=function(n){if(null==n)return t.amplitudeModifierNode.ceiling;t.amplitudeModifierNode.ceiling=n,_canvas_.library.audio.changeAudioParam(e,t.amplitudeModifierNode.node.ceiling,n,.01,"instant",!0)},this.floor=function(n){if(null==n)return t.amplitudeModifierNode.floor;t.amplitudeModifierNode.floor=n,_canvas_.library.audio.changeAudioParam(e,t.amplitudeModifierNode.node.floor,n,.01,"instant",!0)}},this.streamAdder=function(e){const t={input_1:{},input_2:{},mixControl:{},streamAdder:{}};t.input_1={node:new _canvas_.library.audio.audioWorklet.production.only_js.nothing(e)},t.input_2={node:new _canvas_.library.audio.audioWorklet.production.only_js.nothing(e)},t.mixControl={node:new _canvas_.library.audio.audioWorklet.production.only_js.nothing(e)},t.streamAdder={mode:!1,mix:1,node:new _canvas_.library.audio.audioWorklet.production.wasm.streamAdder(e)},t.input_1.node.connect(t.streamAdder.node,void 0,0),t.input_2.node.connect(t.streamAdder.node,void 0,1),t.mixControl.node.connect(t.streamAdder.node,void 0,2),this.in_1=function(){return t.input_1.node},this.in_2=function(){return t.input_2.node},this.mixControl=function(){return t.mixControl.node},this.out=function(){return t.streamAdder.node},this.shutdown=function(){t.input_1.node.shutdown(),t.input_2.node.shutdown(),t.mixControl.node.shutdown(),t.streamAdder.node.shutdown(),t.input_1.node.disconnect(t.streamAdder.node),t.input_2.node.disconnect(t.streamAdder.node),t.mixControl.node.disconnect(t.streamAdder.node)},this.mode=function(e){if(null==e)return t.streamAdder.mode;t.streamAdder.mode=e,t.streamAdder.node.mode=e},this.mix=function(n){if(null==n)return t.streamAdder.mix;t.streamAdder.mix=n,_canvas_.library.audio.changeAudioParam(e,t.streamAdder.node.mix,n,.01,"instant",!0)}},this.sigmoid=function(e){const t={sigmoid:{}};t.sigmoid={gain:1,sharpness:0,node:new _canvas_.library.audio.audioWorklet.production.wasm.sigmoid(e)},this.in=function(){return t.sigmoid.node},this.out=function(e){return t.sigmoid.node},this.shutdown=function(){t.sigmoid.node.shutdown()},this.gain=function(n){if(null==n)return t.sigmoid.gain;n>1&&(n=1),n<0&&(n=0),t.sigmoid.gain=n,_canvas_.library.audio.changeAudioParam(e,t.sigmoid.node.gain,n,.01,"instant",!0)},this.sharpness=function(n){if(null==n)return t.sigmoid.sharpness;n>1&&(n=1),n<0&&(n=0),t.sigmoid.sharpness=n,_canvas_.library.audio.changeAudioParam(e,t.sigmoid.node.sharpness,n,.01,"instant",!0)}},this.reverbUnit=function(e){const t={inAggregator:{},reverbGain:{},bypassGain:{},reverbNode:{},outAggregator:{}};function n(n,o,r){const a=new XMLHttpRequest;a.open("GET",n+o,!0),a.responseType="arraybuffer",a.onload=function(){t.reverbNode.node.disconnect(),t.reverbNode.node=e.createConvolver(),t.reverbGain.node.connect(t.reverbNode.node),t.reverbNode.node.connect(t.outAggregator.node),e.decodeAudioData(a.response,(function(e){t.reverbNode.node.buffer=e}),(function(e){console.warn("Error with decoding audio data"+e.err)})),r&&r()},a.send()}t.inAggregator.gain=1,t.inAggregator.node=e.createGain(),_canvas_.library.audio.changeAudioParam(e,t.inAggregator.node.gain,t.inAggregator.gain,.01,"instant",!0),t.reverbGain.gain=.5,t.bypassGain.gain=.5,t.reverbGain.node=e.createGain(),t.bypassGain.node=e.createGain(),_canvas_.library.audio.changeAudioParam(e,t.reverbGain.node.gain,t.reverbGain.gain,.01,"instant",!0),_canvas_.library.audio.changeAudioParam(e,t.bypassGain.node.gain,t.bypassGain.gain,.01,"instant",!0),t.reverbNode.impulseResponseRepoURL="https://metasophiea.com/lib/audio/impulseResponse/",t.reverbNode.selectedReverbType="Musikvereinsaal.wav",t.reverbNode.node=e.createConvolver(),t.outAggregator.gain=1,t.outAggregator.node=e.createGain(),_canvas_.library.audio.changeAudioParam(e,t.outAggregator.node.gain,t.outAggregator.gain,.01,"instant",!0),t.inAggregator.node.connect(t.reverbGain.node),t.inAggregator.node.connect(t.bypassGain.node),t.reverbGain.node.connect(t.reverbNode.node),t.bypassGain.node.connect(t.outAggregator.node),t.reverbNode.node.connect(t.outAggregator.node),this.in=function(){return t.inAggregator.node},this.out=function(){return t.outAggregator.node},this.getTypes=function(e){!function(e,t=null){const n=new XMLHttpRequest;n.open("GET",e+"available2.list",!0),n.onload=function(){const e=n.response.split("\n");e[e.length-1]=e[e.length-1].split(""),e[e.length-1].pop(),e[e.length-1]=e[e.length-1].join(""),e.splice(-1,1),null==t?console.log(e):t(e)},n.send()}(t.reverbNode.impulseResponseRepoURL,e)},this.type=function(e,o){if(null==e)return t.reverbNode.selectedReverbType;t.reverbNode.selectedReverbType=e,n(t.reverbNode.impulseResponseRepoURL,t.reverbNode.selectedReverbType,o)},this.outGain=function(n){if(null==n)return t.outAggregator.gain;t.outAggregator.gain=n,_canvas_.library.audio.changeAudioParam(e,t.outAggregator.node.gain,n,.01,"instant",!0)},this.wetdry=function(n,o,r){if("manualControl"==n){if(null==n)return{w:t.reverbGain.gain,d:t.bypassGain.gain};t.reverbGain.gain=o,t.bypassGain.gain=r}else{if(null==n)return t.reverbGain.gain;t.reverbGain.gain=n,t.bypassGain.gain=1-n}_canvas_.library.audio.changeAudioParam(e,t.reverbGain.node.gain,t.reverbGain.gain,.01,"instant",!0),_canvas_.library.audio.changeAudioParam(e,t.bypassGain.node.gain,t.bypassGain.gain,.01,"instant",!0)},n(t.reverbNode.impulseResponseRepoURL,t.reverbNode.selectedReverbType)},this.momentaryAmplitudeMeter=function(e){const t=this,n=new _canvas_.library.audio.audioWorklet.production.only_js.momentaryAmplitudeMeter(e);this.in=function(){return n},this.fullSample=function(e){if(null==e)return n.fullSample;n.fullSample=e},this.updateMode=function(e){if(null==e)return n.updateMode;n.updateMode=e},this.updateDelay=function(e){if(null==e)return n.updateDelay;n.updateDelay=e},this.calculationMode=function(e){if(null==e)return n.calculationMode;n.calculationMode=e},this.reading=function(){},n.reading=function(e){null!=t.reading&&t.reading(e)}},this.bitcrusher=function(e){const t=new _canvas_.library.audio.audioWorklet.production.wasm.bitcrusher(e);this.in=function(){return t},this.out=function(e){return t},this.shutdown=function(){t.shutdown()},this.amplitudeResolution=function(e){if(null==e)return t.amplitudeResolution;t.amplitudeResolution=e},this.sampleFrequency=function(e){if(null==e)return t.sampleFrequency;t.sampleFrequency=e}},this.distortionUnit=function(e){const t={inAggregator:{},distortionNode:{},outAggregator:{}};function n(){t.inAggregator.node.disconnect(),t.distortionNode.node&&t.distortionNode.node.disconnect(),t.distortionNode.node=e.createWaveShaper(),t.distortionNode.curve=new Float32Array(_canvas_.library.math.curveGenerator.s(t.distortionNode.resolution,-1,1,t.distortionNode.distortionAmount)),t.distortionNode.node.curve=t.distortionNode.curve,t.distortionNode.node.oversample=t.distortionNode.oversample,t.inAggregator.node.connect(t.distortionNode.node),t.distortionNode.node.connect(t.outAggregator.node)}t.inAggregator.gain=0,t.inAggregator.node=e.createGain(),_canvas_.library.audio.changeAudioParam(e,t.inAggregator.node.gain,t.inAggregator.gain,.01,"instant",!0),t.distortionNode.distortionAmount=0,t.distortionNode.oversample="none",t.distortionNode.resolution=100,t.outAggregator.gain=0,t.outAggregator.node=e.createGain(),_canvas_.library.audio.changeAudioParam(e,t.outAggregator.node.gain,t.outAggregator.gain,.01,"instant",!0),this.in=function(){return t.inAggregator.node},this.out=function(){return t.outAggregator.node},this.inGain=function(n){if(null==n)return t.inAggregator.gain;t.inAggregator.gain=n,_canvas_.library.audio.changeAudioParam(e,t.inAggregator.node.gain,n,.01,"instant",!0)},this.outGain=function(n){if(null==n)return t.outAggregator.gain;t.outAggregator.gain=n,_canvas_.library.audio.changeAudioParam(e,t.outAggregator.node.gain,n,.01,"instant",!0)},this.distortionAmount=function(e){if(null==e)return t.distortionNode.distortionAmount;t.distortionNode.distortionAmount=e,n()},this.oversample=function(e){if(null==e)return t.distortionNode.oversample;t.distortionNode.oversample=e,n()},this.resolution=function(e){if(null==e)return t.distortionNode.resolution;t.distortionNode.resolution=e>=2?e:2,n()},n()},this.stableAmplitudeGenerator=function(e){const t={stableAmplitudeGenerator:{}};t.stableAmplitudeGenerator={amplitude:0,node:new _canvas_.library.audio.audioWorklet.production.only_js.stableAmplitudeGenerator(e)},this.out=function(){return t.stableAmplitudeGenerator.node},this.shutdown=function(){t.stableAmplitudeGenerator.node.shutdown()},this.amplitude=function(n){if(null==n)return t.stableAmplitudeGenerator.amplitude;t.stableAmplitudeGenerator.amplitude=n,_canvas_.library.audio.changeAudioParam(e,t.stableAmplitudeGenerator.node.amplitude,n,.01,"instant",!0)}},this.oscillator_type_1=function(e){const t={gainControl:{},detuneControl:{},dutyCycleControl:{},oscillator:{}};t.gainControl={node:new _canvas_.library.audio.audioWorklet.production.only_js.nothing(e)},t.detuneControl={node:new _canvas_.library.audio.audioWorklet.production.only_js.nothing(e)},t.dutyCycleControl={node:new _canvas_.library.audio.audioWorklet.production.only_js.nothing(e)},t.oscillator={frequency:440,gain:1,detune:0,dutyCycle:.5,node:new _canvas_.library.audio.audioWorklet.production.wasm.oscillator_type_1(_canvas_.library.audio.context)},t.gainControl.node.connect(t.oscillator.node,void 0,0),t.detuneControl.node.connect(t.oscillator.node,void 0,1),t.dutyCycleControl.node.connect(t.oscillator.node,void 0,2),this.out=function(){return t.oscillator.node},this.gainControl=function(){return t.gainControl.node},this.detuneControl=function(){return t.detuneControl.node},this.dutyCycleControl=function(){return t.dutyCycleControl.node},this.shutdown=function(){t.gainControl.node.shutdown(),t.detuneControl.node.shutdown(),t.dutyCycleControl.node.shutdown(),t.oscillator.node.shutdown(),t.gainControl.node.disconnect(t.oscillator.node),t.detuneControl.node.disconnect(t.oscillator.node),t.dutyCycleControl.node.disconnect(t.oscillator.node)},this.waveform=function(e){if(null==e)return t.oscillator.node.waveform;t.oscillator.node.waveform=e},this.frequency=function(n){if(null==n)return t.oscillator.frequency;t.oscillator.frequency=n,_canvas_.library.audio.changeAudioParam(e,t.oscillator.node.frequency,n,.01,"instant",!0)},this.gain=function(n){if(null==n)return t.oscillator.gain;t.oscillator.gain=n,_canvas_.library.audio.changeAudioParam(e,t.oscillator.node.gain,n,.01,"instant",!0)},this.detune=function(n){if(null==n)return t.oscillator.detune;t.oscillator.detune=n,_canvas_.library.audio.changeAudioParam(e,t.oscillator.node.detune,n,.01,"instant",!0)},this.dutyCycle=function(n){if(null==n)return t.oscillator.dutyCycle;t.oscillator.dutyCycle=n,_canvas_.library.audio.changeAudioParam(e,t.oscillator.node.dutyCycle,n,.01,"instant",!0)},this.gain_useControl=function(e){if(null==e)return t.oscillator.node.gain_useControl;t.oscillator.node.gain_useControl=e},this.detune_useControl=function(e){if(null==e)return t.oscillator.node.detune_useControl;t.oscillator.node.detune_useControl=e},this.dutyCycle_useControl=function(e){if(null==e)return t.oscillator.node.dutyCycle_useControl;t.oscillator.node.dutyCycle_useControl=e}},this.filterUnit=function(e){const t={inAggregator:{},filterNode:{},outAggregator:{}};t.inAggregator.gain=1,t.inAggregator.node=e.createGain(),_canvas_.library.audio.changeAudioParam(e,t.inAggregator.node.gain,t.inAggregator.gain,.01,"instant",!0),t.filterNode.node=e.createBiquadFilter(),t.filterNode.node.type="lowpass",_canvas_.library.audio.changeAudioParam(e,t.filterNode.node.frequency,110,.01,"instant",!0),_canvas_.library.audio.changeAudioParam(e,t.filterNode.node.gain,1,.01,"instant",!0),_canvas_.library.audio.changeAudioParam(e,t.filterNode.node.Q,.1,.01,"instant",!0),t.outAggregator.gain=1,t.outAggregator.node=e.createGain(),_canvas_.library.audio.changeAudioParam(e,t.outAggregator.node.gain,t.outAggregator.gain,.01,"instant",!0),t.inAggregator.node.connect(t.filterNode.node),t.filterNode.node.connect(t.outAggregator.node),this.in=function(){return t.inAggregator.node},this.out=function(){return t.outAggregator.node},this.type=function(e){t.filterNode.node.type=e},this.frequency=function(n){_canvas_.library.audio.changeAudioParam(e,t.filterNode.node.frequency,n,.01,"instant",!0)},this.gain=function(n){_canvas_.library.audio.changeAudioParam(e,t.filterNode.node.gain,n,.01,"instant",!0)},this.Q=function(n){_canvas_.library.audio.changeAudioParam(e,t.filterNode.node.Q,n,.01,"instant",!0)},this.measureFrequencyResponse=function(e,t,n){const o=[];for(let r=e;r<t;r+=n)o.push(r);return this.measureFrequencyResponse_values(o)},this.measureFrequencyResponse_values=function(e){const n=new Float32Array(e),o=new Float32Array(n.length),r=new Float32Array(n.length);return t.filterNode.node.getFrequencyResponse(n,o,r),[o,e]}},this.lagProcessor=function(e){const t=new _canvas_.library.audio.audioWorklet.production.wasm.lagProcessor(e);this.in=function(){return t},this.out=function(){return t},this.shutdown=function(){t.shutdown()},this.samples=function(e){if(null==e)return t.samples;t.samples=e}},this.whiteNoiseGenerator=function(e){const t=new _canvas_.library.audio.audioWorklet.production.only_js.whiteNoiseGenerator(e);this.out=function(){return t},this.shutdown=function(){t.shutdown()}},this.frequencyAmplitudeResponseAnalyser=function(e){const t=this,n=new _canvas_.library.audio.audioWorklet.production.only_js.frequencyAmplitudeResponseAnalyser(e);this.producer=function(){return n},this.consumer=function(){return n},this.start=function(){n.start()},this.stop=function(){n.stop()},this.clear=function(){n.clear()},this.waveform=function(e){if(null==e)return n.waveform;n.waveform=e},this.signalGeneratorGain=function(e){if(null==e)return n.signalGeneratorGain;n.signalGeneratorGain=e},this.dutyCycle=function(e){if(null==e)return n.dutyCycle;n.dutyCycle=e},this.range=function(e,t){if(null==e&&null==t)return n.range;n.range={start:null==e?n.range.start:e,end:null==t?n.range.end:t}},this.stepSize=function(e){if(null==e)return n.stepSize;n.stepSize=e},this.timePerStep=function(e){if(null==e)return n.timePerStep;n.timePerStep=e},n.onValue=function(e){null!=t.onValue&&t.onValue(e)},n.onCompletion=function(e){null!=t.onCompletion&&t.onCompletion(e)},this.onValue=function(){},this.onCompletion=function(){}}},this.part=new function(){const t=this;this.partLibrary={},this.builder=function(e,t,n,o){return o||(o={}),null==o.style&&(o.style={}),e in this.partLibrary&&t in this.partLibrary[e]?this.partLibrary[e][t](n,o):(console.warn("Interface Part Builder :: Unknown element: "+e+"::"+t),null)},this.collection=new function(){this.basic=new function(){t.partLibrary.basic={},this.polygon=function(e=null,t=[],n=[],o=!1,r={r:1,g:0,b:1,a:1}){const a=_canvas_.core.element.create("Polygon",String(e));return a.unifiedAttribute({ignored:o,colour:r}),0!=t.length?a.points(t):a.pointsAsXYArray(n),a},t.partLibrary.basic.polygon=function(e,n){return t.collection.basic.polygon(e,n.points,n.pointsAsXYArray,n.ignored,n.colour)},this.rectangleWithOutline=function(e=null,t=0,n=0,o=10,r=10,a=0,i={x:0,y:0},s=!1,l={r:1,g:0,b:1,a:1},c=1,u={r:0,g:0,b:0,a:1}){const p=_canvas_.core.element.create("RectangleWithOutline",String(e));return p.unifiedAttribute({x:t,y:n,width:o,height:r,angle:a,anchor:i,ignored:s,colour:l,lineColour:u,thickness:c}),p},t.partLibrary.basic.rectangleWithOutline=function(e,n){return t.collection.basic.rectangleWithOutline(e,n.x,n.y,n.width,n.height,n.angle,n.anchor,n.ignored,n.colour,n.thickness,n.lineColour)},this.circle=function(e=null,t=0,n=0,o=10,r=25,a=!1,i={r:1,g:0,b:1,a:1}){const s=_canvas_.core.element.create("Circle",String(e));return s.unifiedAttribute({x:t,y:n,radius:o,detail:r,ignored:a,colour:i}),s},t.partLibrary.basic.circle=function(e,n){return t.collection.basic.circle(e,n.x,n.y,n.radius,n.detail,n.ignored,n.colour)},this.polygonWithOutline=function(e=null,t=[],n=[],o=!1,r={r:1,g:0,b:1,a:1},a=1,i={r:0,g:0,b:0,a:1}){const s=_canvas_.core.element.create("PolygonWithOutline",String(e));return s.unifiedAttribute({ignored:o,colour:r,lineColour:i,thickness:a}),0!=t.length?s.points(t):s.pointsAsXYArray(n),s},t.partLibrary.basic.polygonWithOutline=function(e,n){return t.collection.basic.polygonWithOutline(e,n.points,n.pointsAsXYArray,n.ignored,n.colour,n.thickness,n.lineColour)},this.canvas=function(e=null,t=0,n=0,o=10,r=10,a=0,i={x:0,y:0},s=!1,l=1){const c=_canvas_.core.element.create("Canvas",String(e));return c.unifiedAttribute({x:t,y:n,width:o,height:r,angle:a,anchor:i,ignored:s,resolution:l}),c},t.partLibrary.basic.canvas=function(e,n){return t.collection.basic.canvas(e,n.x,n.y,n.width,n.height,n.angle,n.anchor,n.ignored,n.resolution)},this.image=function(e=null,t=0,n=0,o=10,r=10,a=0,i={x:0,y:0},s=!1,l=""){const c=_canvas_.core.element.create("Image",String(e));return c.unifiedAttribute({x:t,y:n,width:o,height:r,angle:a,anchor:i,ignored:s,url:l}),c},t.partLibrary.basic.image=function(e,n){return t.collection.basic.image(e,n.x,n.y,n.width,n.height,n.angle,n.anchor,n.ignored,n.url)},this.path=function(e=null,t=[],n=1,o=!1,r={r:0,g:0,b:0,a:1},a=[],i="sharp",s="none",l=!1,c=25,u=4){const p=_canvas_.core.element.create("Path",String(e));return p.unifiedAttribute({ignored:o,colour:r,thickness:n,jointType:i,capType:s,looping:l,jointDetail:c,sharpLimit:u}),0!=t.length?p.points(t):p.pointsAsXYArray(a),p},t.partLibrary.basic.path=function(e,n){return t.collection.basic.path(e,n.points,n.thickness,n.ignored,n.colour,n.pointsAsXYArray,n.jointType,n.capType,n.looping,n.jointDetail,n.sharpLimit)},this.rectangle=function(e=null,t=0,n=0,o=10,r=10,a=0,i={x:0,y:0},s=!1,l={r:1,g:0,b:1,a:1}){const c=_canvas_.core.element.create("Rectangle",String(e));return c.unifiedAttribute({x:t,y:n,width:o,height:r,angle:a,anchor:i,ignored:s,colour:l}),c},t.partLibrary.basic.rectangle=function(e,n){return t.collection.basic.rectangle(e,n.x,n.y,n.width,n.height,n.angle,n.anchor,n.ignored,n.colour)},this.group=function(e=null,t=0,n=0,o=0,r=!1,a=!1){const i=_canvas_.core.element.create("Group",String(e));return i.unifiedAttribute({x:t,y:n,angle:o,ignored:r,clipActive:a}),i},t.partLibrary.basic.group=function(e,n){return t.collection.basic.group(e,n.x,n.y,n.angle,n.ignored,n.clipActive)},this.text=function(e=null,t="Hello",n=0,o=0,r=10,a=10,i=0,s=!1,l={r:1,g:0,b:1,a:1},c="Roboto-Regular",u={widthCalculation:"filling",horizontal:"left",vertical:"top"},p=.5,d=0){const h=_canvas_.core.element.create("CharacterString",String(e));return h.unifiedAttribute({x:n,y:o,width:r,height:a,angle:i,ignored:s,colour:l,font:c,string:String(t),printingMode:u,spacing:p,interCharacterSpacing:d}),h},t.partLibrary.basic.text=function(e,n){return t.collection.basic.text(e,n.text,n.x,n.y,n.width,n.height,n.angle,n.ignored,n.colour,n.font,n.printingMode,n.spacing,n.interCharacterSpacing)},this.circleWithOutline=function(e=null,t=0,n=0,o=10,r=25,a=!1,i={r:1,g:0,b:1,a:1},s=1,l={r:0,g:0,b:0,a:1}){const c=_canvas_.core.element.create("CircleWithOutline",String(e));return c.unifiedAttribute({x:t,y:n,radius:o,detail:r,thickness:s,ignored:a,colour:i,lineColour:l}),c},t.partLibrary.basic.circleWithOutline=function(e,n){return t.collection.basic.circleWithOutline(e,n.x,n.y,n.radius,n.detail,n.ignored,n.colour,n.thickness,n.lineColour)}},this.display=new function(){t.partLibrary.display={},this.glowbox_rectangle=function(e="glowbox_rectangle",n=0,o=0,r=30,a=30,i=0,s={r:.95,g:.91,b:.55,a:1},l={r:.31,g:.31,b:.31,a:1}){const c=t.builder("basic","group",e,{x:n,y:o}),u=t.builder("basic","rectangle","light",{width:r,height:a,angle:i,colour:l});return c.append(u),c.on=function(){u.colour(s)},c.off=function(){u.colour(l)},c},t.partLibrary.display.glowbox_rectangle=function(e,n){return t.collection.display.glowbox_rectangle(e,n.x,n.y,n.width,n.height,n.angle,n.style.glow,n.style.dim)},this.glowbox_polygon=function(e="glowbox_polygon",n=0,o=0,r=[{x:0,y:5},{x:5,y:0},{x:25,y:0},{x:30,y:5},{x:30,y:25},{x:25,y:30},{x:5,y:30},{x:0,y:25}],a=0,i={r:.95,g:.91,b:.55,a:1},s={r:.31,g:.31,b:.31,a:1}){const l=t.builder("basic","group",e,{x:n,y:o,angle:a}),c=t.builder("basic","polygon","light",{pointsAsXYArray:r,colour:s});return l.append(c),l.on=function(){c.colour(i)},l.off=function(){c.colour(s)},l},t.partLibrary.display.glowbox_polygon=function(e,n){return t.collection.display.glowbox_polygon(e,n.x,n.y,n.points,n.angle,n.style.glow,n.style.dim)},this.glowbox_image=function(e="glowbox_image",n=0,o=0,r=30,a=30,i=0,s="",l=""){const c=t.builder("basic","group",e,{x:n,y:o}),u=t.builder("basic","image","backing",{width:r,height:a,angle:i,url:l});return c.append(u),c.on=function(){u.url(s)},c.off=function(){u.url(l)},c},t.partLibrary.display.glowbox_image=function(e,n){return t.collection.display.glowbox_image(e,n.x,n.y,n.width,n.height,n.angle,n.glowURL,n.dimURL)},this.glowbox_circle=function(e="glowbox_circle",n=0,o=0,r=12.5,a={r:.95,g:.91,b:.55,a:1},i={r:.31,g:.31,b:.31,a:1}){const s=t.builder("basic","group",e,{x:n,y:o}),l=t.builder("basic","circle","light",{radius:r,colour:i});return s.append(l),s.on=function(){l.colour(a)},s.off=function(){l.colour(i)},s},t.partLibrary.display.glowbox_circle=function(e,n){return t.collection.display.glowbox_circle(e,n.x,n.y,n.radius,n.style.glow,n.style.dim)},this.glowbox_path=function(e="glowbox_path",n=0,o=0,r=[{x:0,y:5},{x:5,y:0},{x:25,y:0},{x:30,y:5},{x:30,y:25},{x:25,y:30},{x:5,y:30},{x:0,y:25}],a=0,i=1,s=!1,l="sharp",c="none",u={r:.95,g:.91,b:.55,a:1},p={r:.31,g:.31,b:.31,a:1}){const d=t.builder("basic","group",e,{x:n,y:o,angle:a}),h=t.builder("basic","path","light",{pointsAsXYArray:r,thickness:i,looping:s,colour:p,jointType:l,capType:c});return d.append(h),d.on=function(){h.colour(u)},d.off=function(){h.colour(p)},d},t.partLibrary.display.glowbox_path=function(e,n){return t.collection.display.glowbox_path(e,n.x,n.y,n.points,n.angle,n.thickness,n.looping,n.jointType,n.capType,n.style.glow,n.style.dim)},this.grapher_audioScope=function(e="grapher_audioScope",n,o,r=120,a=60,i=0,s=!1,l=5,c={colour:{r:0,g:1,b:0,a:1},thickness:.5},u={colour:{r:.39,g:1,b:.39,a:1},size:7.5,font:"Helvetica"},p={r:0,g:.39,b:0,a:1},d=.25,h={r:0,g:.59,b:0,a:1},_=.1,g="Helvetica",f={r:.2,g:.2,b:.2,a:1}){const m={analyser:{analyserNode:_canvas_.library.audio.context.createAnalyser(),timeDomainDataArray:null,frequencyData:null,refreshRate:10,scopeRefreshInterval:null,returnedValueLimits:{min:0,max:256,halfdiff:128}},graph:{resolution:256}};m.analyser.analyserNode.fftSize=m.graph.resolution,m.analyser.timeDomainDataArray=new Uint8Array(m.analyser.analyserNode.fftSize),m.analyser.frequencyData=new Uint8Array(m.analyser.analyserNode.fftSize);const y=t.builder("basic","group",e,{x:n,y:o,angle:i}),v=t.builder("display","grapher",e,{x:0,y:0,width:r,height:a,canvasBased:s,resolution:l,foregroundStyles:[c],foregroundTextStyles:[u],backgroundStyle_colour:p,backgroundStyle_lineThickness:d,backgroundTextStyle_fill:h,backgroundTextStyle_size:_,backgroundTextStyle_font:g,backingStyle:f});return y.append(v),y.start=function(){null==m.analyser.scopeRefreshInterval&&(m.analyser.scopeRefreshInterval=setInterval((function(){!function(){const e=[];m.analyser.analyserNode.getByteTimeDomainData(m.analyser.timeDomainDataArray);for(let t=0;t<m.analyser.timeDomainDataArray.length;t++)e.push(m.analyser.timeDomainDataArray[t]/m.analyser.returnedValueLimits.halfdiff-1);v.drawForeground(e)}()}),1e3/m.analyser.refreshRate))},y.stop=function(){clearInterval(m.analyser.scopeRefreshInterval),m.analyser.scopeRefreshInterval=null},y.getNode=function(){return m.analyser.analyserNode},y.resolution=function(e=null){if(null==e)return m.graph.resolution;m.graph.resolution=e,this.stop(),this.start()},y.refreshRate=function(e){if(null==e)return m.analyser.refreshRate;m.analyser.refreshRate=e,this.stop(),this.start()},y.oncreate=function(){v.viewbox({l:-1.1,h:1.1}),v.horizontalMarkings({points:[1,.75,.5,.25,0,-.25,-.5,-.75,-1],printText:!1}),v.verticalMarkings({points:[-.25,-.5,-.75,0,.25,.5,.75],printText:!1}),v.drawBackground()},y.ondelete=function(){y.stop()},y},t.partLibrary.display.grapher_audioScope=function(e,n){return t.collection.display.grapher_audioScope(e,n.x,n.y,n.width,n.height,n.angle,n.canvasBased,n.resolution,n.style.foregrounds,n.style.foregroundText,n.style.background_colour,n.style.background_lineThickness,n.style.backgroundText_colour,n.style.backgroundText_size,n.style.backgroundText_font,n.style.backing)},this.grapher=function(e="grapher",n,o,r=120,a=60,i=0,s=!1,l=5,c=[{colour:{r:0,g:1,b:0,a:1},thickness:.5},{colour:{r:1,g:1,b:0,a:1},thickness:.5},{colour:{r:0,g:1,b:1,a:1},thickness:.5}],u=[{colour:{r:.39,g:1,b:.39,a:1},size:7.5,font:"Helvetica"},{colour:{r:1,g:1,b:.39,a:1},size:7.5,font:"Helvetica"},{colour:{r:.39,g:1,b:1,a:1},size:7.5,font:"Helvetica"}],p={r:0,g:.39,b:0,a:1},d=.25,h={r:0,g:.58,b:0,a:1},_=7.5,g="Helvetica",f={points:[.75,.5,.25,0,-.25,-.5,-.75],printingValues:[],mappedPosition:0,textPositionOffset:{x:1,y:-.5},printText:!0},m={points:[.75,.5,.25,0,-.25,-.5,-.75],printingValues:[],mappedPosition:0,textPositionOffset:{x:1,y:-.5},printText:!0},y={r:.2,g:.2,b:.2,a:1}){const v={bottom:-1,top:1,left:-1,right:1},b=[],x=t.builder("basic","group",e,{x:n,y:o,angle:i});if(x.viewbox=function(e){if(null==e)return v;null!=e.bottom&&(v.bottom=e.bottom),null!=e.top&&(v.top=e.top),null!=e.left&&(v.left=e.left),null!=e.right&&(v.right=e.right)},x.horizontalMarkings=function(e){if(null==e)return f;null!=e.points&&(f.points=e.points),null!=e.printingValues&&(f.printingValues=e.printingValues),null!=e.textPositionOffset&&(f.textPositionOffset=e.textPositionOffset),null!=e.printText&&(f.printText=e.printText),null!=e.mappedPosition&&(f.mappedPosition=e.mappedPosition)},x.verticalMarkings=function(e){if(null==e)return m;null!=e.points&&(m.points=e.points),null!=e.printingValues&&(m.printingValues=e.printingValues),null!=e.textPositionOffset&&(m.textPositionOffset=e.textPositionOffset),null!=e.printText&&(m.printText=e.printText),null!=e.mappedPosition&&(m.mappedPosition=e.mappedPosition)},s){const n=t.builder("basic","canvas","backingCanvas",{width:r,height:a,resolution:l});x.append(n);const o=t.builder("basic","canvas","frontingCanvas",{width:r,height:a,resolution:l});function w(){n._.fillStyle=_canvas_.library.math.convertColour.obj2rgba(y),n._.fillRect(0,0,n.$(r),n.$(a)),n.requestUpdate()}function k(){o._.clearRect(0,0,o.$(r),o.$(a)),o.requestUpdate()}function C(){w(),k()}function S(){const e=_canvas_.library.math.relativeDistance(r,v.left,v.right,f.mappedPosition?f.mappedPosition:0);for(let t=0;t<f.points.length;t++){if(!(f.points[t]<v.top||f.points[t]>v.bottom))continue;const o=a-_canvas_.library.math.relativeDistance(a,v.bottom,v.top,f.points[t]);n._.fillStyle="rgba("+255*p.r+","+255*p.g+","+255*p.b+","+p.a+")",n._.fillRect(0,n.$(o),n.$(r),n.$(d)),f.printText&&(n._.fillStyle="rgba("+255*h.r+","+255*h.g+","+255*h.b+","+h.a+")",n._.font=_*l/8+"pt "+g,n._.fillText(f.printingValues&&null!=f.printingValues[t]?f.printingValues[t]:f.points[t],n.$(e+f.textPositionOffset.x),n.$(o+f.textPositionOffset.y)))}const t=a-_canvas_.library.math.relativeDistance(a,v.bottom,v.top,m.mappedPosition?m.mappedPosition:0);for(let e=0;e<m.points.length;e++){if(m.points[e]<v.left||m.points[e]>v.right)continue;const o=_canvas_.library.math.relativeDistance(r,v.left,v.right,m.points[e]);n._.fillStyle="rgba("+255*p.r+","+255*p.g+","+255*p.b+","+p.a+")",n._.fillRect(n.$(o),0,n.$(d),n.$(a)),m.printText&&(n._.fillStyle="rgba("+255*h.r+","+255*h.g+","+255*h.b+","+h.a+")",n._.font=_*l/8+"pt "+g,n._.fillText(m.printingValues&&null!=m.printingValues[e]?m.printingValues[e]:m.points[e],n.$(o+m.textPositionOffset.x),n.$(t+m.textPositionOffset.y)))}n.requestUpdate()}function T(t,n,i=0){if(b[i]=null==t&&null==n?void 0:{x:n,y:t},null!=b[i]&&null==b[i].y)return console.warn("grapher_canvasBased error",e,"attempting to add line with no y component"),console.warn("x:",b[i].x),void console.warn("y:",b[i].y);for(let t=0;t<b.length;t++){if(null==b[t])continue;const n=b[t];if(null==c[t]||null==c[t].colour){console.warn("grapher: attempting to draw on layer with no styling information. Action not performed");break}if(o._.strokeStyle="rgba("+255*c[t].colour.r+","+255*c[t].colour.g+","+255*c[t].colour.b+","+c[t].colour.a+")",o._.lineWidth=o.$(c[t].thickness),o._.lineJoin=c[t].lineJoin,o._.lineCap=c[t].lineJoin,o._.beginPath(),null!=n.y&&null==n.x){o._.moveTo(0,o.$(a-_canvas_.library.math.relativeDistance(a,v.bottom,v.top,n.y[0],!0)));for(let e=1;e<n.y.length;e++)o._.lineTo(o.$(e*(r/(n.y.length-1))),o.$(a-_canvas_.library.math.relativeDistance(a,v.bottom,v.top,n.y[e],!0)))}else if(n.y.length==n.x.length){o._.moveTo(o.$(_canvas_.library.math.relativeDistance(r,v.left,v.right,n.x[0],!0)),o.$(a-_canvas_.library.math.relativeDistance(a,v.bottom,v.top,n.y[0],!0)));for(let e=1;e<n.y.length;e++)o._.lineTo(o.$(_canvas_.library.math.relativeDistance(r,v.left,v.right,n.x[e],!0)),o.$(a-_canvas_.library.math.relativeDistance(a,v.bottom,v.top,n.y[e],!0)))}else console.error("grapher_canvasBased::"+e,":layers are of different length:",n.y,n.x);o._.stroke()}o.requestUpdate()}x.append(o),x.resolution=function(e){return n.resolution(e)},x.clearAll=function(){C()},x.drawBackground=function(){w(),S()},x.drawForeground=function(e,t,n=0){k(),T(e,t,n)},x.draw=function(e,t,n=0){C(),S(),T(e,t,n)}}else{const n=1/7,o=t.builder("basic","rectangle","backing",{width:r,height:a,colour:y});x.append(o);const i=t.builder("basic","group","background");x.append(i);const s=t.builder("basic","group","foreground");x.append(s);const l=t.builder("basic","rectangle","stencil",{width:r,height:a});function w(){i.clear()}function k(){s.clear()}function C(){w(),k()}function S(){i.clear();const e=_canvas_.library.math.relativeDistance(r,v.left,v.right,f.mappedPosition?f.mappedPosition:0);for(let o=0;o<f.points.length;o++){if(!(f.points[o]<v.top||f.points[o]>v.bottom))continue;const s=a-_canvas_.library.math.relativeDistance(a,v.bottom,v.top,f.points[o]),l=t.builder("basic","rectangle","horizontal_line_"+o,{x:0,y:s,width:r,height:d,colour:p});if(i.append(l),f.printText){const r=t.builder("basic","text","horizontal_text_"+o,{x:e+f.textPositionOffset.x,y:s+f.textPositionOffset.y-_*n,text:f.printingValues&&null!=f.printingValues[o]?f.printingValues[o]:f.points[o],colour:h,font:g,width:_*n,height:_*n,printingMode:{widthCalculation:"absolute",vertical:"top"}});i.append(r)}}const o=a-_canvas_.library.math.relativeDistance(a,v.bottom,v.top,m.mappedPosition?m.mappedPosition:0);for(let e=0;e<m.points.length;e++){if(m.points[e]<v.left||m.points[e]>v.right)continue;const s=_canvas_.library.math.relativeDistance(r,v.left,v.right,m.points[e]),l=t.builder("basic","rectangle","vertical_line_"+e,{x:s,y:0,width:d,height:a,colour:p});if(i.append(l),m.printText){const r=t.builder("basic","text","vertical_text_"+e,{x:s+m.textPositionOffset.x,y:o+f.textPositionOffset.y-_*n,text:m.printingValues&&null!=m.printingValues[e]?m.printingValues[e]:m.points[e],colour:h,font:g,width:_*n,height:_*n,printingMode:{widthCalculation:"absolute",vertical:"top"}});i.append(r)}}}function T(n,o,i=0){if(s.clear(),b[i]=null==n&&null==o?void 0:{x:o,y:n},null!=b[i]&&null==b[i].y)return console.warn("grapher error",e,"attempting to add line with no y component"),console.warn("x:",b[i].x),void console.warn("y:",b[i].y);for(let n=0;n<b.length;n++){if(null==b[n])continue;const o=b[n],i=[];if(null!=o.y&&null==o.x)for(let e=0;e<o.y.length;e++)i.push({x:e*(r/(o.y.length-1)),y:a-_canvas_.library.math.relativeDistance(a,v.bottom,v.top,o.y[e],!0)});else if(o.y.length==o.x.length)for(let e=0;e<o.y.length;e++)i.push({x:_canvas_.library.math.relativeDistance(r,v.left,v.right,o.x[e],!0),y:a-_canvas_.library.math.relativeDistance(a,v.bottom,v.top,o.y[e],!0)});else console.error("grapher::"+e,":layers are of different length:",o.y,o.x);const l=t.builder("basic","path","layer_"+n,{pointsAsXYArray:i,colour:c[n].colour,thickness:c[n].thickness});s.append(l)}}x.stencil(l),x.clipActive(!0),x.resolution=function(e){console.warn("this isn't the canvasBased version of the grapher part")},x.clearAll=function(){C()},x.drawBackground=function(){w(),S()},x.drawForeground=function(e,t,n=0){k(),T(e,t,n)},x.draw=function(e,t,n=0){C(),S(),T(e,t,n)}}return x},t.partLibrary.display.grapher=function(e,n){return t.collection.display.grapher(e,n.x,n.y,n.width,n.height,n.angle,n.canvasBased,n.resolution,n.style.foregrounds,n.style.foregroundText,n.style.background_colour,n.style.background_lineThickness,n.style.backgroundText_colour,n.style.backgroundText_size,n.style.backgroundText_font,n.backgroundText_horizontalMarkings,n.backgroundText_verticalMarkings,n.style.backing)},this.grapher_periodicWave=function(e="grapher_periodicWave",n,o,r=120,a=60,i=0,s=!1,l=5,c={colour:{r:0,g:1,b:0,a:1},thickness:.5},u={colour:{r:.39,g:1,b:.39,a:1},size:7.5,font:"Helvetica"},p={r:0,g:.39,b:0,a:1},d=.25,h={r:0,g:.59,b:0,a:1},_=.1,g="Helvetica",f={r:.2,g:.2,b:.2,a:1}){let m={sin:[],cos:[]},y=50;const v=t.builder("basic","group",e,{x:n,y:o,angle:i}),b=t.builder("display","grapher",e,{x:0,y:0,width:r,height:a,canvasBased:s,resolution:l,foregroundStyles:[c],foregroundTextStyles:[u],backgroundStyle_colour:p,backgroundStyle_lineThickness:d,backgroundTextStyle_fill:h,backgroundTextStyle_size:_,backgroundTextStyle_font:g,backingStyle:f});return v.append(b),v.wave=function(e=null,t=null){if(null==e){for(;m.sin.length<m.cos.length;)m.sin.push(0);for(;m.sin.length>m.cos.length;)m.cos.push(0);for(let e=0;e<m.sin.length;e++)m.sin[e]||(m.sin[e]=0),m.cos[e]||(m.cos[e]=0);return m}switch(null==t&&(m=e),t){case"sin":m.sin=e;break;case"cos":m.cos=e}},v.waveElement=function(e,t,n){if(null==n)return m[e][t];m[e][t]=n},v.waveResolution=function(e=null){if(null==e)return y;y=e},v.updateBackground=function(){b.viewbox({bottom:-1.1,top:1.1,left:0}),b.horizontalMarkings({points:[1,.75,.5,.25,0,-.25,-.5,-.75,-1],printText:!0}),b.verticalMarkings({points:[0,.25,.5,.75],printText:!0}),b.drawBackground()},v.draw=function(){const e=[];let t=0;for(let n=0;n<=y;n++){t=0;for(let e=0;e<m.sin.length;e++)m.sin[e]||(m.sin[e]=0),t+=Math.sin(e*(2*Math.PI*(n/y)))*m.sin[e];for(let e=0;e<m.cos.length;e++)m.cos[e]||(m.cos[e]=0),t+=Math.cos(e*(2*Math.PI*(n/y)))*m.cos[e];e.push(t)}b.drawForeground(e)},v.reset=function(){this.wave({sin:[],cos:[]}),this.waveResolution(50),this.updateBackground()},v},t.partLibrary.display.grapher_periodicWave=function(e,n){return t.collection.display.grapher_periodicWave(e,n.x,n.y,n.width,n.height,n.angle,n.canvasBased,n.resolution,n.style.foregrounds,n.style.foregroundText,n.style.background_colour,n.style.background_lineThickness,n.style.backgroundText_colour,n.style.backgroundText_size,n.style.backgroundText_font,n.style.backing)},this.gauge=function(e="gauge",n,o,r=0,a=50,i=30,s=[{start:-Math.PI/6,end:Math.PI/6}],l=[{x:.5,y:1.2}],c={r:.04,g:.04,b:.04,a:1},u=[{r:.98,g:.98,b:.98,a:1}]){const p=[],d={start:-Math.PI/6,end:Math.PI/6},h={x:.5,y:1.2},_=t.builder("basic","group",e,{x:n,y:o,angle:r}),g=t.builder("basic","rectangle","backing",{width:a,height:i,colour:c}),f=t.builder("basic","group","needleWindow",{});_.append(g),_.append(f);const m=u.map((e,n)=>{p.push(0);const o=null==l[n]?h:l[n],r={width:a/100,height:i*o.y};return t.builder("basic","rectangle","needleBody_"+n,{x:a*o.x-r.width/2,y:1.1*i+(r.height-i),width:r.width,height:-r.height,colour:e})});m.forEach(e=>f.prepend(e));const y=t.builder("basic","rectangle","stencil",{width:a,height:i});f.stencil(y),f.clipActive(!0),_.needle=function(e,t=0){if(null==e)return p[t];e=(e=e>1?1:e)<0?0:e,p[t]=e;const n=null==s[t]?d:s[t];m[t].angle(n.start+(n.end-n.start)*e)};for(let e=0;e<u.length;e++)_.needle(0,e);return _},t.partLibrary.display.gauge=function(e,n){return t.collection.display.gauge(e,n.x,n.y,n.angle,n.width,n.height,n.needleAngleBounds,n.needleArticulationPoint,n.style.backing,n.style.needles)},this.meter_gauge=function(e="meter_gauge",n,o,r=0,a=50,i=30,s=[{start:-Math.PI/6,end:Math.PI/6}],l={r:.04,g:.04,b:.04,a:1},c=[{r:.98,g:.98,b:.98,a:1},{r:.65,g:.65,b:.65,a:1}],u={upper:"ABCDEF".split(""),middle:[0,1,2,3,4,5,6,7,8,9,10],lower:[0,.25,.5,.75,1]},p={r:.86,g:.86,b:.86,a:1},d="Roboto-Regular",h={widthCalculation:"absolute",horizontal:"middle",vertical:"middle"},_=2){const g={start:-Math.PI/6,end:Math.PI/6},f=t.builder("display","gauge",e,{x:n,y:o,angle:r,width:a,height:i,needleAngleBounds:s,style:{backing:l,needles:c}});Object.keys(u).map(e=>{u[e].map((n,o)=>{const r=o/(u[e].length-1);let l=1.2;switch(e){case"upper":l=1.2;break;case"middle":l=1;break;case"lower":l=.8}f.append(function(e,n,o,r=""){const l=null==s[0]?g:s[0],c=t.builder("basic","group",r,{x:a/2,y:i-i/10+i/2.5,angle:l.start+(l.end-l.start)*e});return c.append(t.builder("basic","text","text_"+r+"_"+o,{x:0,y:-n,height:_,width:_,text:String(o),colour:p,font:d,printingMode:h})),c}(r,i*l,n,e+"_"+o))})});let m,y=0;if(c.length>1){const e=25,t=.075/e;let n=0;m=setInterval((function(){f.needle(y,0),n>0&&(n-=t),f.needle(n,1),y>n&&(n=y)}),1e3/e)}return f.set=function(e){e>1?e=1:e<0&&(e=0),c.length>1?y=e:f.needle(e,0)},f.ondelete=function(){clearInterval(m)},f},t.partLibrary.display.meter_gauge=function(e,n){return t.collection.display.meter_gauge(e,n.x,n.y,n.angle,n.width,n.height,n.needleAngleBounds,n.style.backing,n.style.needleColours,n.markings,n.style.markingStyle_fill,n.style.markingStyle_font,n.style.markingStyle_printingMode,n.style.markingStyle_size)},this.meter_gauge_image=function(e="meter_gauge_image",n,o,r=0,a=50,i=30,s=[{start:-Math.PI/6,end:Math.PI/6}],l="",c=[{r:.98,g:.98,b:.98,a:1},{r:.65,g:.65,b:.65,a:1}],u){const p=t.builder("display","gauge_image",e,{x:n,y:o,angle:r,width:a,height:i,needleAngleBounds:s,style:{needles:c},backingURL:l,frontingURL:u});let d,h=0;if(c.length>1){const e=25,t=.075/e;let n=0;d=setInterval((function(){p.needle(h,0),n>0&&(n-=t),p.needle(n,1),h>n&&(n=h)}),1e3/e)}return p.set=function(e){e>1?e=1:e<0&&(e=0),c.length>1?h=e:p.needle(e,0)},p.ondelete=function(){clearInterval(d)},p},t.partLibrary.display.meter_gauge_image=function(e,n){return t.collection.display.meter_gauge_image(e,n.x,n.y,n.angle,n.width,n.height,n.needleAngleBounds,n.backingURL,n.style.needleColours,n.frontingURL)},this.gauge_image=function(e="gauge_image",n,o,r=0,a=50,i=30,s=[{start:-Math.PI/6,end:Math.PI/6}],l=[{x:.5,y:1.2}],c="",u=[{r:.98,g:.98,b:.98,a:1}],p){const d=[],h={start:-Math.PI/6,end:Math.PI/6},_={x:.5,y:1.2},g=t.builder("basic","group",e,{x:n,y:o,angle:r}),f=t.builder("basic","image","backing",{width:a,height:i,url:c}),m=t.builder("basic","group","needleWindow",{});g.append(f),g.append(m);const y=u.map((e,n)=>{d.push(0);const o=null==l[n]?_:l[n],r={width:a/100,height:i*o.y};return t.builder("basic","rectangle","needleBody_"+n,{x:a*o.x-r.width/2,y:1.1*i+(r.height-i),width:r.width,height:-r.height,colour:e})});y.forEach(e=>m.prepend(e));const v=t.builder("basic","rectangle","stencil",{width:a,height:i});if(m.stencil(v),m.clipActive(!0),null!=p){const e=t.builder("basic","image","fronting",{width:a,height:i,url:p});g.append(e)}g.needle=function(e,t=0){if(null==e)return d[t];e=(e=e>1?1:e)<0?0:e,d[t]=e;const n=null==s[t]?h:s[t];y[t].angle(n.start+(n.end-n.start)*e)};for(let e=0;e<u.length;e++)g.needle(0,e);return g},t.partLibrary.display.gauge_image=function(e,n){return t.collection.display.gauge_image(e,n.x,n.y,n.angle,n.width,n.height,n.needleAngleBounds,n.needleArticulationPoint,n.backingURL,n.style.needles,n.frontingURL)},this.audio_meter_level=function(t="audio_meter_level",n,o,r=0,a=20,i=60,s=[.125,.25,.375,.5,.625,.75,.875],l={r:.04,g:.04,b:.04,a:1},c=[{r:.98,g:.98,b:.98,a:1},{r:.3,g:.3,b:.3,a:1}],u={r:.86,g:.86,b:.86,a:1},p="Roboto-Regular",d={widthCalculation:"absolute",horizontal:"left",vertical:"top"},h=2){const _=_canvas_.interface.part.builder("display","meter_level",t,{x:n,y:o,angle:r,width:a,height:i,style:{backing:l,levels:c,markingStyle_fill:u,markingStyle_font:p,markingStyle_printingMode:d,markingStyle_size:h}}),g=e.circuit.audio2percentage();return g.newValue=function(e){_.set(e)},_.audioIn=function(){return g.audioIn()},_.start=function(){g.start()},_.stop=function(){g.stop()},_._ondelete=_.ondelete,_.ondelete=function(){_.stop(),_._ondelete()},_},t.partLibrary.display.audio_meter_level=function(e,n){return t.collection.display.audio_meter_level(e,n.x,n.y,n.angle,n.width,n.height,n.markings,n.style.backing,n.style.levels,n.style.markingStyle_colour,n.style.markingStyle_font,n.style.markingStyle_printingMode,n.style.markingStyle_size)},this.meter_level=function(e="meter_level",n,o,r=0,a=20,i=60,s=[.125,.25,.375,.5,.625,.75,.875],l={r:.04,g:.04,b:.04,a:1},c=[{r:.98,g:.98,b:.98,a:1},{r:.3,g:.3,b:.3,a:1}],u={r:.86,g:.86,b:.86,a:1},p="Roboto-Regular",d={widthCalculation:"absolute",horizontal:"left",vertical:"top"},h=2){c=c.reverse();const _=_canvas_.interface.part.builder("display","level",e,{x:n,y:o,angle:r,width:a,height:i,style:{backing:l,levels:c}});s.map(e=>function(e){const n=[{x:a,y:e-.1},{x:a-a/4,y:e-.1},{x:a-a/4,y:e+.1},{x:a,y:e+.1}];return t.builder("basic","polygon","mark_"+e,{pointsAsXYArray:n,colour:u})}(i*(1-e))).concat(s.map(e=>function(e,n){return t.builder("basic","text","text_"+n,{x:.5,y:e-.5,height:h,width:h,text:String(n),colour:u,font:p,printingMode:d})}(i*(1-e),e))).forEach(e=>_.append(e));let g=0,f=0;const m=setInterval((function(){_.layer(f,1),g>0&&(g-=.005),_.layer(g,0),f>g&&(g=f)}),1e3/15);return _.set=function(e){e>1?e=1:e<0&&(e=0),f=e},_.ondelete=function(){clearInterval(m)},_},t.partLibrary.display.meter_level=function(e,n){return t.collection.display.meter_level(e,n.x,n.y,n.angle,n.width,n.height,n.markings,n.style.backing,n.style.levels,n.style.markingStyle_colour,n.style.markingStyle_font,n.style.markingStyle_printingMode,n.style.markingStyle_size)},this.level=function(e="level",t,n,o=0,r=20,a=60,i={r:.04,g:.04,b:.04,a:1},s=[{r:.98,g:.98,b:.98,a:1},{r:.78,g:.78,b:.78,a:1}]){const l=[],c=_canvas_.interface.part.builder("basic","group",e,{x:t,y:n,angle:o}),u=_canvas_.interface.part.builder("basic","rectangle","backing",{width:r,height:a,colour:i});c.append(u);const p=s.map((e,t)=>_canvas_.interface.part.builder("basic","rectangle","movingRect_"+t,{y:a,width:r,height:0,colour:e}));return p.forEach(e=>c.append(e)),c.layer=function(e,t){return null==t?l:null==e?l[t]:(e=(e=e>1?1:e)<0?0:e,l[t]=e,p[t].height(a*e),void p[t].y(a-a*e))},c},t.partLibrary.display.level=function(e,n){return t.collection.display.level(e,n.x,n.y,n.angle,n.width,n.height,n.style.backing,n.style.levels)},this.rastorDisplay=function(e="rastorDisplay",n,o,r=0,a=60,i=60,s=8,l=8,c=.1,u=.1,p={r:.2,g:.2,b:.2,a:1},d={r:0,g:0,b:0,a:1}){const h=t.builder("basic","group",e,{x:n,y:o,angle:r}),_=t.builder("basic","rectangle","backing",{width:a,height:i,colour:p});h.append(_);const g=t.builder("basic","group","pixels");h.append(g);const f=[],m=[],y=a/s,v=i/l;for(let e=0;e<s;e++){const n=[],o=[];for(let r=0;r<l;r++){let a=t.builder("basic","rectangle",e+"_"+r,{x:e*y+c/2,y:r*v+u/2,width:y-c,height:v-u,colour:d});n.push(a),o.push([0,0,0]),g.append(a)}f.push(n),m.push(o)}function b(){for(let e=0;e<s;e++)for(let t=0;t<l;t++)f[e][t].colour({r:m[e][t][0],g:m[e][t][1],b:m[e][t][2],a:1})}return h.get=function(e,t){return m[e][t]},h.set=function(e,t,n){m[e][t]=n,b()},h.import=function(e){for(let t=0;t<s;t++)for(let n=0;n<l;n++)this.set(t,n,e[t][n]);b()},h.export=function(){return m},h.setAll=function(e){for(let t=0;t<s;t++)for(let n=0;n<l;n++)this.set(t,n,e)},h.test=function(){this.setAll([1,1,1]),this.set(1,1,[1,.5,.5]),this.set(2,2,[.5,1,.5]),this.set(3,3,[.5,.5,1]),this.set(4,4,[1,.5,1]),b()},h},t.partLibrary.display.rastorDisplay=function(e,n){return t.collection.display.rastorDisplay(e,n.x,n.y,n.angle,n.width,n.height,n.xCount,n.yCount,n.xGappage,n.yGappage)},this.readout_sevenSegmentDisplay=function(e="readout_sevenSegmentDisplay",n=!1,o=1,r=0,a=0,i=100,s=30,l=5,c=0,u=!0,p={r:0,g:0,b:0,a:1},d={r:.78,g:.78,b:.78,a:1},h={r:.1,g:.1,b:.1,a:1}){let _="",g=null;const f=t.builder("basic","group",e,{x:r,y:a});if(n){const e=i/8/l,n=i/8/l,r={segments:{points:{top:{left:[{x:1*n+e,y:1*n+e},{x:.5*n+e,y:.5*n+e},{x:1*n+e,y:0*n+e},{x:0*n+e,y:1*n+e}],right:[{x:i/l-1*n-e,y:0*n+e},{x:i/l-.5*n-e,y:.5*n+e},{x:i/l-1*n-e,y:1*n+e},{x:i/l-0*n-e,y:1*n+e}]},middle:{left:[{x:1*n+e,y:.5*s-1*n+.5*e},{x:.5*n+e,y:.5*s-.5*n+.5*e},{x:1*n+e,y:.5*s-0*n+.5*e},{x:0*n+e,y:.5*s-1*n+.5*e},{x:0*n+e,y:.5*s-0*n+.5*e}],right:[{x:i/l-1*n-e,y:.5*s-0*n+.5*e},{x:i/l-.5*n-e,y:.5*s-.5*n+.5*e},{x:i/l-1*n-e,y:.5*s-1*n+.5*e},{x:i/l-0*n-e,y:.5*s-1*n+.5*e},{x:i/l-0*n-e,y:.5*s-0*n+.5*e}]},bottom:{left:[{x:1*n+e,y:s-1*n-e},{x:.5*n+e,y:s-.5*n-e},{x:1*n+e,y:s-0*n-e},{x:0*n+e,y:s-1*n-e}],right:[{x:i/l-1*n-e,y:s-0*n-e},{x:i/l-.5*n-e,y:s-.5*n-e},{x:i/l-1*n-e,y:s-1*n-e},{x:i/l-0*n-e,y:s-1*n-e}]}}}},a=[[r.segments.points.top.left[0],r.segments.points.top.right[2],r.segments.points.top.right[1],r.segments.points.top.right[0],r.segments.points.top.left[2],r.segments.points.top.left[1]],[r.segments.points.top.left[1],r.segments.points.top.left[3],r.segments.points.middle.left[3],r.segments.points.middle.left[1],r.segments.points.middle.left[0],r.segments.points.top.left[0]],[r.segments.points.top.right[1],r.segments.points.top.right[3],r.segments.points.middle.right[3],r.segments.points.middle.right[1],r.segments.points.middle.right[2],r.segments.points.top.right[2]],[r.segments.points.middle.left[0],r.segments.points.middle.right[2],r.segments.points.middle.right[1],r.segments.points.middle.right[0],r.segments.points.middle.left[2],r.segments.points.middle.left[1]],[r.segments.points.middle.left[1],r.segments.points.middle.left[4],r.segments.points.bottom.left[3],r.segments.points.bottom.left[1],r.segments.points.bottom.left[0],r.segments.points.middle.left[2]],[r.segments.points.middle.right[1],r.segments.points.middle.right[4],r.segments.points.bottom.right[3],r.segments.points.bottom.right[1],r.segments.points.bottom.right[2],r.segments.points.middle.right[0]],[r.segments.points.bottom.left[0],r.segments.points.bottom.right[2],r.segments.points.bottom.right[1],r.segments.points.bottom.right[0],r.segments.points.bottom.left[2],r.segments.points.bottom.left[1]]];function m(e){switch(e){case 0:case"0":return[1,1,1,0,1,1,1];case 1:case"1":return[0,0,1,0,0,1,0];case 2:case"2":return[1,0,1,1,1,0,1];case 3:case"3":return[1,0,1,1,0,1,1];case 4:case"4":return[0,1,1,1,0,1,0];case 5:case"5":return[1,1,0,1,0,1,1];case 6:case"6":return[1,1,0,1,1,1,1];case 7:case"7":return[1,0,1,0,0,1,0];case 8:case"8":return[1,1,1,1,1,1,1];case 9:case"9":return[1,1,1,1,0,1,1];default:return[0,0,0,0,0,0,0]}}const c=new Array(l).fill().map(()=>[0,0,0,0,0,0,0]),x=new Array(l-1).fill().map(()=>!1),w=.05*s,k=t.builder("basic","canvas","backing",{width:i,height:s,colour:p,resolution:o});function y(e=!0){k._.fillStyle=_canvas_.library.math.convertColour.obj2rgba(p),k._.fillRect(0,0,k.$(i),k.$(s)),e&&k.requestUpdate()}function v(){c.forEach((e,t)=>{const n=t*(i/l);a.forEach((t,o)=>{k._.beginPath(),k._.moveTo(k.$(t[0].x+n),k.$(t[0].y));for(let e=1;e<t.length;e++)k._.lineTo(k.$(t[e].x+n),k.$(t[e].y));k._.closePath(),k._.fillStyle=0==e[o]?_canvas_.library.math.convertColour.obj2rgba(h):_canvas_.library.math.convertColour.obj2rgba(d),k._.fill()})}),u&&x.forEach((e,t)=>{k._.beginPath(),k._.arc(k.$((t+1)*(i/l)),k.$(s-2*w),k.$(w),0,2*Math.PI),k._.fillStyle=0==e?_canvas_.library.math.convertColour.obj2rgba(h):_canvas_.library.math.convertColour.obj2rgba(d),k._.fill()}),k.requestUpdate()}function b(e,t=0,n=!1){switch(u&&x.forEach((e,t)=>x[t]=!1),n||clearInterval(g),e){case"smart":u?_.replace(".","").length>c.length?b("r2lSweep"):b("regular"):_.length>c.length?b("r2lSweep"):b("regular");break;case"r2lSweep":let e=-c.length;g=setInterval((function(){b("regular",-e,!0),e++,"."==_[e]&&e++,e>c.length+_.length-1&&(e=-c.length)}),150);break;case"regular":default:let n=0;for(let e=t;e<c.length;e++)null!=c[e]?(u&&"."==_[n]?(null!=x[e-1]&&(x[e-1]=!0),e--):c[e]=m(_[n]),n++):n++}y(!1),v()}f.append(k),f.text=function(e){if(null==e)return _;_=String(e)},f.print=function(e){b(e)},f.oncreate=function(){y(),v()},f.ondelete=function(){clearInterval(g)}}else{const e=new Array(l).fill().map((e,r)=>t.builder("display","sevenSegmentDisplay",""+r,{x:i/l*r,width:i/l,height:s,canvasBased:n,resolution:o,style:{background:p,glow:d,dim:h}}));e.forEach(e=>f.append(e));let r=[];function b(t,n=0,o=!1){switch(r.forEach(e=>e.off()),o||clearInterval(g),t){case"smart":u?_.replace(".","").length>e.length?b("r2lSweep"):b("regular"):_.length>e.length?b("r2lSweep"):b("regular");break;case"r2lSweep":let t=-e.length;g=setInterval((function(){b("regular",-t,!0),t++,t>e.length+_.length-1&&(t=-e.length)}),150);break;case"regular":default:let o=0;for(let t=n;t<e.length;t++)null!=e[t]?(u&&"."==_[o]?(null!=r[t-1]&&r[t-1].on(),t--):e[t].enterCharacter(_[o]),o++):o++}}u&&(r=new Array(l-1).fill().map((e,n)=>t.builder("display","glowbox_circle","decimalPoint_"+n,{x:i/l*(n+1),y:.9*s,radius:i/l/8/2,style:{glow:d,dim:h}})),r.forEach(e=>f.append(e))),f.text=function(e){if(null==e)return _;_=String(e)},f.print=function(e){b(e)}}return f},t.partLibrary.display.readout_sevenSegmentDisplay=function(e,n){return t.collection.display.readout_sevenSegmentDisplay(e,n.canvasBased,n.resolution,n.x,n.y,n.width,n.height,n.count,n.angle,n.decimalPlaces,n.style.background,n.style.glow,n.style.dim)},this.sevenSegmentDisplay=function(e="sevenSegmentDisplay",n=!1,o=2,r=0,a=0,i=20,s=30,l=0,c={r:0,g:0,b:0,a:1},u={r:.78,g:.78,b:.78,a:1},p={r:.1,g:.1,b:.1,a:1}){const d=i/8,h=i/8,_={segments:{points:{top:{left:[{x:1*h+d,y:1*h+d},{x:.5*h+d,y:.5*h+d},{x:1*h+d,y:0*h+d},{x:0*h+d,y:1*h+d}],right:[{x:i-1*h-d,y:0*h+d},{x:i-.5*h-d,y:.5*h+d},{x:i-1*h-d,y:1*h+d},{x:i-0*h-d,y:1*h+d}]},middle:{left:[{x:1*h+d,y:.5*s-1*h+.5*d},{x:.5*h+d,y:.5*s-.5*h+.5*d},{x:1*h+d,y:.5*s-0*h+.5*d},{x:0*h+d,y:.5*s-1*h+.5*d},{x:0*h+d,y:.5*s-0*h+.5*d}],right:[{x:i-1*h-d,y:.5*s-0*h+.5*d},{x:i-.5*h-d,y:.5*s-.5*h+.5*d},{x:i-1*h-d,y:.5*s-1*h+.5*d},{x:i-0*h-d,y:.5*s-1*h+.5*d},{x:i-0*h-d,y:.5*s-0*h+.5*d}]},bottom:{left:[{x:1*h+d,y:s-1*h-d},{x:.5*h+d,y:s-.5*h-d},{x:1*h+d,y:s-0*h-d},{x:0*h+d,y:s-1*h-d}],right:[{x:i-1*h-d,y:s-0*h-d},{x:i-.5*h-d,y:s-.5*h-d},{x:i-1*h-d,y:s-1*h-d},{x:i-0*h-d,y:s-1*h-d}]}}}},g=[[_.segments.points.top.left[0],_.segments.points.top.right[2],_.segments.points.top.right[1],_.segments.points.top.right[0],_.segments.points.top.left[2],_.segments.points.top.left[1]],[_.segments.points.top.left[1],_.segments.points.top.left[3],_.segments.points.middle.left[3],_.segments.points.middle.left[1],_.segments.points.middle.left[0],_.segments.points.top.left[0]],[_.segments.points.top.right[1],_.segments.points.top.right[3],_.segments.points.middle.right[3],_.segments.points.middle.right[1],_.segments.points.middle.right[2],_.segments.points.top.right[2]],[_.segments.points.middle.left[0],_.segments.points.middle.right[2],_.segments.points.middle.right[1],_.segments.points.middle.right[0],_.segments.points.middle.left[2],_.segments.points.middle.left[1]],[_.segments.points.middle.left[1],_.segments.points.middle.left[4],_.segments.points.bottom.left[3],_.segments.points.bottom.left[1],_.segments.points.bottom.left[0],_.segments.points.middle.left[2]],[_.segments.points.middle.right[1],_.segments.points.middle.right[4],_.segments.points.bottom.right[3],_.segments.points.bottom.right[1],_.segments.points.bottom.right[2],_.segments.points.middle.right[0]],[_.segments.points.bottom.left[0],_.segments.points.bottom.right[2],_.segments.points.bottom.right[1],_.segments.points.bottom.right[0],_.segments.points.bottom.left[2],_.segments.points.bottom.left[1]]];function f(e){switch(e){case 0:case"0":return[1,1,1,0,1,1,1];case 1:case"1":return[0,0,1,0,0,1,0];case 2:case"2":return[1,0,1,1,1,0,1];case 3:case"3":return[1,0,1,1,0,1,1];case 4:case"4":return[0,1,1,1,0,1,0];case 5:case"5":return[1,1,0,1,0,1,1];case 6:case"6":return[1,1,0,1,1,1,1];case 7:case"7":return[1,0,1,0,0,1,0];case 8:case"8":return[1,1,1,1,1,1,1];case 9:case"9":return[1,1,1,1,0,1,1];case"a":case"A":return[1,1,1,1,1,1,0];case"b":case"B":return[0,1,0,1,1,1,1];case"c":case"C":return[1,1,0,0,1,0,1];case"d":case"D":return[0,0,1,1,1,1,1];case"e":case"E":return[1,1,0,1,1,0,1];case"f":case"F":return[1,1,0,1,1,0,0];default:return[0,0,0,0,0,0,0]}}if(n){let n=[0,0,0,0,0,0,0];const l=t.builder("basic","group",e,{x:r,y:a}),d=t.builder("basic","canvas","backing",{width:i,height:s,colour:c,resolution:o});function m(){d._.fillStyle=_canvas_.library.math.convertColour.obj2rgba(c),d._.fillRect(0,0,d.$(i),d.$(s)),d.requestUpdate()}function y(){for(let e=0;e<g.length;e++){d._.beginPath(),d._.moveTo(d.$(g[e][0].x),d.$(g[e][0].y));for(let t=1;t<g[e].length;t++)d._.lineTo(d.$(g[e][t].x),d.$(g[e][t].y));d._.closePath(),d._.fillStyle=0==n[e]?_canvas_.library.math.convertColour.obj2rgba(p):_canvas_.library.math.convertColour.obj2rgba(u),d._.fill()}d.requestUpdate()}return l.append(d),l.set=function(e,t){m(),n[e]=t,y()},l.get=function(e){if(null!=e)return n[e].state;console.error("sevenSegmentDisplay_canvasBased::get: must provide segment value")},l.clear=function(){m();for(let e=0;e<n.length;e++)this.set(e,!1);y()},l.enterCharacter=function(e){n=f(e),m(),y()},m(),y(),l}{const n=t.builder("basic","group",e,{x:r,y:a}),o=t.builder("basic","rectangle","backing",{width:i,height:s,angle:l,colour:c});n.append(o);const d=[];for(let e=0;e<g.length;e++)d[e]={segment:t.builder("basic","polygon","segment_"+e,{pointsAsXYArray:g[e],colour:p}),state:!1},n.append(d[e].segment);return n.set=function(e,t){d[e].state=t,t?d[e].segment.colour(u):d[e].segment.colour(p)},n.get=function(e){return d[e].state},n.clear=function(){for(let e=0;e<d.length;e++)this.set(e,!1)},n.enterCharacter=function(e){stamp=f(e);for(let e=0;e<stamp.length;e++)this.set(e,1==stamp[e])},n}},t.partLibrary.display.sevenSegmentDisplay=function(e,n){return t.collection.display.sevenSegmentDisplay(e,n.canvasBased,n.resolution,n.x,n.y,n.width,n.height,n.angle,n.style.background,n.style.glow,n.style.dim)},this.sixteenSegmentDisplay=function(e="sixteenSegmentDisplay",n=!1,o=2,r=0,a=0,i=20,s=30,l=0,c={r:0,g:0,b:0,a:1},u={r:.78,g:.78,b:.78,a:1},p={r:.1,g:.1,b:.1,a:1}){const d=i/8,h=i/8,_={segments:{points:{top:{left:[{x:.5*h+d,y:.5*h+d},{x:1*h+d,y:0*h+d},{x:0*h+d,y:1*h+d},{x:1*h+d,y:1*h+d},{x:1.75*h+d,y:1*h+d},{x:1*h+d,y:1.75*h+d}],centre:[{x:i/2,y:.5*h+d},{x:i/2-.5*h,y:1*h+d},{x:i/2+.5*h,y:1*h+d},{x:i/2-.5*h,y:0*h+d},{x:i/2+.5*h,y:0*h+d}],right:[{x:i-.5*h-d,y:.5*h+d},{x:i-1*h-d,y:0*h+d},{x:i-0*h-d,y:1*h+d},{x:i-1*h-d,y:1*h+d},{x:i-1*h-d,y:1.75*h+d},{x:i-1.75*h-d,y:1*h+d}]},middle:{left:[{x:0*h+d,y:.5*s-.5*h},{x:1*h+d,y:.5*s-.5*h},{x:.5*h+d,y:.5*s-0*h},{x:0*h+d,y:.5*s+.5*h},{x:1*h+d,y:.5*s+.5*h}],centre:[{x:i/2,y:s/2},{x:i/2-.5*h,y:.5*h+s/2},{x:i/2-.25*h,y:1.25*h+s/2},{x:i/2-1*h,y:.5*h+s/2},{x:i/2+.5*h,y:.5*h+s/2},{x:i/2+.5*h,y:1.75*h+s/2},{x:i/2+1*h,y:.5*h+s/2},{x:i/2-.5*h,y:.5*-h+s/2},{x:i/2-.25*h,y:1.25*-h+s/2},{x:i/2-1*h,y:.25*-h+s/2},{x:i/2+.5*h,y:.5*-h+s/2},{x:i/2+.5*h,y:1.75*-h+s/2},{x:i/2+1*h,y:.25*-h+s/2}],right:[{x:i-1*h-d,y:.5*s-.5*h},{x:i-0*h-d,y:.5*s-.5*h},{x:i-.5*h-d,y:.5*s-0*h},{x:i-1*h-d,y:.5*s+.5*h},{x:i-0*h-d,y:.5*s+.5*h}]},bottom:{left:[{x:.5*h+d,y:s-.5*h-d},{x:0*h+d,y:s-1*h-d},{x:1*h+d,y:s-0*h-d},{x:1*h+d,y:s-1*h-d},{x:1*h+d,y:s-1.75*h-d},{x:1.75*h+d,y:s-1*h-d}],centre:[{x:i/2-.5*h,y:s-1*h-d},{x:i/2+.5*h,y:s-1*h-d},{x:i/2,y:s-.5*h-d},{x:i/2-.5*h,y:s-0*h-d},{x:i/2+.5*h,y:s-0*h-d}],right:[{x:i-.5*h-d,y:s-.5*h-d},{x:i-0*h-d,y:s-1*h-d},{x:i-1*h-d,y:s-0*h-d},{x:i-1*h-d,y:s-1*h-d},{x:i-1*h-d,y:s-1.75*h-d},{x:i-1.75*h-d,y:s-1*h-d}]}}}},g=[[_.segments.points.top.left[1],_.segments.points.top.left[0],_.segments.points.top.left[3],_.segments.points.top.centre[1],_.segments.points.top.centre[0],_.segments.points.top.centre[3]],[_.segments.points.top.centre[4],_.segments.points.top.centre[0],_.segments.points.top.centre[2],_.segments.points.top.right[3],_.segments.points.top.right[0],_.segments.points.top.right[1]],[_.segments.points.top.left[0],_.segments.points.top.left[2],_.segments.points.middle.left[0],_.segments.points.middle.left[2],_.segments.points.middle.left[1],_.segments.points.top.left[3]],[_.segments.points.top.left[4],_.segments.points.top.left[3],_.segments.points.top.left[5],_.segments.points.middle.centre[9],_.segments.points.middle.centre[7],_.segments.points.middle.centre[8]],[_.segments.points.top.centre[0],_.segments.points.top.centre[1],_.segments.points.middle.centre[7],_.segments.points.middle.centre[0],_.segments.points.middle.centre[10],_.segments.points.top.centre[2]],[_.segments.points.top.right[4],_.segments.points.top.right[3],_.segments.points.top.right[5],_.segments.points.middle.centre[11],_.segments.points.middle.centre[10],_.segments.points.middle.centre[12]],[_.segments.points.top.right[0],_.segments.points.top.right[2],_.segments.points.middle.right[1],_.segments.points.middle.right[2],_.segments.points.middle.right[0],_.segments.points.top.right[3]],[_.segments.points.middle.left[4],_.segments.points.middle.left[2],_.segments.points.middle.left[1],_.segments.points.middle.centre[7],_.segments.points.middle.centre[0],_.segments.points.middle.centre[1]],[_.segments.points.middle.right[3],_.segments.points.middle.right[2],_.segments.points.middle.right[0],_.segments.points.middle.centre[10],_.segments.points.middle.centre[0],_.segments.points.middle.centre[4]],[_.segments.points.bottom.left[0],_.segments.points.bottom.left[1],_.segments.points.middle.left[3],_.segments.points.middle.left[2],_.segments.points.middle.left[4],_.segments.points.bottom.left[3]],[_.segments.points.bottom.left[4],_.segments.points.bottom.left[3],_.segments.points.bottom.left[5],_.segments.points.middle.centre[2],_.segments.points.middle.centre[1],_.segments.points.middle.centre[3]],[_.segments.points.bottom.centre[0],_.segments.points.bottom.centre[2],_.segments.points.bottom.centre[1],_.segments.points.middle.centre[4],_.segments.points.middle.centre[0],_.segments.points.middle.centre[1]],[_.segments.points.bottom.right[4],_.segments.points.bottom.right[3],_.segments.points.bottom.right[5],_.segments.points.middle.centre[5],_.segments.points.middle.centre[4],_.segments.points.middle.centre[6]],[_.segments.points.bottom.right[3],_.segments.points.middle.right[3],_.segments.points.middle.right[2],_.segments.points.middle.right[4],_.segments.points.bottom.right[1],_.segments.points.bottom.right[0]],[_.segments.points.bottom.left[2],_.segments.points.bottom.left[0],_.segments.points.bottom.left[3],_.segments.points.bottom.centre[0],_.segments.points.bottom.centre[2],_.segments.points.bottom.centre[3]],[_.segments.points.bottom.right[2],_.segments.points.bottom.right[0],_.segments.points.bottom.right[3],_.segments.points.bottom.centre[1],_.segments.points.bottom.centre[2],_.segments.points.bottom.centre[4]]];function f(e){switch(e){case"!":return[1,1,0,1,1,1,0,0,0,0,0,0,0,0,1,1];case"?":return[1,1,0,0,0,0,1,0,1,0,0,0,0,0,1,1];case".":return[0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0];case",":return[0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0];case"'":return[0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0];case":":return[0,0,0,1,0,1,0,0,0,0,1,0,1,0,0,0];case'"':return[0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0];case"_":return[0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1];case"-":return[0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0];case"\\":return[0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0];case"/":return[0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0];case"*":return[0,0,0,1,1,1,0,1,1,0,1,1,1,0,0,0];case"#":return[1,1,1,0,1,0,1,1,1,1,0,1,0,1,1,1];case"<":return[0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0];case">":return[0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0];case"(":return[0,1,0,0,1,0,0,0,0,0,0,1,0,0,0,1];case")":return[1,0,0,0,1,0,0,0,0,0,0,1,0,0,1,0];case"[":return[1,1,1,0,0,0,0,0,0,1,0,0,0,0,1,1];case"]":return[1,1,0,0,0,0,1,0,0,0,0,0,0,1,1,1];case"{":return[1,1,0,1,0,0,0,1,0,0,1,0,0,0,1,1];case"}":return[1,1,0,0,0,1,0,0,1,0,0,0,1,0,1,1];case"0":case 0:return[1,1,1,0,0,1,1,0,0,1,1,0,0,1,1,1];case"1":case 1:return[1,0,0,0,1,0,0,0,0,0,0,1,0,0,1,1];case"2":case 2:return[1,1,0,0,0,0,1,0,1,0,1,0,0,0,1,1];case"3":case 3:return[1,1,0,0,0,0,1,1,1,0,0,0,0,1,1,1];case"4":case 4:return[0,0,1,0,0,0,1,1,1,0,0,0,0,1,0,0];case"5":case 5:return[1,1,1,0,0,0,0,1,1,0,0,0,0,1,1,1];case"6":case 6:return[1,1,1,0,0,0,0,1,1,1,0,0,0,1,1,1];case"7":case 7:return[1,1,0,0,0,1,0,0,0,0,1,0,0,0,0,0];case"8":case 8:return[1,1,1,0,0,0,1,1,1,1,0,0,0,1,1,1];case"9":case 9:return[1,1,1,0,0,0,1,1,1,0,0,0,0,1,1,1];case"a":case"A":return[1,1,1,0,0,0,1,1,1,1,0,0,0,1,0,0];case"b":case"B":return[1,1,0,0,1,0,1,0,1,0,0,1,0,1,1,1];case"c":case"C":return[1,1,1,0,0,0,0,0,0,1,0,0,0,0,1,1];case"d":case"D":return[1,1,0,0,1,0,1,0,0,0,0,1,0,1,1,1];case"e":case"E":return[1,1,1,0,0,0,0,1,1,1,0,0,0,0,1,1];case"f":case"F":return[1,1,1,0,0,0,0,1,1,1,0,0,0,0,0,0];case"g":case"G":return[1,1,1,0,0,0,0,0,1,1,0,0,0,1,1,1];case"h":case"H":return[0,0,1,0,0,0,1,1,1,1,0,0,0,1,0,0];case"i":case"I":return[1,1,0,0,1,0,0,0,0,0,0,1,0,0,1,1];case"j":case"J":return[1,1,0,0,1,0,0,0,0,0,0,1,0,0,1,0];case"k":case"K":return[0,0,1,0,0,1,0,1,0,1,0,0,1,0,0,0];case"l":case"L":return[0,0,1,0,0,0,0,0,0,1,0,0,0,0,1,1];case"m":case"M":return[0,0,1,1,0,1,1,0,0,1,0,0,0,1,0,0];case"n":case"N":return[0,0,1,1,0,0,1,0,0,1,0,0,1,1,0,0];case"o":case"O":return[1,1,1,0,0,0,1,0,0,1,0,0,0,1,1,1];case"p":case"P":return[1,1,1,0,0,0,1,1,1,1,0,0,0,0,0,0];case"q":case"Q":return[1,1,1,0,0,0,1,0,0,1,0,0,1,1,1,1];case"r":case"R":return[1,1,1,0,0,0,1,1,1,1,0,0,1,0,0,0];case"s":case"S":return[1,1,1,0,0,0,0,1,1,0,0,0,0,1,1,1];case"t":case"T":return[1,1,0,0,1,0,0,0,0,0,0,1,0,0,0,0];case"u":case"U":return[0,0,1,0,0,0,1,0,0,1,0,0,0,1,1,1];case"v":case"V":return[0,0,1,0,0,1,0,0,0,1,1,0,0,0,0,0];case"w":case"W":return[0,0,1,0,0,0,1,0,0,1,1,0,1,1,0,0];case"x":case"X":return[0,0,0,1,0,1,0,0,0,0,1,0,1,0,0,0];case"y":case"Y":return[0,0,0,1,0,1,0,0,0,0,0,1,0,0,0,0];case"z":case"Z":return[1,1,0,0,0,1,0,0,0,0,1,0,0,0,1,1];case"all":return[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1];default:return[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]}}if(n){let n=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0];const l=t.builder("basic","group",e,{x:r,y:a}),d=t.builder("basic","canvas","backing",{width:i,height:s,colour:c,resolution:o});function m(){d._.fillStyle=_canvas_.library.math.convertColour.obj2rgba(c),d._.fillRect(0,0,d.$(i),d.$(s)),d.requestUpdate()}function y(){for(let e=0;e<g.length;e++){d._.beginPath(),d._.moveTo(d.$(g[e][0].x),d.$(g[e][0].y));for(let t=1;t<g[e].length;t++)d._.lineTo(d.$(g[e][t].x),d.$(g[e][t].y));d._.closePath(),d._.fillStyle=0==n[e]?_canvas_.library.math.convertColour.obj2rgba(p):_canvas_.library.math.convertColour.obj2rgba(u),d._.fill()}d.requestUpdate()}return l.append(d),l.set=function(e,t){m(),n[e]=t,y()},l.get=function(e){if(null!=e)return n[e].state;console.error("sevenSegmentDisplay_canvasBased::get: must provide segment value")},l.clear=function(){m();for(let e=0;e<n.length;e++)this.set(e,!1);y()},l.enterCharacter=function(e){n=f(e),m(),y()},m(),y(),l}{const n=t.builder("basic","group",e,{x:r,y:a}),o=t.builder("basic","rectangle","backing",{width:i,height:s,angle:l,colour:c});n.append(o);const d=[];for(let e=0;e<g.length;e++)d[e]={segment:t.builder("basic","polygon","segment_"+e,{pointsAsXYArray:g[e],colour:p}),state:!1},n.append(d[e].segment);return n.set=function(e,t){d[e].state=t,t?d[e].segment.colour(u):d[e].segment.colour(p)},n.get=function(e){return d[e].state},n.clear=function(){for(let e=0;e<d.length;e++)this.set(e,!1)},n.enterCharacter=function(e){stamp=f(e);for(let e=0;e<stamp.length;e++)this.set(e,1==stamp[e])},n}},t.partLibrary.display.sixteenSegmentDisplay=function(e,n){return t.collection.display.sixteenSegmentDisplay(e,n.canvasBased,n.resolution,n.x,n.y,n.width,n.height,n.angle,n.style.background,n.style.glow,n.style.dim)},this.readout_sixteenSegmentDisplay=function(e="readout_sixteenSegmentDisplay",n=!1,o=1,r=0,a=0,i=100,s=30,l=5,c=0,u=!1,p={r:0,g:0,b:0,a:1},d={r:.78,g:.78,b:.78,a:1},h={r:.1,g:.1,b:.1,a:1}){let _="",g=null;const f=t.builder("basic","group",e,{x:r,y:a,angle:c});if(n){const e=i/l/8,n=i/l/8,r={segments:{points:{top:{left:[{x:.5*n+e,y:.5*n+e},{x:1*n+e,y:0*n+e},{x:0*n+e,y:1*n+e},{x:1*n+e,y:1*n+e},{x:1.75*n+e,y:1*n+e},{x:1*n+e,y:1.75*n+e}],centre:[{x:i/l/2,y:.5*n+e},{x:i/l/2-.5*n,y:1*n+e},{x:i/l/2+.5*n,y:1*n+e},{x:i/l/2-.5*n,y:0*n+e},{x:i/l/2+.5*n,y:0*n+e}],right:[{x:i/l-.5*n-e,y:.5*n+e},{x:i/l-1*n-e,y:0*n+e},{x:i/l-0*n-e,y:1*n+e},{x:i/l-1*n-e,y:1*n+e},{x:i/l-1*n-e,y:1.75*n+e},{x:i/l-1.75*n-e,y:1*n+e}]},middle:{left:[{x:0*n+e,y:.5*s-.5*n},{x:1*n+e,y:.5*s-.5*n},{x:.5*n+e,y:.5*s-0*n},{x:0*n+e,y:.5*s+.5*n},{x:1*n+e,y:.5*s+.5*n}],centre:[{x:i/l/2,y:s/2},{x:i/l/2-.5*n,y:.5*n+s/2},{x:i/l/2-.25*n,y:1.25*n+s/2},{x:i/l/2-1*n,y:.5*n+s/2},{x:i/l/2+.5*n,y:.5*n+s/2},{x:i/l/2+.5*n,y:1.75*n+s/2},{x:i/l/2+1*n,y:.5*n+s/2},{x:i/l/2-.5*n,y:.5*-n+s/2},{x:i/l/2-.25*n,y:1.25*-n+s/2},{x:i/l/2-1*n,y:.25*-n+s/2},{x:i/l/2+.5*n,y:.5*-n+s/2},{x:i/l/2+.5*n,y:1.75*-n+s/2},{x:i/l/2+1*n,y:.25*-n+s/2}],right:[{x:i/l-1*n-e,y:.5*s-.5*n},{x:i/l-0*n-e,y:.5*s-.5*n},{x:i/l-.5*n-e,y:.5*s-0*n},{x:i/l-1*n-e,y:.5*s+.5*n},{x:i/l-0*n-e,y:.5*s+.5*n}]},bottom:{left:[{x:.5*n+e,y:s-.5*n-e},{x:0*n+e,y:s-1*n-e},{x:1*n+e,y:s-0*n-e},{x:1*n+e,y:s-1*n-e},{x:1*n+e,y:s-1.75*n-e},{x:1.75*n+e,y:s-1*n-e}],centre:[{x:i/l/2-.5*n,y:s-1*n-e},{x:i/l/2+.5*n,y:s-1*n-e},{x:i/l/2,y:s-.5*n-e},{x:i/l/2-.5*n,y:s-0*n-e},{x:i/l/2+.5*n,y:s-0*n-e}],right:[{x:i/l-.5*n-e,y:s-.5*n-e},{x:i/l-0*n-e,y:s-1*n-e},{x:i/l-1*n-e,y:s-0*n-e},{x:i/l-1*n-e,y:s-1*n-e},{x:i/l-1*n-e,y:s-1.75*n-e},{x:i/l-1.75*n-e,y:s-1*n-e}]}}}},a=[[r.segments.points.top.left[1],r.segments.points.top.left[0],r.segments.points.top.left[3],r.segments.points.top.centre[1],r.segments.points.top.centre[0],r.segments.points.top.centre[3]],[r.segments.points.top.centre[4],r.segments.points.top.centre[0],r.segments.points.top.centre[2],r.segments.points.top.right[3],r.segments.points.top.right[0],r.segments.points.top.right[1]],[r.segments.points.top.left[0],r.segments.points.top.left[2],r.segments.points.middle.left[0],r.segments.points.middle.left[2],r.segments.points.middle.left[1],r.segments.points.top.left[3]],[r.segments.points.top.left[4],r.segments.points.top.left[3],r.segments.points.top.left[5],r.segments.points.middle.centre[9],r.segments.points.middle.centre[7],r.segments.points.middle.centre[8]],[r.segments.points.top.centre[0],r.segments.points.top.centre[1],r.segments.points.middle.centre[7],r.segments.points.middle.centre[0],r.segments.points.middle.centre[10],r.segments.points.top.centre[2]],[r.segments.points.top.right[4],r.segments.points.top.right[3],r.segments.points.top.right[5],r.segments.points.middle.centre[11],r.segments.points.middle.centre[10],r.segments.points.middle.centre[12]],[r.segments.points.top.right[0],r.segments.points.top.right[2],r.segments.points.middle.right[1],r.segments.points.middle.right[2],r.segments.points.middle.right[0],r.segments.points.top.right[3]],[r.segments.points.middle.left[4],r.segments.points.middle.left[2],r.segments.points.middle.left[1],r.segments.points.middle.centre[7],r.segments.points.middle.centre[0],r.segments.points.middle.centre[1]],[r.segments.points.middle.right[3],r.segments.points.middle.right[2],r.segments.points.middle.right[0],r.segments.points.middle.centre[10],r.segments.points.middle.centre[0],r.segments.points.middle.centre[4]],[r.segments.points.bottom.left[0],r.segments.points.bottom.left[1],r.segments.points.middle.left[3],r.segments.points.middle.left[2],r.segments.points.middle.left[4],r.segments.points.bottom.left[3]],[r.segments.points.bottom.left[4],r.segments.points.bottom.left[3],r.segments.points.bottom.left[5],r.segments.points.middle.centre[2],r.segments.points.middle.centre[1],r.segments.points.middle.centre[3]],[r.segments.points.bottom.centre[0],r.segments.points.bottom.centre[2],r.segments.points.bottom.centre[1],r.segments.points.middle.centre[4],r.segments.points.middle.centre[0],r.segments.points.middle.centre[1]],[r.segments.points.bottom.right[4],r.segments.points.bottom.right[3],r.segments.points.bottom.right[5],r.segments.points.middle.centre[5],r.segments.points.middle.centre[4],r.segments.points.middle.centre[6]],[r.segments.points.bottom.right[3],r.segments.points.middle.right[3],r.segments.points.middle.right[2],r.segments.points.middle.right[4],r.segments.points.bottom.right[1],r.segments.points.bottom.right[0]],[r.segments.points.bottom.left[2],r.segments.points.bottom.left[0],r.segments.points.bottom.left[3],r.segments.points.bottom.centre[0],r.segments.points.bottom.centre[2],r.segments.points.bottom.centre[3]],[r.segments.points.bottom.right[2],r.segments.points.bottom.right[0],r.segments.points.bottom.right[3],r.segments.points.bottom.centre[1],r.segments.points.bottom.centre[2],r.segments.points.bottom.centre[4]]];function m(e){switch(e){case"!":return[1,1,0,1,1,1,0,0,0,0,0,0,0,0,1,1];case"?":return[1,1,0,0,0,0,1,0,1,0,0,0,0,0,1,1];case".":return[0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0];case",":return[0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0];case"'":return[0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0];case":":return[0,0,0,1,0,1,0,0,0,0,1,0,1,0,0,0];case'"':return[0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0];case"_":return[0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1];case"-":return[0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0];case"\\":return[0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0];case"/":return[0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0];case"*":return[0,0,0,1,1,1,0,1,1,0,1,1,1,0,0,0];case"#":return[1,1,1,0,1,0,1,1,1,1,0,1,0,1,1,1];case"<":return[0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0];case">":return[0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0];case"(":return[0,1,0,0,1,0,0,0,0,0,0,1,0,0,0,1];case")":return[1,0,0,0,1,0,0,0,0,0,0,1,0,0,1,0];case"[":return[1,1,1,0,0,0,0,0,0,1,0,0,0,0,1,1];case"]":return[1,1,0,0,0,0,1,0,0,0,0,0,0,1,1,1];case"{":return[1,1,0,1,0,0,0,1,0,0,1,0,0,0,1,1];case"}":return[1,1,0,0,0,1,0,0,1,0,0,0,1,0,1,1];case"0":case 0:return[1,1,1,0,0,1,1,0,0,1,1,0,0,1,1,1];case"1":case 1:return[1,0,0,0,1,0,0,0,0,0,0,1,0,0,1,1];case"2":case 2:return[1,1,0,0,0,0,1,0,1,0,1,0,0,0,1,1];case"3":case 3:return[1,1,0,0,0,0,1,1,1,0,0,0,0,1,1,1];case"4":case 4:return[0,0,1,0,0,0,1,1,1,0,0,0,0,1,0,0];case"5":case 5:return[1,1,1,0,0,0,0,1,1,0,0,0,0,1,1,1];case"6":case 6:return[1,1,1,0,0,0,0,1,1,1,0,0,0,1,1,1];case"7":case 7:return[1,1,0,0,0,1,0,0,0,0,1,0,0,0,0,0];case"8":case 8:return[1,1,1,0,0,0,1,1,1,1,0,0,0,1,1,1];case"9":case 9:return[1,1,1,0,0,0,1,1,1,0,0,0,0,1,1,1];case"a":case"A":return[1,1,1,0,0,0,1,1,1,1,0,0,0,1,0,0];case"b":case"B":return[1,1,0,0,1,0,1,0,1,0,0,1,0,1,1,1];case"c":case"C":return[1,1,1,0,0,0,0,0,0,1,0,0,0,0,1,1];case"d":case"D":return[1,1,0,0,1,0,1,0,0,0,0,1,0,1,1,1];case"e":case"E":return[1,1,1,0,0,0,0,1,1,1,0,0,0,0,1,1];case"f":case"F":return[1,1,1,0,0,0,0,1,1,1,0,0,0,0,0,0];case"g":case"G":return[1,1,1,0,0,0,0,0,1,1,0,0,0,1,1,1];case"h":case"H":return[0,0,1,0,0,0,1,1,1,1,0,0,0,1,0,0];case"i":case"I":return[1,1,0,0,1,0,0,0,0,0,0,1,0,0,1,1];case"j":case"J":return[1,1,0,0,1,0,0,0,0,0,0,1,0,0,1,0];case"k":case"K":return[0,0,1,0,0,1,0,1,0,1,0,0,1,0,0,0];case"l":case"L":return[0,0,1,0,0,0,0,0,0,1,0,0,0,0,1,1];case"m":case"M":return[0,0,1,1,0,1,1,0,0,1,0,0,0,1,0,0];case"n":case"N":return[0,0,1,1,0,0,1,0,0,1,0,0,1,1,0,0];case"o":case"O":return[1,1,1,0,0,0,1,0,0,1,0,0,0,1,1,1];case"p":case"P":return[1,1,1,0,0,0,1,1,1,1,0,0,0,0,0,0];case"q":case"Q":return[1,1,1,0,0,0,1,0,0,1,0,0,1,1,1,1];case"r":case"R":return[1,1,1,0,0,0,1,1,1,1,0,0,1,0,0,0];case"s":case"S":return[1,1,1,0,0,0,0,1,1,0,0,0,0,1,1,1];case"t":case"T":return[1,1,0,0,1,0,0,0,0,0,0,1,0,0,0,0];case"u":case"U":return[0,0,1,0,0,0,1,0,0,1,0,0,0,1,1,1];case"v":case"V":return[0,0,1,0,0,1,0,0,0,1,1,0,0,0,0,0];case"w":case"W":return[0,0,1,0,0,0,1,0,0,1,1,0,1,1,0,0];case"x":case"X":return[0,0,0,1,0,1,0,0,0,0,1,0,1,0,0,0];case"y":case"Y":return[0,0,0,1,0,1,0,0,0,0,0,1,0,0,0,0];case"z":case"Z":return[1,1,0,0,0,1,0,0,0,0,1,0,0,0,1,1];case"all":return[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1];default:return[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]}}const c=new Array(l).fill().map(()=>[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),x=new Array(l-1).fill().map(()=>!1),w=.05*s,k=t.builder("basic","canvas","backing",{width:i,height:s,colour:p,resolution:o});function y(e=!0){k._.fillStyle=_canvas_.library.math.convertColour.obj2rgba(p),k._.fillRect(0,0,k.$(i),k.$(s)),e&&k.requestUpdate()}function v(){c.forEach((e,t)=>{const n=t*(i/l);a.forEach((t,o)=>{k._.beginPath(),k._.moveTo(k.$(t[0].x+n),k.$(t[0].y));for(let e=1;e<t.length;e++)k._.lineTo(k.$(t[e].x+n),k.$(t[e].y));k._.closePath(),k._.fillStyle=0==e[o]?_canvas_.library.math.convertColour.obj2rgba(h):_canvas_.library.math.convertColour.obj2rgba(d),k._.fill()})}),u&&x.forEach((e,t)=>{k._.beginPath(),k._.arc(k.$((t+1)*(i/l)),k.$(s-2*w),k.$(w),0,2*Math.PI),k._.fillStyle=0==e?_canvas_.library.math.convertColour.obj2rgba(h):_canvas_.library.math.convertColour.obj2rgba(d),k._.fill()}),k.requestUpdate()}function b(e,t=0,n=!1){switch(u&&x.forEach((e,t)=>x[t]=!1),n||clearInterval(g),e){case"smart":u?_.replace(".","").length>c.length?b("r2lSweep"):b("regular"):_.length>c.length?b("r2lSweep"):b("regular");break;case"r2lSweep":let e=-c.length;g=setInterval((function(){b("regular",-e,!0),e++,"."==_[e]&&e++,e>c.length+_.length-1&&(e=-c.length)}),150);break;case"regular":default:let n=0;for(let e=t;e<c.length;e++)null!=c[e]?(u&&"."==_[n]?(null!=x[e-1]&&(x[e-1]=!0),e--):c[e]=m(_[n]),n++):n++}y(!1),v()}f.append(k),f.text=function(e){if(null==e)return _;_=String(e)},f.print=function(e){b(e)},f.oncreate=function(){y(),v()},f.ondelete=function(){clearInterval(g)}}else{const e=new Array(l).fill().map((e,t)=>_canvas_.interface.part.builder("display","sixteenSegmentDisplay",""+t,{x:i/l*t,width:i/l,height:s,canvasBased:n,resolution:o,style:{background:p,glow:d,dim:h}}));e.forEach(e=>f.append(e));let t=[];function b(n,o=0,r=!1){switch(t.forEach(e=>e.off()),r||clearInterval(g),n){case"smart":u?_.replace(".","").length>e.length?b("r2lSweep"):b("regular"):_.length>e.length?b("r2lSweep"):b("regular");break;case"r2lSweep":let n=-e.length;g=setInterval((function(){b("regular",-n,!0),n++,n>e.length+_.length-1&&(n=-e.length)}),150);break;case"regular":default:let r=0;for(let n=o;n<e.length;n++)null!=e[n]?(u&&"."==_[r]?(null!=t[n-1]&&t[n-1].on(),n--):e[n].enterCharacter(_[r]),r++):r++}}u&&(t=new Array(l-1).fill().map((e,t)=>_canvas_.interface.part.builder("display","glowbox_circle","decimalPoint_"+t,{x:i/l*(t+1),y:.9*s,radius:s/10/2,style:{glow:d,dim:h}})),t.forEach(e=>f.append(e))),f.text=function(e){if(null==e)return _;_=String(e)},f.print=function(e){b(e)}}return f},t.partLibrary.display.readout_sixteenSegmentDisplay=function(e,n){return t.collection.display.readout_sixteenSegmentDisplay(e,n.canvasBased,n.resolution,n.x,n.y,n.width,n.height,n.count,n.angle,n.decimalPlaces,n.style.background,n.style.glow,n.style.dim)}},this.control=new function(){t.partLibrary.control={},this.slidePanel_image=function(e="slidePanel_image",n,o,r=80,a=95,i=0,s=!0,l=.1,c=8,u=0,p=.5,d,h,_,g,f=function(){},m=function(){}){const y=t.builder("basic","group",e,{x:n,y:o,angle:i});for(let e=0;e<c;e++){const n=t.builder("control","slide_continuous_image","slide_"+e,{x:e*(r/c),y:0,width:r/c,height:a,interactable:s,handleHeight:l,value:u,resetValue:p,handleURL:d,backingURL:h,slotURL:_,onchange:function(e){y.onchange&&y.onchange(this.id,e)},onrelease:function(e){y.onrelease&&y.onrelease(this.id,e)}});n.__calculationAngle=i,y.append(n)}if(null!=g){const e=t.builder("basic","image","overlay",{width:r,height:a,url:g});y.append(e)}return y.interactable=function(e){if(null==e)return s;s=e;for(let t=0;t<c;t++)y.children[t].interactable(e)},y},t.partLibrary.control.slidePanel_image=function(e,n){return t.collection.control.slidePanel_image(e,n.x,n.y,n.width,n.height,n.angle,n.interactable,n.handleHeight,n.count,n.value,n.resetValue,n.handleURL,n.backingURL,n.overlayURL,n.style.invisibleHandle,n.onchange,n.onrelease)},this.slide_discrete=function(e="slide_discrete",n,o,r=10,a=95,i=0,s=!0,l=.1,c=0,u=-1,p=5,d={r:.78,g:.78,b:.78,a:1},h={r:.58,g:.58,b:.58,a:1},_={r:.2,g:.2,b:.2,a:1},g={r:1,g:0,b:0,a:0},f=function(){},m=function(){}){const y=t.builder("basic","group",e,{x:n,y:o,angle:i}),v=t.builder("control","slide_continuous",e,{x:0,y:0,width:r,height:a,angle:0,interactable:s,handleHeight:l,style:{handle:d,slot:_,backing:h,invisibleHandle:g}});function b(e,t=!0){e=(e=e>p-1?p-1:e)<0?0:e,e=Math.round(e),t&&null!=y.onchange&&c!=e&&y.onchange(e),c=e,v.set(c/(p-1))}function x(e){const t=y.getOffset().angle;return e.y*Math.cos(t)-e.x*Math.sin(t)}y.append(v);let w=!1;y.set=function(e,t){w||b(e,t)},y.get=function(){return c},y.interactable=function(e){if(null==e)return s;s=e};let k=0;return v.getChildByName("cover").attachCallback("ondblclick",(function(){s&&(u<0||w||(b(u),null!=y.onrelease&&y.onrelease(c)))})),v.getChildByName("cover").attachCallback("onwheel",(function(e,t,n){if(!s)return;if(w)return;const o=n.wheelDelta/100;k+=o,Math.abs(k)>=1&&(b(c+1*Math.sign(k)),k=0,null!=y.onrelease&&y.onrelease(c))})),v.getChildByName("invisibleHandle").attachCallback("onmousedown",(function(e,t,n){if(!s)return;w=!0;const o=c/(p-1),r=x(n),i=a-a*l;_canvas_.system.mouse.mouseInteractionHandler((function(e,t,n){const a=r-x(n),s=_canvas_.core.viewport.scale();b((o-a/(s*i))*(p-1))}),(function(e,t,n){w=!1}))})),v.getChildByName("backingAndSlotGroup").getChildByName("backingAndSlotCover").attachCallback("onclick",(function(e,t,n){if(!s)return;if(w)return;const o=v.getChildByName("backingAndSlotGroup"),r=o.getChildByName("backingAndSlotCover"),a=o.getOffset(),i={x:e-(o.x()+a.x),y:t-(o.y()+a.y),a:0-(o.angle()+a.angle)},c=_canvas_.library.math.cartesianAngleAdjust(i.x/a.scale,i.y/a.scale,i.a).y/r.height(),u=c+.5*l*(2*c-1);b(u*(p-1)),null!=y.onrelease&&y.onrelease(u)})),y.onchange=f,y.onrelease=m,b(c),y},t.partLibrary.control.slide_discrete=function(e,n){return t.collection.control.slide_discrete(e,n.x,n.y,n.width,n.height,n.angle,n.interactable,n.handleHeight,n.value,n.resetValue,n.optionCount,n.style.handle,n.style.backing,n.style.slot,n.style.invisibleHandle,n.onchange,n.onrelease)},this.slidePanel=function(e="slidePanel",n,o,r=80,a=95,i=0,s=!0,l=.1,c=8,u=0,p=.5,d={r:.78,g:.78,b:.78,a:1},h={r:.58,g:.58,b:.58,a:1},_={r:.2,g:.2,b:.2,a:1},g=function(){},f=function(){}){const m=t.builder("basic","group",e,{x:n,y:o,angle:i});for(let e=0;e<c;e++){const n=t.builder("control","slide_continuous","slide_"+e,{x:e*(r/c),y:0,width:r/c,height:a,interactable:s,handleHeight:l,value:u,resetValue:p,style:{handle:d,backing:h,slot:_},onchange:function(e){m.onchange&&m.onchange(this.id,e)},onrelease:function(e){m.onrelease&&m.onrelease(this.id,e)}});n.__calculationAngle=i,m.append(n)}return m.interactable=function(e){if(null==e)return s;s=e;for(let t=0;t<c;t++)m.children()[t].interactable(e)},m},t.partLibrary.control.slidePanel=function(e,n){return t.collection.control.slidePanel(e,n.x,n.y,n.width,n.height,n.angle,n.interactable,n.handleHeight,n.count,n.value,n.resetValue,n.style.handle,n.style.backing,n.style.slot,n.style.invisibleHandle,n.onchange,n.onrelease)},this.slide_continuous_image=function(e="slide_continuous_image",n,o,r=10,a=95,i=0,s=!0,l=.1,c=0,u=-1,p,d,h={r:1,g:0,b:0,a:0},_=function(){},g=function(){}){if(null==p)return this.slide(e,n,o,r,a,i,s,l,c,u,p,d,h,_,g);const f=t.builder("basic","group",e,{x:n,y:o,angle:i}),m=t.builder("basic","group","backingAndSlotGroup");if(f.append(m),null!=d){const e=t.builder("basic","image","backing",{width:r,height:a,url:d});m.append(e)}const y=t.builder("basic","rectangle","backingAndSlotCover",{width:r,height:a,colour:{r:0,g:0,b:0,a:0}});m.append(y);const v=t.builder("basic","image","handle",{width:r,height:a*l,url:p});f.append(v);const b=t.builder("basic","rectangle","invisibleHandle",{y:-.01*a/2,width:r,height:a*(l+.01)+l,colour:h});f.append(b);const x=t.builder("basic","rectangle","cover",{width:r,height:a,colour:{r:0,g:0,b:0,a:0}});function w(e,t=!0){e=(e=e>1?1:e)<0?0:e,t&&null!=f.onchange&&f.onchange(e),c=e,v.y(e*a*(1-l)),b.y(v.y()-.01*a/2)}function k(e){const t=f.getOffset().angle;return e.y*Math.cos(t)-e.x*Math.sin(t)}f.append(x);let C=!1;return f.set=function(e,t){C||w(e,t)},f.get=function(){return c},f.interactable=function(e){if(null==e)return s;s=e},x.attachCallback("ondblclick",(function(){s&&(u<0||C||(w(u),null!=f.onrelease&&f.onrelease(c)))})),x.attachCallback("onwheel",(function(e,t,n){if(!s)return;if(C)return;const o=n.wheelDelta/100,r=_canvas_.core.viewport.scale();w(c+o/(10*r)),null!=f.onrelease&&f.onrelease(c)})),y.attachCallback("onmousedown",(function(){})),y.attachCallback("onclick",(function(e,t,n){if(!s)return;if(C)return;const o=m.getOffset(),r={x:e-(m.x()+o.x),y:t-(m.y()+o.y),a:0-(m.angle()+o.angle)},a=_canvas_.library.math.cartesianAngleAdjust(r.x/o.scale,r.y/o.scale,r.a).y/y.height(),i=a+.5*l*(2*a-1);w(i),null!=f.onrelease&&f.onrelease(i)})),b.attachCallback("onclick",(function(e,t,n){})),b.attachCallback("onmousedown",(function(e,t,n){if(!s)return;C=!0;const o=c,r=k(n),i=a-a*l;_canvas_.system.mouse.mouseInteractionHandler((function(e,t,n){const a=r-k(n),s=_canvas_.core.viewport.scale();w(o-a/(s*i))}),(function(e,t,n){C=!1}))})),w(c),f.onchange=_,f.onrelease=g,f},t.partLibrary.control.slide_continuous_image=function(e,n){return t.collection.control.slide_continuous_image(e,n.x,n.y,n.width,n.height,n.angle,n.interactable,n.handleHeight,n.value,n.resetValue,n.handleURL,n.backingURL,n.style.invisibleHandle,n.onchange,n.onrelease)},this.slide_continuous=function(e="slide_continuous",n,o,r=10,a=95,i=0,s=!0,l=.1,c=0,u=-1,p={r:.78,g:.78,b:.78,a:1},d={r:.58,g:.58,b:.58,a:1},h={r:.2,g:.2,b:.2,a:1},_={r:1,g:0,b:0,a:0},g=function(){},f=function(){}){const m=t.builder("basic","group",e,{x:n,y:o,angle:i}),y=t.builder("basic","group","backingAndSlotGroup");m.append(y);const v=t.builder("basic","rectangle","backing",{width:r,height:a,colour:d});y.append(v);const b=t.builder("basic","rectangle","slot",{x:.45*r,y:a*(l/2),width:.1*r,height:a*(1-l),colour:h});y.append(b);const x=t.builder("basic","rectangle","backingAndSlotCover",{width:r,height:a,colour:{r:0,g:0,b:0,a:0}});y.append(x);const w=t.builder("basic","rectangle","handle",{width:r,height:a*l,colour:p});m.append(w);const k=t.builder("basic","rectangle","invisibleHandle",{y:-.01*a/2,width:r,height:a*(l+.01)+l,colour:_});m.append(k);const C=t.builder("basic","rectangle","cover",{width:r,height:a,colour:{r:0,g:0,b:0,a:0}});function S(e,t=!0){e=(e=e>1?1:e)<0?0:e,t&&null!=m.onchange&&m.onchange(e),c=e,w.y(e*a*(1-l)),k.y(w.y()-.01*a/2)}function T(e){const t=m.getOffset().angle;return e.y*Math.cos(t)-e.x*Math.sin(t)}m.append(C);let A=!1;return m.set=function(e,t){A||S(e,t)},m.get=function(){return c},m.interactable=function(e){if(null==e)return s;s=e},C.attachCallback("ondblclick",(function(){s&&(u<0||A||(S(u),null!=m.onrelease&&m.onrelease(c)))})),C.attachCallback("onwheel",(function(e,t,n){if(!s)return;if(A)return;const o=n.wheelDelta/100,r=_canvas_.core.viewport.scale();S(c+o/(10*r)),null!=m.onrelease&&m.onrelease(c)})),x.attachCallback("onmousedown",(function(){})),x.attachCallback("onclick",(function(e,t,n){if(!s)return;if(A)return;const o=y.getOffset(),r={x:e-(y.x()+o.x),y:t-(y.y()+o.y),a:0-(y.angle()+o.angle)},a=_canvas_.library.math.cartesianAngleAdjust(r.x/o.scale,r.y/o.scale,r.a).y/C.height(),i=a+.5*l*(2*a-1);S(i),null!=m.onrelease&&m.onrelease(i)})),k.attachCallback("onclick",(function(e,t,n){})),k.attachCallback("onmousedown",(function(e,t,n){if(!s)return;A=!0;const o=c,r=T(n),i=a-a*l;_canvas_.system.mouse.mouseInteractionHandler((function(e,t,n){const a=r-T(n),s=_canvas_.core.viewport.scale();S(o-a/(s*i))}),(function(e,t,n){A=!1}))})),S(c),m.onchange=g,m.onrelease=f,m},t.partLibrary.control.slide_continuous=function(e,n){return t.collection.control.slide_continuous(e,n.x,n.y,n.width,n.height,n.angle,n.interactable,n.handleHeight,n.value,n.resetValue,n.style.handle,n.style.backing,n.style.slot,n.style.invisibleHandle,n.onchange,n.onrelease)},this.slide_discrete_image=function(e="slide_discrete_image",n,o,r=10,a=95,i=0,s=!0,l=.1,c=0,u=-1,p=5,d,h,_={r:1,g:0,b:0,a:0},g=function(){},f=function(){}){const m=t.builder("basic","group",e,{x:n,y:o,angle:i}),y=t.builder("control","slide_continuous_image",e,{x:0,y:0,width:r,height:a,angle:0,interactable:s,invisibleHandleStyle:_,handleHeight:l,handleURL:d,backingURL:h});function v(e,t=!0){e=(e=e>p-1?p-1:e)<0?0:e,e=Math.round(e),t&&null!=m.onchange&&c!=e&&m.onchange(e),c=e,y.set(c/(p-1))}function b(e){const t=m.getOffset().angle;return e.y*Math.cos(t)-e.x*Math.sin(t)}m.append(y);let x=!1;m.set=function(e,t){x||v(e,t)},m.get=function(){return c},m.interactable=function(e){if(null==e)return s;s=e};let w=0;return y.getChildByName("cover").attachCallback("ondblclick",(function(){s&&(u<0||x||(v(u),null!=m.onrelease&&m.onrelease(c)))})),y.getChildByName("cover").attachCallback("onwheel",(function(e,t,n){if(!s)return;if(x)return;const o=n.wheelDelta/100;w+=o,Math.abs(w)>=1&&(v(c+1*Math.sign(w)),w=0,null!=m.onrelease&&m.onrelease(c))})),y.getChildByName("invisibleHandle").attachCallback("onmousedown",(function(e,t,n){if(!s)return;x=!0;const o=c/(p-1),r=b(n),i=a-a*l;_canvas_.system.mouse.mouseInteractionHandler((function(e,t,n){const a=r-b(n),s=_canvas_.core.viewport.scale();v((o-a/(s*i))*(p-1))}),(function(e,t,n){x=!1}))})),y.getChildByName("backingAndSlotGroup").getChildByName("backingAndSlotCover").attachCallback("onclick",(function(e,t,n){if(!s)return;if(x)return;const o=y.getChildByName("backingAndSlotGroup"),r=o.getChildByName("backingAndSlotCover"),a=o.getOffset(),i={x:e-(o.x()+a.x),y:t-(o.y()+a.y),a:0-(o.angle()+a.angle)},c=_canvas_.library.math.cartesianAngleAdjust(i.x/a.scale,i.y/a.scale,i.a).y/r.height(),u=c+.5*l*(2*c-1);v(u*(p-1)),null!=m.onrelease&&m.onrelease(u)})),m.onchange=g,m.onrelease=f,v(c),m},t.partLibrary.control.slide_discrete_image=function(e,n){return t.collection.control.slide_discrete_image(e,n.x,n.y,n.width,n.height,n.angle,n.interactable,n.handleHeight,n.value,n.resetValue,n.optionCount,n.handleURL,n.backingURL,n.invisibleHandle,n.onchange,n.onrelease)},this.checkbox_rectangle=function(e="checkbox_rectangle",n,o,r=20,a=20,i=0,s=!0,l=.9,c={r:.58,g:.58,b:.58,a:1},u={r:.78,g:.78,b:.78,a:1},p={r:.86,g:.86,b:.86,a:1},d={r:.86,g:.86,b:.86,a:1},h=function(){}){const _=t.builder("basic","group",e+"subGroup"),g=t.builder("basic","rectangle","backing",{width:r,height:a,colour:u});_.append(g);const f=t.builder("basic","rectangle","checkrect",{x:r*(1-l),y:a*(1-l),width:r*(2*l-1),height:a*(2*l-1),colour:{r:0,g:0,b:0,a:0}});_.append(f),_.cover=t.builder("basic","rectangle","cover",{width:r,height:a,colour:{r:0,g:0,b:0,a:0}}),_.append(_.cover);const m=t.builder("control","checkbox_",e,{x:n,y:o,angle:i,interactable:s,onchange:h,subject:_});return m.updateGraphics=function(e){e.glowing?(g.colour(d),f.colour(e.checked?p:{r:0,g:0,b:0,a:0})):(g.colour(u),f.colour(e.checked?c:{r:0,g:0,b:0,a:0}))},m.updateGraphics({checked:!1,glowing:!1}),m},t.partLibrary.control.checkbox_rectangle=function(e,n){return t.collection.control.checkbox_rectangle(e,n.x,n.y,n.width,n.height,n.angle,n.interactable,n.percentageSize,n.style.check,n.style.backing,n.style.checkGlow,n.style.backingGlow,n.onchange)},this.checkbox_image=function(e="checkbox_image",n,o,r=20,a=20,i=0,s=!0,l="",c="",u="",p="",d=function(){}){const h=t.builder("basic","group",e+"subGroup"),_=t.builder("basic","image","backing",{width:r,height:a,url:l});h.append(_),h.cover=t.builder("basic","rectangle","cover",{width:r,height:a,colour:{r:0,g:0,b:0,a:0}}),h.append(h.cover);const g=t.builder("control","checkbox_",e,{x:n,y:o,angle:i,interactable:s,onchange:d,subject:h});return g.updateGraphics=function(e){e.glowing?_.url(e.checked?p:u):_.url(e.checked?c:l)},g.updateGraphics({checked:!1,glowing:!1}),g},t.partLibrary.control.checkbox_image=function(e,n){return t.collection.control.checkbox_image(e,n.x,n.y,n.width,n.height,n.angle,n.interactable,n.uncheckURL,n.checkURL,n.uncheckGlowURL,n.checkGlowURL,n.onchange)},this.checkbox_=function(e="checkbox_",n,o,r=0,a=!0,i=function(){},s){null==s&&console.warn("checkbox_ : No subject provided");const l=t.builder("basic","group",e,{x:n,y:o,angle:r});l.append(s);const c={checked:!1,glowing:!1};return l.get=function(){return c.checked},l.set=function(e,t=!0){c.checked=e,l.updateGraphics(c),t&&this.onchange&&this.onchange(e)},l.toggle=function(){l.set(!l.get())},l.light=function(e){if(null==e)return c.glowing;c.glowing=e,l.updateGraphics(c)},l.interactable=function(e){if(null==e)return a;a=e},s.cover.attachCallback("onclick",(e,t,n)=>{a&&l.set(!l.get())}),s.cover.attachCallback("onmousedown",()=>{}),s.cover.attachCallback("onmouseup",()=>{}),l.onchange=i,l},t.partLibrary.control.checkbox_=function(e,n){return t.collection.control.checkbox_(e,n.x,n.y,n.angle,n.interactable,n.onchange,n.subject)},this.checkbox_polygon=function(e="checkbox_polygon",n,o,r=[{x:0,y:4},{x:4,y:0},{x:16,y:0},{x:20,y:4},{x:20,y:16},{x:16,y:20},{x:4,y:20},{x:0,y:16}],a=[{x:2,y:4},{x:4,y:2},{x:16,y:2},{x:18,y:4},{x:18,y:16},{x:16,y:18},{x:4,y:18},{x:2,y:16}],i=0,s=!0,l={r:.58,g:.58,b:.58,a:1},c={r:.78,g:.78,b:.78,a:1},u={r:.86,g:.86,b:.86,a:1},p={r:.86,g:.86,b:.86,a:1},d=function(){}){const h=t.builder("basic","group",e+"subGroup",{}),_=t.builder("basic","polygon","backing",{pointsAsXYArray:r,colour:c});h.append(_);const g=t.builder("basic","polygon","checkpoly",{pointsAsXYArray:a,colour:{r:0,g:0,b:0,a:0}});h.append(g),h.cover=t.builder("basic","polygon","cover",{pointsAsXYArray:r,colour:{r:0,g:0,b:0,a:0}}),h.append(h.cover);const f=t.builder("control","checkbox_",e,{x:n,y:o,angle:i,interactable:s,onchange:d,subject:h});return f.updateGraphics=function(e){e.glowing?(_.colour(p),g.colour(e.checked?u:{r:0,g:0,b:0,a:0})):(_.colour(c),g.colour(e.checked?l:{r:0,g:0,b:0,a:0}))},f.updateGraphics({checked:!1,glowing:!1}),f},t.partLibrary.control.checkbox_polygon=function(e,n){return t.collection.control.checkbox_polygon(e,n.x,n.y,n.outterPoints,n.innerPoints,n.angle,n.interactable,n.style.check,n.style.backing,n.style.checkGlow,n.style.backingGlow,n.onchange)},this.checkbox_circle=function(e="checkbox_circle",n,o,r=10,a=0,i=!0,s=.9,l={r:.58,g:.58,b:.58,a:1},c={r:.78,g:.78,b:.78,a:1},u={r:.86,g:.86,b:.86,a:1},p={r:.86,g:.86,b:.86,a:1},d=function(){}){const h=t.builder("basic","group",e+"subGroup"),_=t.builder("basic","circle","backing",{radius:r,colour:c});h.append(_);const g=t.builder("basic","circle","checkcirc",{radius:r*(2*s-1),colour:{r:0,g:0,b:0,a:0}});h.append(g),h.cover=t.builder("basic","circle","cover",{radius:r,colour:{r:0,g:0,b:0,a:0}}),h.append(h.cover);const f=t.builder("control","checkbox_",e,{x:n,y:o,angle:a,interactable:i,onchange:d,subject:h});return f.updateGraphics=function(e){e.glowing?(_.colour(p),g.colour(e.checked?u:{r:0,g:0,b:0,a:0})):(_.colour(c),g.colour(e.checked?l:{r:0,g:0,b:0,a:0}))},f.updateGraphics({checked:!1,glowing:!1}),f},t.partLibrary.control.checkbox_circle=function(e,n){return t.collection.control.checkbox_circle(e,n.x,n.y,n.radius,n.angle,n.interactable,n.percentageSize,n.style.check,n.style.backing,n.style.checkGlow,n.style.backingGlow,n.onchange)},this.checkboxgrid=function(e="checkboxgrid",n,o,r=80,a=80,i=0,s=!0,l=5,c=5,u=.9,p={r:.58,g:.58,b:.58,a:1},d={r:.78,g:.78,b:.78,a:1},h={r:.86,g:.86,b:.86,a:1},_={r:.86,g:.86,b:.86,a:1},g=function(){}){const f=t.builder("basic","group",e,{x:n,y:o,angle:i});for(let e=0;e<c;e++)for(let n=0;n<l;n++){const o=t.builder("control","checkbox_rectangle",e+"_"+n,{x:n*(r/l),y:e*(a/c),width:r/l,height:a/c,interactable:s,percentageSize:u,style:{check:p,backing:d,checkGlow:h,backingGlow:_},onchange:function(){f.onchange&&f.onchange(f.get())}});f.append(o)}return f.box=function(e,t){return f.getChildByName(t+"_"+e)},f.get=function(){const e=[];for(let t=0;t<c;t++){const n=[];for(let e=0;e<l;e++)n.push(this.box(e,t).get());e.push(n)}return e},f.set=function(e,t=!0){for(let t=0;t<c;t++)for(let n=0;n<l;n++)f.box(n,t).set(e[t][n],!1)},f.clear=function(){for(let e=0;e<c;e++)for(let t=0;t<l;t++)f.box(t,e).set(!1,!1)},f.light=function(e,t,n){f.box(e,t).light(n)},f.interactable=function(e){if(null==e)return s;s=e;for(let t=0;t<c;t++)for(let n=0;n<l;n++)f.getChildByName(t+"_"+n).interactable(e)},f.onchange=g,f},t.partLibrary.control.checkboxgrid=function(e,n){return t.collection.control.checkboxgrid(e,n.x,n.y,n.width,n.height,n.angle,n.interactable,n.xCount,n.yCount,n.percentageSize,n.style.check,n.style.backing,n.style.checkGlow,n.style.backingGlow,n.onchange)},this.dial_continuous_image=function(e="dial_continuous_image",n,o,r=10,a=0,i=!0,s=0,l=-1,c=3*Math.PI/4,u=1.5*Math.PI,p,d,h,_=function(){},g=function(){}){if(null==p&&null==d&&null==h)return this.dial_1_continuous(e,n,o,r,a,i,s,l,c,u,void 0,void 0,void 0,_,g);const f=t.builder("basic","group",e,{x:n,y:o,angle:a});if(null!=d){const e=t.builder("basic","image","slot",{width:2.2*r,height:2.2*r,anchor:{x:.5,y:.5},url:d});f.append(e)}let m,y;if(m=null!=p?t.builder("basic","image","handle",{width:2*r,height:2*r,anchor:{x:.5,y:.5},url:p}):t.builder("basic","circle","handle",{radius:r,detail:50,colour:{r:0,g:0,b:0,a:0}}),f.append(m),null!=h){y=t.builder("basic","group","needleGroup",{ignored:!0}),f.append(y);const e=r/5,n=r,o=t.builder("basic","image","needle",{x:n/3,y:-e/2,height:e,width:n,url:h});y.append(o)}function v(e,t=!0){e=(e=e>1?1:e)<0?0:e,t&&null!=f.onchange&&f.onchange(e),s=e,null!=h&&y.angle(c+u*s),null!=m&&m.angle(c+u*s)}let b=!1;f.set=function(e,t){b||v(e,t)},f.get=function(){return s},f.interactable=function(e){if(null==e)return i;i=e};const x=32*r;return m.attachCallback("ondblclick",(function(){i&&(l<0||b||(v(l),null!=f.onrelease&&f.onrelease(s)))})),m.attachCallback("onwheel",(function(e,t,n){if(!i)return;if(b)return;const o=n.wheelDelta/100,r=_canvas_.core.viewport.scale();v(s-o/(10*r)),null!=f.onrelease&&f.onrelease(s)})),m.attachCallback("onmousedown",(function(e,t,n){if(!i)return;const o=s,r=n.y;b=!0,_canvas_.system.mouse.mouseInteractionHandler((function(e,t,n){v(o-(n.y-r)/(_canvas_.core.viewport.scale()*x)*window.devicePixelRatio,!0)}),(function(e,t,n){b=!1,null!=f.onrelease&&f.onrelease(s)}))})),f.onchange=_,f.onrelease=g,v(s),f},t.partLibrary.control.dial_continuous_image=function(e,n){return t.collection.control.dial_continuous_image(e,n.x,n.y,n.radius,n.angle,n.interactable,n.value,n.resetValue,n.startAngle,n.maxAngle,n.handleURL,n.slotURL,n.needleURL,n.onchange,n.onrelease)},this.dial_1_discrete=function(e="dial_1_discrete",n,o,r=10,a=0,i=!0,s=0,l=0,c=5,u=3*Math.PI/4,p=1.5*Math.PI,d={r:.85,g:.85,b:.85,a:1},h={r:.2,g:.2,b:.2,a:1},_={r:1,g:.4,b:.4,a:1},g=function(){},f=function(){}){const m=t.builder("basic","group",e,{x:n,y:o,angle:a}),y=t.builder("control","dial_1_continuous",e,{x:0,y:0,radius:r,angle:0,interactable:i,startAngle:u,maxAngle:p,style:{handle:d,slot:h,needle:_}});function v(e,t=!0){e=(e=e>c-1?c-1:e)<0?0:e,(e=Math.round(e))!=s&&(t&&null!=m.onchange&&m.onchange(e),s=e,y.set(s/(c-1)))}m.append(y);let b=!1;m.set=function(e,t){b||v(e,t)},m.get=function(){return s},m.interactable=function(e){if(null==e)return i;i=e},m.nudge=function(e){v(s+e)};let x=0;return y.getChildByName("handle").attachCallback("ondblclick",(function(){i&&(l<0||b||(v(l),null!=m.onrelease&&m.onrelease(s)))})),y.getChildByName("handle").attachCallback("onwheel",(function(e,t,n){if(!i)return;if(b)return;const o=n.wheelDelta/100;x+=o,Math.abs(x)>=1&&(v(s-1*Math.sign(x)),x=0,null!=m.onrelease&&m.onrelease(s))})),y.getChildByName("handle").attachCallback("onmousedown",(function(e,t,n){if(!i)return;const o=s,r=n.y;b=!0,_canvas_.system.mouse.mouseInteractionHandler((function(e,t,n){const a=Math.round((n.y-r)/25);v(o-a)}),(function(e,t,n){b=!1,null!=m.onrelease&&m.onrelease(s)}))})),m.onchange=g,m.onrelease=f,v(s),y.set(Math.round(s)/(c-1)),m},t.partLibrary.control.dial_1_discrete=function(e,n){return t.collection.control.dial_1_discrete(e,n.x,n.y,n.radius,n.angle,n.interactable,n.value,n.resetValue,n.optionCount,n.startAngle,n.maxAngle,n.style.handle,n.style.slot,n.style.needle,n.onchange,n.onrelease)},t.partLibrary.control.dial_discrete=t.partLibrary.control.dial_1_discrete,this.dial_1_continuous=function(e="dial_1_continuous",n,o,r=10,a=0,i=!0,s=0,l=-1,c=3*Math.PI/4,u=1.5*Math.PI,p={r:.85,g:.85,b:.85,a:1},d={r:.2,g:.2,b:.2,a:1},h={r:1,g:.4,b:.4,a:1},_=function(){},g=function(){}){const f=t.builder("basic","group",e,{x:n,y:o,angle:a}),m=t.builder("basic","circle","slot",{radius:1.1*r,detail:50,colour:d});f.append(m);const y=t.builder("basic","circle","handle",{radius:r,detail:50,colour:p});f.append(y);const v=t.builder("basic","group","needleGroup",{ignored:!0});f.append(v);const b=r/5,x=r,w=t.builder("basic","rectangle","needle",{x:x/3,y:-b/2,height:b,width:x,colour:h});function k(e,t=!0){e=(e=e>1?1:e)<0?0:e,t&&null!=f.onchange&&f.onchange(e),s=e,v.angle(c+u*s)}v.append(w);let C=!1;f.set=function(e,t){C||k(e,t)},f.get=function(){return s},f.interactable=function(e){if(null==e)return i;i=e};const S=32*r;return y.attachCallback("ondblclick",(function(){i&&(l<0||C||(k(l),null!=f.onrelease&&f.onrelease(s)))})),y.attachCallback("onwheel",(function(e,t,n){if(!i)return;if(C)return;const o=n.wheelDelta/100,r=_canvas_.core.viewport.scale();k(s-o/(10*r)),null!=f.onrelease&&f.onrelease(s)})),y.attachCallback("onmousedown",(function(e,t,n){if(!i)return;const o=s,r=n.y;C=!0,_canvas_.system.mouse.mouseInteractionHandler((function(e,t,n){k(o-(n.y-r)/(_canvas_.core.viewport.scale()*S)*window.devicePixelRatio,!0)}),(function(e,t,n){C=!1,null!=f.onrelease&&f.onrelease(s)}))})),f.onchange=_,f.onrelease=g,k(s),f},t.partLibrary.control.dial_1_continuous=function(e,n){return t.collection.control.dial_1_continuous(e,n.x,n.y,n.radius,n.angle,n.interactable,n.value,n.resetValue,n.startAngle,n.maxAngle,n.style.handle,n.style.slot,n.style.needle,n.onchange,n.onrelease)},t.partLibrary.control.dial_continuous=t.partLibrary.control.dial_1_continuous,this.dial_discrete_image=function(e="dial_discrete_image",n,o,r=10,a=0,i=!0,s=0,l=0,c=5,u=3*Math.PI/4,p=1.5*Math.PI,d,h,_,g=function(){},f=function(){}){const m=t.builder("basic","group",e,{x:n,y:o,angle:a}),y=t.builder("control","dial_continuous_image",e,{x:0,y:0,radius:r,angle:0,interactable:i,startAngle:u,maxAngle:p,handleURL:d,slotURL:h,needleURL:_});function v(e,t=!0){e=(e=e>c-1?c-1:e)<0?0:e,(e=Math.round(e))!=s&&(t&&null!=m.onchange&&m.onchange(e),s=e,y.set(s/(c-1)))}m.append(y);let b=!1;m.set=function(e,t){b||v(e,t)},m.get=function(){return s},m.interactable=function(e){if(null==e)return i;i=e},m.nudge=function(e){v(s+e)};let x=0;return y.getChildByName("handle").attachCallback("ondblclick",(function(){i&&(l<0||b||(v(l),null!=m.onrelease&&m.onrelease(s)))})),y.getChildByName("handle").attachCallback("onwheel",(function(e,t,n){if(!i)return;if(b)return;const o=n.wheelDelta/100;x+=o,Math.abs(x)>=1&&(v(s-1*Math.sign(x)),x=0,null!=m.onrelease&&m.onrelease(s))})),y.getChildByName("handle").attachCallback("onmousedown",(function(e,t,n){if(!i)return;const o=s,r=n.y;b=!0,_canvas_.system.mouse.mouseInteractionHandler((function(e,t,n){const a=Math.round((n.y-r)/25);v(o-a)}),(function(e,t,n){b=!1,null!=m.onrelease&&m.onrelease(s)}))})),m.onchange=g,m.onrelease=f,v(s),y.set(Math.round(s)/(c-1)),m},t.partLibrary.control.dial_discrete_image=function(e,n){return t.collection.control.dial_discrete_image(e,n.x,n.y,n.radius,n.angle,n.interactable,n.value,n.resetValue,n.optionCount,n.startAngle,n.maxAngle,n.handleURL,n.slotURL,n.needleURL,n.onchange,n.onrelease)},this.dial_2_discrete=function(e="dial_2_discrete",n,o,r=10,a=0,i=!0,s=0,l=0,c=5,u=3*Math.PI/4,p=1.5*Math.PI,d={r:1,g:.1,b:.1,a:1},h={r:0,g:0,b:0,a:0},_={r:1,g:1,b:1,a:1},g=function(){},f=function(){}){const m=t.builder("basic","group",e,{x:n,y:o,angle:a}),y=t.builder("control","dial_2_continuous",e,{x:0,y:0,radius:r,angle:0,interactable:i,startAngle:u,maxAngle:p,style:{handle:d,slot:h,needle:_}});function v(e,t=!0){e=(e=e>c-1?c-1:e)<0?0:e,(e=Math.round(e))!=s&&(t&&null!=m.onchange&&m.onchange(e),s=e,y.set(s/(c-1)))}m.append(y);let b=!1;m.set=function(e,t){b||v(e,t)},m.get=function(){return s},m.interactable=function(e){if(null==e)return i;i=e},m.nudge=function(e){v(s+e)};let x=0;return y.getChildByName("handle").attachCallback("ondblclick",(function(){i&&(l<0||b||(v(l),null!=m.onrelease&&m.onrelease(s)))})),y.getChildByName("handle").attachCallback("onwheel",(function(e,t,n){if(!i)return;if(b)return;const o=n.wheelDelta/100;x+=o,Math.abs(x)>=1&&(v(s-1*Math.sign(x)),x=0,null!=m.onrelease&&m.onrelease(s))})),y.getChildByName("handle").attachCallback("onmousedown",(function(e,t,n){if(!i)return;const o=s,r=n.y;b=!0,_canvas_.system.mouse.mouseInteractionHandler((function(e,t,n){const a=Math.round((n.y-r)/25);v(o-a)}),(function(e,t,n){b=!1,null!=m.onrelease&&m.onrelease(s)}))})),m.onchange=g,m.onrelease=f,v(s),y.set(Math.round(s)/(c-1)),m},t.partLibrary.control.dial_2_discrete=function(e,n){return t.collection.control.dial_2_discrete(e,n.x,n.y,n.radius,n.angle,n.interactable,n.value,n.resetValue,n.optionCount,n.startAngle,n.maxAngle,n.style.handle,n.style.slot,n.style.needle,n.onchange,n.onrelease)},this.dial_2_continuous=function(e="dial_2_continuous",n,o,r=10,a=0,i=!0,s=0,l=-1,c=3*Math.PI/4,u=1.5*Math.PI,p={r:1,g:.1,b:.1,a:1},d={r:0,g:0,b:0,a:0},h={r:1,g:1,b:1,a:1},_=function(){},g=function(){}){const f=t.builder("basic","group",e,{x:n,y:o,angle:a}),m=t.builder("basic","circle","slot",{radius:1.1*r,detail:50,colour:d});f.append(m);const y=t.builder("basic","circle","handle",{radius:r,detail:50,colour:p});f.append(y);const v=t.builder("basic","group","needleGroup",{ignored:!0});f.append(v);const b=r/8,x=r/2,w=t.builder("basic","rectangle","needle",{x:.8*r-x,y:-b/2,height:b,width:x,colour:h});v.append(w);const k=t.builder("basic","circle","needleTip",{x:.8*r,radius:b/2,detail:10,colour:h});v.append(k);const C=t.builder("basic","circle","needleBase",{x:.8*r-x,radius:b/2,detail:10,colour:h});function S(e,t=!0){e=(e=e>1?1:e)<0?0:e,t&&null!=f.onchange&&f.onchange(e),s=e,v.angle(c+u*s)}v.append(C);let T=!1;f.set=function(e,t){T||S(e,t)},f.get=function(){return s},f.interactable=function(e){if(null==e)return i;i=e};const A=32*r;return y.attachCallback("ondblclick",(function(){i&&(l<0||T||(S(l),null!=f.onrelease&&f.onrelease(s)))})),y.attachCallback("onwheel",(function(e,t,n){if(!i)return;if(T)return;const o=n.wheelDelta/100,r=_canvas_.core.viewport.scale();S(s-o/(10*r)),null!=f.onrelease&&f.onrelease(s)})),y.attachCallback("onmousedown",(function(e,t,n){if(!i)return;const o=s,r=n.y;T=!0,_canvas_.system.mouse.mouseInteractionHandler((function(e,t,n){S(o-(n.y-r)/(_canvas_.core.viewport.scale()*A)*window.devicePixelRatio,!0)}),(function(e,t,n){T=!1,null!=f.onrelease&&f.onrelease(s)}))})),f.onchange=_,f.onrelease=g,S(s),f},t.partLibrary.control.dial_2_continuous=function(e,n){return t.collection.control.dial_2_continuous(e,n.x,n.y,n.radius,n.angle,n.interactable,n.value,n.resetValue,n.startAngle,n.maxAngle,n.style.handle,n.style.slot,n.style.needle,n.onchange,n.onrelease)},this.rangeslide_image=function(e="rangeslide_image",n,o,r=10,a=95,i=0,s=!0,l=.1,c=.75,u={start:0,end:1},p={start:-1,end:-1},d,h,_={r:1,g:0,b:0,a:0},g,f=function(){},m=function(){}){if(null==d)return this.rangeslide(e,n,o,r,a,i,s,l,c,u,p,void 0,void 0,_,void 0,f,m);let y=!1;const v=["start","end"],b=t.builder("basic","group",e,{x:n,y:o,angle:i}),x=t.builder("basic","group","backingAndSlotGroup");if(b.append(x),null!=h){const e=t.builder("basic","image","backing",{width:r,height:a,url:h});x.append(e)}const w=t.builder("basic","rectangle","backingAndSlotCover",{width:r,height:a,colour:{r:0,g:0,b:0,a:0}});x.append(w);const k=t.builder("basic","image","span",{x:r*((1-c)/2),y:a*l,width:r*c,height:a-2*a*l,url:g});b.append(k);const C={};for(let e=0;e<v.length;e++){C[v[e]]=t.builder("basic","group","handle_"+e,{}),b.append(C[v[e]]);const n=t.builder("basic","image","handle",{width:r,height:a*l,url:d});C[v[e]].append(n);const o=a*l+.01*a,i=t.builder("basic","rectangle","invisibleHandle",{y:(a*l-o)/2,width:r,height:o+l,colour:_});C[v[e]].append(i)}const S=t.builder("basic","rectangle","cover",{width:r,height:a,colour:{r:0,g:0,b:0,a:0}});function T(e,t,n=!0){switch(e=(e=e>1?1:e)<0?0:e,t){default:console.error("unknown handle to adjust");break;case"start":{e/(1-l/(1-l))>=1&&(e=1-l/(1-l));const t=e+(1-e)*l;t>=u.end-u.end*l&&(u.end=t/(1-l))}break;case"end":{e/(l/(1-l))<=1&&(e=l/(1-l));const t=u.start+(1-u.start)*l,n=e-e*l;t>=n&&(u.start=(n-l)/(1-l))}}u[t]=e,C.start.y(u.start*a*(1-l)),C.end.y(u.end*a*(1-l)),k.y(a*(l+u.start-l*(u.start+.1))),k.height(a*(u.end-u.start+l*(u.start-u.end-1+.2))),n&&b.onchange&&b.onchange(u)}function A(e){const t=b.getOffset().angle;return e.y*Math.cos(t)-e.x*Math.sin(t)}b.append(S),b.get=function(){return u},b.set=function(e,t){y||(null!=e.start&&T(e.start,"start",t),null!=e.end&&T(e.end,"end",t))},b.interactable=function(e){if(null==e)return s;s=e},k.attachCallback("onmousedown",(function(){})),k.attachCallback("onclick",(function(){})),w.attachCallback("onmousedown",(function(){})),w.attachCallback("onclick",(function(e,t,n){if(!s)return;if(y)return;const o=function(e,t){const n=x.getOffset(),o={x:e-(x.x()+n.x),y:t-(x.y()+n.y),a:0-(x.angle()+n.angle)};return _canvas_.library.math.cartesianAngleAdjust(o.x/n.scale,o.y/n.scale,o.a).y/w.height()}(e,t),r=o+.5*l*(2*o-1);Math.abs(u.start-r)<Math.abs(u.end-r)?T(r,"start"):T(r,"end")})),S.attachCallback("ondblclick",(function(){s&&(p.start<0||p.end<0||y||(T(p.start,"start"),T(p.end,"end"),b.onrelease(u)))})),S.attachCallback("onwheel",(function(e,t,n){if(!s)return;if(y)return;const o=n.wheelDelta/100/(10*_canvas_.core.viewport.scale());T(u.start-o,"start"),T(u.end+o,"end")})),k.attachCallback("onmousedown",(function(e,t,n){if(!s)return;y=!0;const o=u.start,r=A(n),i=a-a*l;_canvas_.system.mouse.mouseInteractionHandler((function(e,t,n){const a=r-A(n),s=_canvas_.core.viewport.scale();!function(e){const t=[e,e+(u.end-u.start)];t[0]<=0?(t[1]=t[1]-t[0],t[0]=0):t[1]>=1&&(t[0]=t[0]-(t[1]-1),t[1]=1),T(t[0],"start"),T(t[1],"end")}(o-a/(s*i)),b.onchange(u)}),(function(e,t,n){b.onrelease(u),y=!1}))}));for(let e=0;e<v.length;e++)C[v[e]].getChildren()[1].attachCallback("onclick",(function(){})),C[v[e]].getChildren()[1].attachCallback("onmousedown",function(e){return function(t,n,o){if(!s)return;y=!0;const r=u[v[e]],i=A(o),c=a-a*l;_canvas_.system.mouse.mouseInteractionHandler((function(t,n,o){const a=i-A(o),s=_canvas_.core.viewport.scale();T(r-a/(s*c),v[e])}),(function(e,t,n){b.onrelease(u),y=!1}))}}(e));return b.onchange=f,b.onrelease=m,T(0,"start"),T(1,"end"),b},t.partLibrary.control.rangeslide_image=function(e,n){return t.collection.control.rangeslide_image(e,n.x,n.y,n.width,n.height,n.angle,n.interactable,n.handleHeight,n.spanWidth,n.values,n.resetValues,n.handleURL,n.backingURL,n.style.invisibleHandle,n.spanURL,n.onchange,n.onrelease)},this.rangeslide=function(e="rangeslide",n,o,r=10,a=95,i=0,s=!0,l=.1,c=.75,u={start:0,end:1},p={start:-1,end:-1},d={r:.78,g:.78,b:.78,a:1},h={r:.58,g:.58,b:.58,a:1},_={r:.2,g:.2,b:.2,a:1},g={r:1,g:0,b:0,a:0},f={r:.78,g:0,b:.78,a:.5},m=function(){},y=function(){}){let v=!1;const b=["start","end"],x=t.builder("basic","group",e,{x:n,y:o,angle:i}),w=t.builder("basic","group","backingAndSlotGroup");x.append(w);const k=t.builder("basic","rectangle","backing",{width:r,height:a,colour:h});w.append(k);const C=t.builder("basic","rectangle","slot",{x:.45*r,y:a*(l/2),width:.1*r,height:a*(1-l),colour:_});w.append(C);const S=t.builder("basic","rectangle","backingAndSlotCover",{width:r,height:a,colour:{r:0,g:0,b:0,a:0}});w.append(S);const T=t.builder("basic","rectangle","span",{x:r*((1-c)/2),y:a*l,width:r*c,height:a-2*a*l,colour:f});x.append(T);const A={};for(let e=0;e<b.length;e++){A[b[e]]=t.builder("basic","group","handle_"+e,{}),x.append(A[b[e]]);const n=t.builder("basic","rectangle","handle",{width:r,height:a*l,colour:d});A[b[e]].append(n);const o=a*l+.01*a,i=t.builder("basic","rectangle","invisibleHandle",{y:(a*l-o)/2,width:r,height:o+l,colour:g});A[b[e]].append(i)}const M=t.builder("basic","rectangle","cover",{width:r,height:a,colour:{r:0,g:0,b:0,a:0}});function F(e,t,n=!0){switch(e=(e=e>1?1:e)<0?0:e,t){default:console.error("unknown handle to adjust");break;case"start":{e/(1-l/(1-l))>=1&&(e=1-l/(1-l));const t=e+(1-e)*l;t>=u.end-u.end*l&&(u.end=t/(1-l))}break;case"end":{e/(l/(1-l))<=1&&(e=l/(1-l));const t=u.start+(1-u.start)*l,n=e-e*l;t>=n&&(u.start=(n-l)/(1-l))}}u[t]=e,A.start.y(u.start*a*(1-l)),A.end.y(u.end*a*(1-l)),T.y(a*(l+u.start-l*(u.start+.1))),T.height(a*(u.end-u.start+l*(u.start-u.end-1+.2))),n&&x.onchange&&x.onchange(u)}function O(e){const t=x.getOffset().angle;return e.y*Math.cos(t)-e.x*Math.sin(t)}x.append(M),x.get=function(){return u},x.set=function(e,t){v||(null!=e.start&&F(e.start,"start",t),null!=e.end&&F(e.end,"end",t))},x.interactable=function(e){if(null==e)return s;s=e},T.attachCallback("onmousedown",(function(){})),T.attachCallback("onclick",(function(){})),S.attachCallback("onmousedown",(function(){})),S.attachCallback("onclick",(function(e,t,n){if(!s)return;if(v)return;const o=function(e,t){const n=w.getOffset(),o={x:e-(w.x()+n.x),y:t-(w.y()+n.y),a:0-(w.angle()+n.angle)};return _canvas_.library.math.cartesianAngleAdjust(o.x/n.scale,o.y/n.scale,o.a).y/S.height()}(e,t),r=o+.5*l*(2*o-1);Math.abs(u.start-r)<Math.abs(u.end-r)?F(r,"start"):F(r,"end")})),M.attachCallback("ondblclick",(function(){s&&(p.start<0||p.end<0||v||(F(p.start,"start"),F(p.end,"end"),x.onrelease(u)))})),M.attachCallback("onwheel",(function(e,t,n){if(!s)return;if(v)return;const o=n.wheelDelta/100/(10*_canvas_.core.viewport.scale());F(u.start-o,"start"),F(u.end+o,"end")})),T.attachCallback("onmousedown",(function(e,t,n){if(!s)return;v=!0;const o=u.start,r=O(n),i=a-a*l;_canvas_.system.mouse.mouseInteractionHandler((function(e,t,n){const a=r-O(n),s=_canvas_.core.viewport.scale();!function(e){const t=[e,e+(u.end-u.start)];t[0]<=0?(t[1]=t[1]-t[0],t[0]=0):t[1]>=1&&(t[0]=t[0]-(t[1]-1),t[1]=1),F(t[0],"start"),F(t[1],"end")}(o-a/(s*i)),x.onchange(u)}),(function(e,t,n){x.onrelease(u),v=!1}))}));for(let e=0;e<b.length;e++)A[b[e]].getChildren()[1].attachCallback("onclick",(function(){})),A[b[e]].getChildren()[1].attachCallback("onmousedown",function(e){return function(t,n,o){if(!s)return;v=!0;const r=u[b[e]],i=O(o),c=a-a*l;_canvas_.system.mouse.mouseInteractionHandler((function(t,n,o){const a=i-O(o),s=_canvas_.core.viewport.scale();F(r-a/(s*c),b[e])}),(function(e,t,n){x.onrelease(u),v=!1}))}}(e));return x.onchange=m,x.onrelease=y,F(0,"start"),F(1,"end"),x},t.partLibrary.control.rangeslide=function(e,n){return t.collection.control.rangeslide(e,n.x,n.y,n.width,n.height,n.angle,n.interactable,n.handleHeight,n.spanWidth,n.values,n.resetValues,n.style.handle,n.style.backing,n.style.slot,n.style.invisibleHandle,n.style.span,n.onchange,n.onrelease)},this.button_circle=function(e="button_circle",n,o,r=15,a=0,i=!0,s="",l=!0,c=!0,u=!1,p=!0,d="Arial",h=2.5,_=.1,g=0,f={r:0,g:0,b:0,a:1},m={r:0,g:0,b:0,a:1},y={r:0,g:0,b:0,a:1},v={r:0,g:0,b:0,a:1},b={r:0,g:0,b:0,a:1},x={r:0,g:0,b:0,a:1},w={r:0,g:0,b:0,a:1},k={r:0,g:0,b:0,a:1},C={r:0,g:0,b:0,a:1},S={r:0,g:0,b:0,a:1},T={r:0,g:0,b:0,a:1},A={r:0,g:0,b:0,a:1},M={r:0,g:0,b:0,a:1},F={r:0,g:0,b:0,a:1},O={r:0,g:0,b:0,a:1},P={r:0,g:0,b:0,a:1},R={r:0,g:0,b:0,a:1},L={r:180/255,g:180/255,b:180/255,a:1},I={r:0,g:0,b:0,a:0},U=0,D={r:200/255,g:200/255,b:200/255,a:1},E={r:0,g:0,b:0,a:0},N=0,B={r:230/255,g:230/255,b:230/255,a:1},G={r:0,g:0,b:0,a:0},q=0,W={r:200/255,g:200/255,b:200/255,a:1},z={r:120/255,g:120/255,b:120/255,a:1},V=.75,H={r:230/255,g:230/255,b:230/255,a:1},j={r:120/255,g:120/255,b:120/255,a:1},X=.75,Y={r:220/255,g:220/255,b:220/255,a:1},K={r:0,g:0,b:0,a:0},Z=0,J={r:250/255,g:250/255,b:250/255,a:1},$={r:0,g:0,b:0,a:0},Q=0,ee={r:220/255,g:220/255,b:220/255,a:1},te={r:120/255,g:120/255,b:120/255,a:1},ne=.75,oe={r:250/255,g:250/255,b:250/255,a:1},re={r:120/255,g:120/255,b:120/255,a:1},ae=.75,ie={r:220/255,g:220/255,b:220/255,a:1},se={r:0,g:0,b:0,a:0},le=0,ce={r:240/255,g:240/255,b:240/255,a:1},ue={r:0,g:0,b:0,a:0},pe=0,de={r:220/255,g:220/255,b:220/255,a:1},he={r:120/255,g:120/255,b:120/255,a:1},_e=.75,ge={r:240/255,g:240/255,b:240/255,a:1},fe={r:120/255,g:120/255,b:120/255,a:1},me=.75,ye={r:240/255,g:240/255,b:240/255,a:1},ve={r:0,g:0,b:0,a:0},be=0,xe={r:250/255,g:250/255,b:250/255,a:1},we={r:0,g:0,b:0,a:0},ke=0,Ce={r:240/255,g:240/255,b:240/255,a:1},Se={r:120/255,g:120/255,b:120/255,a:1},Te=.75,Ae={r:250/255,g:250/255,b:250/255,a:1},Me={r:120/255,g:120/255,b:120/255,a:1},Fe=.75,Oe=function(e){},Pe=function(e){},Re=function(e){},Le=function(e){},Ie=function(e){},Ue=function(e){},De=function(e){},Ee=function(e){}){const Ne=t.builder("basic","group",e+"subGroup",{}),Be=t.builder("basic","circleWithOutline","backing",{radius:r,colour:L,thickness:5});Ne.append(Be);const Ge=t.builder("basic","text","centre",{text:s,width:h,height:h,colour:m,font:d,printingMode:{widthCalculation:"absolute",horizontal:"middle",vertical:"middle"},spacing:_,interCharacterSpacing:g});Ne.append(Ge),Ne.cover=t.builder("basic","circle","cover",{radius:r,colour:{r:0,g:0,b:0,a:0}}),Ne.append(Ne.cover);const qe=t.builder("control","button_",e,{x:n,y:o,angle:a,interactable:i,active:l,hoverable:c,selectable:u,pressable:p,onenter:Oe,onleave:Pe,onpress:Re,onpressrelease:Le,ondblpress:Ie,onrelease:Ue,onselect:De,ondeselect:Ee,subject:Ne});return qe.activateGraphicalState=function(e){if(!l)return Ge.colour(f),Be.colour=L,Be.lineColour=I,void Be.thickness(U);const t=[{text_colour:m,colour:D,lineColour:E,lineThickness:N},{text_colour:y,colour:B,lineColour:G,lineThickness:q},{text_colour:v,colour:W,lineColour:z,lineThickness:V},{text_colour:b,colour:H,lineColour:j,lineThickness:X},{text_colour:x,colour:Y,lineColour:K,lineThickness:Z},{text_colour:w,colour:J,lineColour:$,lineThickness:Q},{text_colour:k,colour:ee,lineColour:te,lineThickness:ne},{text_colour:C,colour:oe,lineColour:re,lineThickness:ae},{text_colour:S,colour:ie,lineColour:se,lineThickness:le},{text_colour:T,colour:ce,lineColour:ue,lineThickness:pe},{text_colour:A,colour:de,lineColour:he,lineThickness:_e},{text_colour:M,colour:ge,lineColour:fe,lineThickness:me},{text_colour:F,colour:ye,lineColour:ve,lineThickness:be},{text_colour:O,colour:xe,lineColour:we,lineThickness:ke},{text_colour:P,colour:Ce,lineColour:Se,lineThickness:Te},{text_colour:R,colour:Ae,lineColour:Me,lineThickness:Fe}];!c&&e.hovering&&(e.hovering=!1),!u&&e.selected&&(e.selected=!1);const n=8*e.hovering+4*e.glowing+2*e.selected+1*(p&&e.pressed);Ge.colour(t[n].text_colour),Be.colour(t[n].colour),Be.lineColour(t[n].lineColour),Be.thickness(t[n].lineThickness)},qe.activateGraphicalState({hovering:!1,glowing:!1,selected:!1,pressed:!1}),qe},t.partLibrary.control.button_circle=function(e,n){return t.collection.control.button_circle(e,n.x,n.y,n.r,n.angle,n.interactable,n.text_centre,n.active,n.hoverable,n.selectable,n.pressable,n.style.text_font,n.style.text_size,n.style.text_spacing,n.style.text_interCharacterSpacing,null==n.style.text__off__colour?n.style.text_colour:n.style.text__off__colour,null==n.style.text__up__colour?n.style.text_colour:n.style.text__up__colour,null==n.style.text__press__colour?n.style.text_colour:n.style.text__press__colour,null==n.style.text__select__colour?n.style.text_colour:n.style.text__select__colour,null==n.style.text__select_press__colour?n.style.text_colour:n.style.text__select_press__colour,null==n.style.text__glow__colour?n.style.text_colour:n.style.text__glow__colour,null==n.style.text__glow_press__colour?n.style.text_colour:n.style.text__glow_press__colour,null==n.style.text__glow_select__colour?n.style.text_colour:n.style.text__glow_select__colour,null==n.style.text__glow_select_press__colour?n.style.text_colour:n.style.text__glow_select_press__colour,null==n.style.text__hover__colour?n.style.text_colour:n.style.text__hover__colour,null==n.style.text__hover_press__colour?n.style.text_colour:n.style.text__hover_press__colour,null==n.style.text__hover_select__colour?n.style.text_colour:n.style.text__hover_select__colour,null==n.style.text__hover_select_press__colour?n.style.text_colour:n.style.text__hover_select_press__colour,null==n.style.text__hover_glow__colour?n.style.text_colour:n.style.text__hover_glow__colour,null==n.style.text__hover_glow_press__colour?n.style.text_colour:n.style.text__hover_glow_press__colour,null==n.style.text__hover_glow_select__colour?n.style.text_colour:n.style.text__hover_glow_select__colour,null==n.style.text__hover_glow_select_press__colour?n.style.text_colour:n.style.text__hover_glow_select_press__colour,n.style.background__off__colour,n.style.background__off__lineColour,n.style.background__off__lineThickness,n.style.background__up__colour,n.style.background__up__lineColour,n.style.background__up__lineThickness,n.style.background__press__colour,n.style.background__press__lineColour,n.style.background__press__lineThickness,n.style.background__select__colour,n.style.background__select__lineColour,n.style.background__select__lineThickness,n.style.background__select_press__colour,n.style.background__select_press__lineColour,n.style.background__select_press__lineThickness,n.style.background__glow__colour,n.style.background__glow__lineColour,n.style.background__glow__lineThickness,n.style.background__glow_press__colour,n.style.background__glow_press__lineColour,n.style.background__glow_press__lineThickness,n.style.background__glow_select__colour,n.style.background__glow_select__lineColour,n.style.background__glow_select__lineThickness,n.style.background__glow_select_press__colour,n.style.background__glow_select_press__lineColour,n.style.background__glow_select_press__lineThickness,n.style.background__hover__colour,n.style.background__hover__lineColour,n.style.background__hover__lineThickness,n.style.background__hover_press__colour,n.style.background__hover_press__lineColour,n.style.background__hover_press__lineThickness,n.style.background__hover_select__colour,n.style.background__hover_select__lineColour,n.style.background__hover_select__lineThickness,n.style.background__hover_select_press__colour,n.style.background__hover_select_press__lineColour,n.style.background__hover_select_press__lineThickness,n.style.background__hover_glow__colour,n.style.background__hover_glow__lineColour,n.style.background__hover_glow__lineThickness,n.style.background__hover_glow_press__colour,n.style.background__hover_glow_press__lineColour,n.style.background__hover_glow_press__lineThickness,n.style.background__hover_glow_select__colour,n.style.background__hover_glow_select__lineColour,n.style.background__hover_glow_select__lineThickness,n.style.background__hover_glow_select_press__colour,n.style.background__hover_glow_select_press__lineColour,n.style.background__hover_glow_select_press__lineThickness,n.onenter,n.onleave,n.onpress,n.onpressrelease,n.ondblpress,n.onrelease,n.onselect,n.ondeselect)},this.button_rectangle=function(e="button_rectangle",n,o,r=30,a=20,i=0,s=!0,l="",c="",u="",p=.5,d=.05,h=!0,_=!0,g=!1,f=!0,m="Arial",y=2.5,v=.1,b=0,x={r:0,g:0,b:0,a:1},w={r:0,g:0,b:0,a:1},k={r:0,g:0,b:0,a:1},C={r:0,g:0,b:0,a:1},S={r:0,g:0,b:0,a:1},T={r:0,g:0,b:0,a:1},A={r:0,g:0,b:0,a:1},M={r:0,g:0,b:0,a:1},F={r:0,g:0,b:0,a:1},O={r:0,g:0,b:0,a:1},P={r:0,g:0,b:0,a:1},R={r:0,g:0,b:0,a:1},L={r:0,g:0,b:0,a:1},I={r:0,g:0,b:0,a:1},U={r:0,g:0,b:0,a:1},D={r:0,g:0,b:0,a:1},E={r:0,g:0,b:0,a:1},N={r:180/255,g:180/255,b:180/255,a:1},B={r:0,g:0,b:0,a:0},G=0,q={r:200/255,g:200/255,b:200/255,a:1},W={r:0,g:0,b:0,a:0},z=0,V={r:230/255,g:230/255,b:230/255,a:1},H={r:0,g:0,b:0,a:0},j=0,X={r:200/255,g:200/255,b:200/255,a:1},Y={r:120/255,g:120/255,b:120/255,a:1},K=.75,Z={r:230/255,g:230/255,b:230/255,a:1},J={r:120/255,g:120/255,b:120/255,a:1},$=.75,Q={r:220/255,g:220/255,b:220/255,a:1},ee={r:0,g:0,b:0,a:0},te=0,ne={r:250/255,g:250/255,b:250/255,a:1},oe={r:0,g:0,b:0,a:0},re=0,ae={r:220/255,g:220/255,b:220/255,a:1},ie={r:120/255,g:120/255,b:120/255,a:1},se=.75,le={r:250/255,g:250/255,b:250/255,a:1},ce={r:120/255,g:120/255,b:120/255,a:1},ue=.75,pe={r:220/255,g:220/255,b:220/255,a:1},de={r:0,g:0,b:0,a:0},he=0,_e={r:240/255,g:240/255,b:240/255,a:1},ge={r:0,g:0,b:0,a:0},fe=0,me={r:220/255,g:220/255,b:220/255,a:1},ye={r:120/255,g:120/255,b:120/255,a:1},ve=.75,be={r:240/255,g:240/255,b:240/255,a:1},xe={r:120/255,g:120/255,b:120/255,a:1},we=.75,ke={r:240/255,g:240/255,b:240/255,a:1},Ce={r:0,g:0,b:0,a:0},Se=0,Te={r:250/255,g:250/255,b:250/255,a:1},Ae={r:0,g:0,b:0,a:0},Me=0,Fe={r:240/255,g:240/255,b:240/255,a:1},Oe={r:120/255,g:120/255,b:120/255,a:1},Pe=.75,Re={r:250/255,g:250/255,b:250/255,a:1},Le={r:120/255,g:120/255,b:120/255,a:1},Ie=.75,Ue=function(e){},De=function(e){},Ee=function(e){},Ne=function(e){},Be=function(e){},Ge=function(e){},qe=function(e){},We=function(e){}){const ze=t.builder("basic","group",e+"__subGroup"),Ve=t.builder("basic","rectangleWithOutline","backing",{width:r,height:a,colour:N,thickness:5});ze.append(Ve);const He=t.builder("basic","text","centre",{x:r/2,y:a*p,text:l,width:y,height:y,colour:w,font:m,printingMode:{widthCalculation:"absolute",horizontal:"middle",vertical:"middle"},spacing:v,interCharacterSpacing:b});ze.append(He);const je=t.builder("basic","text","left",{x:r*d,y:a*p,text:c,width:y,height:y,colour:w,font:m,printingMode:{widthCalculation:"absolute",horizontal:"left",vertical:"middle"},spacing:v,interCharacterSpacing:b});ze.append(je);const Xe=t.builder("basic","text","right",{x:r-r*d,y:a*p,text:u,width:y,height:y,colour:w,font:m,printingMode:{widthCalculation:"absolute",horizontal:"right",vertical:"middle"},spacing:v,interCharacterSpacing:b});ze.append(Xe),ze.cover=t.builder("basic","rectangle","cover",{width:r,height:a,colour:{r:0,g:0,b:0,a:0}}),ze.append(ze.cover);const Ye=t.builder("control","button_",e,{x:n,y:o,angle:i,interactable:s,active:h,hoverable:_,selectable:g,pressable:f,onenter:Ue,onleave:De,onpress:Ee,onpressrelease:Ne,ondblpress:Be,onrelease:Ge,onselect:qe,ondeselect:We,subject:ze});return Ye.activateGraphicalState=function(e){if(!h)return He.colour(x),je.colour(x),Xe.colour(x),Ve.colour=N,Ve.lineColour=B,void Ve.thickness(G);const t=[{text_colour:w,colour:q,lineColour:W,lineThickness:z},{text_colour:k,colour:V,lineColour:H,lineThickness:j},{text_colour:C,colour:X,lineColour:Y,lineThickness:K},{text_colour:S,colour:Z,lineColour:J,lineThickness:$},{text_colour:T,colour:Q,lineColour:ee,lineThickness:te},{text_colour:A,colour:ne,lineColour:oe,lineThickness:re},{text_colour:M,colour:ae,lineColour:ie,lineThickness:se},{text_colour:F,colour:le,lineColour:ce,lineThickness:ue},{text_colour:O,colour:pe,lineColour:de,lineThickness:he},{text_colour:P,colour:_e,lineColour:ge,lineThickness:fe},{text_colour:R,colour:me,lineColour:ye,lineThickness:ve},{text_colour:L,colour:be,lineColour:xe,lineThickness:we},{text_colour:I,colour:ke,lineColour:Ce,lineThickness:Se},{text_colour:U,colour:Te,lineColour:Ae,lineThickness:Me},{text_colour:D,colour:Fe,lineColour:Oe,lineThickness:Pe},{text_colour:E,colour:Re,lineColour:Le,lineThickness:Ie}];!_&&e.hovering&&(e.hovering=!1),!g&&e.selected&&(e.selected=!1);const n=8*e.hovering+4*e.glowing+2*e.selected+1*(f&&e.pressed);He.colour(t[n].text_colour),je.colour(t[n].text_colour),Xe.colour(t[n].text_colour),Ve.colour(t[n].colour),Ve.lineColour(t[n].lineColour),Ve.thickness(t[n].lineThickness)},Ye.activateGraphicalState({hovering:!1,glowing:!1,selected:!1,pressed:!1}),Ye},t.partLibrary.control.button_rectangle=function(e,n){return t.collection.control.button_rectangle(e,n.x,n.y,n.width,n.height,n.angle,n.interactable,n.text_centre,n.text_left,n.text_right,n.textVerticalOffsetMux,n.textHorizontalOffsetMux,n.active,n.hoverable,n.selectable,n.pressable,n.style.text_font,n.style.text_size,n.style.text_spacing,n.style.text_interCharacterSpacing,null==n.style.text__off__colour?n.style.text_colour:n.style.text__off__colour,null==n.style.text__up__colour?n.style.text_colour:n.style.text__up__colour,null==n.style.text__press__colour?n.style.text_colour:n.style.text__press__colour,null==n.style.text__select__colour?n.style.text_colour:n.style.text__select__colour,null==n.style.text__select_press__colour?n.style.text_colour:n.style.text__select_press__colour,null==n.style.text__glow__colour?n.style.text_colour:n.style.text__glow__colour,null==n.style.text__glow_press__colour?n.style.text_colour:n.style.text__glow_press__colour,null==n.style.text__glow_select__colour?n.style.text_colour:n.style.text__glow_select__colour,null==n.style.text__glow_select_press__colour?n.style.text_colour:n.style.text__glow_select_press__colour,null==n.style.text__hover__colour?n.style.text_colour:n.style.text__hover__colour,null==n.style.text__hover_press__colour?n.style.text_colour:n.style.text__hover_press__colour,null==n.style.text__hover_select__colour?n.style.text_colour:n.style.text__hover_select__colour,null==n.style.text__hover_select_press__colour?n.style.text_colour:n.style.text__hover_select_press__colour,null==n.style.text__hover_glow__colour?n.style.text_colour:n.style.text__hover_glow__colour,null==n.style.text__hover_glow_press__colour?n.style.text_colour:n.style.text__hover_glow_press__colour,null==n.style.text__hover_glow_select__colour?n.style.text_colour:n.style.text__hover_glow_select__colour,null==n.style.text__hover_glow_select_press__colour?n.style.text_colour:n.style.text__hover_glow_select_press__colour,n.style.background__off__colour,n.style.background__off__lineColour,n.style.background__off__lineThickness,n.style.background__up__colour,n.style.background__up__lineColour,n.style.background__up__lineThickness,n.style.background__press__colour,n.style.background__press__lineColour,n.style.background__press__lineThickness,n.style.background__select__colour,n.style.background__select__lineColour,n.style.background__select__lineThickness,n.style.background__select_press__colour,n.style.background__select_press__lineColour,n.style.background__select_press__lineThickness,n.style.background__glow__colour,n.style.background__glow__lineColour,n.style.background__glow__lineThickness,n.style.background__glow_press__colour,n.style.background__glow_press__lineColour,n.style.background__glow_press__lineThickness,n.style.background__glow_select__colour,n.style.background__glow_select__lineColour,n.style.background__glow_select__lineThickness,n.style.background__glow_select_press__colour,n.style.background__glow_select_press__lineColour,n.style.background__glow_select_press__lineThickness,n.style.background__hover__colour,n.style.background__hover__lineColour,n.style.background__hover__lineThickness,n.style.background__hover_press__colour,n.style.background__hover_press__lineColour,n.style.background__hover_press__lineThickness,n.style.background__hover_select__colour,n.style.background__hover_select__lineColour,n.style.background__hover_select__lineThickness,n.style.background__hover_select_press__colour,n.style.background__hover_select_press__lineColour,n.style.background__hover_select_press__lineThickness,n.style.background__hover_glow__colour,n.style.background__hover_glow__lineColour,n.style.background__hover_glow__lineThickness,n.style.background__hover_glow_press__colour,n.style.background__hover_glow_press__lineColour,n.style.background__hover_glow_press__lineThickness,n.style.background__hover_glow_select__colour,n.style.background__hover_glow_select__lineColour,n.style.background__hover_glow_select__lineThickness,n.style.background__hover_glow_select_press__colour,n.style.background__hover_glow_select_press__lineColour,n.style.background__hover_glow_select_press__lineThickness,n.onenter,n.onleave,n.onpress,n.onpressrelease,n.ondblpress,n.onrelease,n.onselect,n.ondeselect)},this.button_=function(e="",n,o,r=0,a=!0,i=!0,s=!0,l=!1,c=!0,u=function(e){},p=function(e){},d=function(e){},h=function(e){},_=function(e){},g=function(e){},f=function(e){},m=function(e){},y){null==y&&console.warn("button_ : No subject provided");const v=t.builder("basic","group",e,{x:n,y:o,angle:r});return v.append(y),v.state={hovering:!1,glowing:!1,selected:!1,pressed:!1},v.press=function(e){if(i){if(c){if(this.state.pressed)return;this.state.pressed=!0,this.onpress&&this.onpress(this,e)}this.select(!this.state.selected,e),v.activateGraphicalState(v.state)}},v.release=function(e){i&&c&&this.state.pressed&&(this.state.pressed=!1,v.activateGraphicalState(v.state),this.onrelease&&this.onrelease(this,e))},v.active=function(e){if(null==e)return i;i=e,v.activateGraphicalState(v.state)},v.glow=function(e){if(null==e)return this.state.glowing;this.state.glowing=e,v.activateGraphicalState(v.state)},v.select=function(e,t,n=!0){if(i)return null==e?this.state.selected:void(l&&this.state.selected!=e&&(this.state.selected=e,v.activateGraphicalState(v.state),n&&(this.state.selected?this.onselect(this,t):this.ondeselect(this,t))))},v.hoverable=function(e){if(null==e)return s;(s=e)||(v.state.hovering=!1,v.activateGraphicalState(v.state))},v.interactable=function(e){if(null==e)return a;a=e},v.selectable=function(e){if(null==e)return l;l=e},v.forceMouseLeave=function(){v.state.hovering=!1,v.release("forced"),v.activateGraphicalState(v.state),v.onleave&&v.onleave("forced")},y.cover.attachCallback("onmouseenterelement",(e,t,n)=>{s&&(v.state.hovering=!0),v.activateGraphicalState(v.state),v.onenter&&v.onenter(n),1==n.buttons&&y.cover.getCallback("onmousedown")(e,t,n)}),y.cover.attachCallback("onmouseleaveelement",(e,t,n)=>{s&&(v.state.hovering=!1),v.release(n),v.activateGraphicalState(v.state),v.onleave&&v.onleave(n)}),y.cover.attachCallback("onmouseup",(e,t,n)=>{a&&v.release(n)}),y.cover.attachCallback("onmousedown",(e,t,n)=>{a&&v.press(n)}),y.cover.attachCallback("onclick",(e,t,n)=>{a&&v.onpressrelease(n)}),y.cover.attachCallback("ondblclick",(e,t,n)=>{i&&a&&v.ondblpress&&v.ondblpress(n)}),v.onenter=u,v.onleave=p,v.onpress=d,v.onpressrelease=h,v.ondblpress=_,v.onrelease=g,v.onselect=f,v.ondeselect=m,v},t.partLibrary.control.button_=function(e,n){return t.collection.control.button_(e,n.x,n.y,n.angle,n.interactable,n.active,n.hoverable,n.selectable,n.pressable,n.onenter,n.onleave,n.onpress,n.onpressrelease,n.ondblpress,n.onrelease,n.onselect,n.ondeselect,n.subject)},this.button_polygon=function(e="button_polygon",n,o,r=[{x:0,y:5},{x:5,y:0},{x:25,y:0},{x:30,y:5},{x:30,y:25},{x:25,y:30},{x:5,y:30},{x:0,y:25}],a=0,i=!0,s="",l=!0,c=!0,u=!1,p=!0,d="Arial",h=2.5,_=.1,g=0,f={r:0,g:0,b:0,a:1},m={r:0,g:0,b:0,a:1},y={r:0,g:0,b:0,a:1},v={r:0,g:0,b:0,a:1},b={r:0,g:0,b:0,a:1},x={r:0,g:0,b:0,a:1},w={r:0,g:0,b:0,a:1},k={r:0,g:0,b:0,a:1},C={r:0,g:0,b:0,a:1},S={r:0,g:0,b:0,a:1},T={r:0,g:0,b:0,a:1},A={r:0,g:0,b:0,a:1},M={r:0,g:0,b:0,a:1},F={r:0,g:0,b:0,a:1},O={r:0,g:0,b:0,a:1},P={r:0,g:0,b:0,a:1},R={r:0,g:0,b:0,a:1},L={r:180/255,g:180/255,b:180/255,a:1},I={r:0,g:0,b:0,a:0},U=0,D={r:200/255,g:200/255,b:200/255,a:1},E={r:0,g:0,b:0,a:0},N=0,B={r:230/255,g:230/255,b:230/255,a:1},G={r:0,g:0,b:0,a:0},q=0,W={r:200/255,g:200/255,b:200/255,a:1},z={r:120/255,g:120/255,b:120/255,a:1},V=.75,H={r:230/255,g:230/255,b:230/255,a:1},j={r:120/255,g:120/255,b:120/255,a:1},X=.75,Y={r:220/255,g:220/255,b:220/255,a:1},K={r:0,g:0,b:0,a:0},Z=0,J={r:250/255,g:250/255,b:250/255,a:1},$={r:0,g:0,b:0,a:0},Q=0,ee={r:220/255,g:220/255,b:220/255,a:1},te={r:120/255,g:120/255,b:120/255,a:1},ne=.75,oe={r:250/255,g:250/255,b:250/255,a:1},re={r:120/255,g:120/255,b:120/255,a:1},ae=.75,ie={r:220/255,g:220/255,b:220/255,a:1},se={r:0,g:0,b:0,a:0},le=0,ce={r:240/255,g:240/255,b:240/255,a:1},ue={r:0,g:0,b:0,a:0},pe=0,de={r:220/255,g:220/255,b:220/255,a:1},he={r:120/255,g:120/255,b:120/255,a:1},_e=.75,ge={r:240/255,g:240/255,b:240/255,a:1},fe={r:120/255,g:120/255,b:120/255,a:1},me=.75,ye={r:240/255,g:240/255,b:240/255,a:1},ve={r:0,g:0,b:0,a:0},be=0,xe={r:250/255,g:250/255,b:250/255,a:1},we={r:0,g:0,b:0,a:0},ke=0,Ce={r:240/255,g:240/255,b:240/255,a:1},Se={r:120/255,g:120/255,b:120/255,a:1},Te=.75,Ae={r:250/255,g:250/255,b:250/255,a:1},Me={r:120/255,g:120/255,b:120/255,a:1},Fe=.75,Oe=function(e){},Pe=function(e){},Re=function(e){},Le=function(e){},Ie=function(e){},Ue=function(e){},De=function(e){},Ee=function(e){}){const Ne=t.builder("basic","group",e+"subGroup"),Be=t.builder("basic","polygonWithOutline","backing",{pointsAsXYArray:r,colour:L,thickness:5});Ne.append(Be);const Ge=_canvas_.library.math.averagePoint(r),qe=t.builder("basic","text","centre",{x:Ge.x,y:Ge.y,text:s,width:h,height:h,colour:m,font:d,printingMode:{widthCalculation:"absolute",horizontal:"middle",vertical:"middle"},spacing:_,interCharacterSpacing:g});Ne.append(qe),Ne.cover=t.builder("basic","polygon","cover",{pointsAsXYArray:r,colour:{r:0,g:0,b:0,a:0}}),Ne.append(Ne.cover);const We=t.builder("control","button_",e,{x:n,y:o,angle:a,interactable:i,active:l,hoverable:c,selectable:u,pressable:p,onenter:Oe,onleave:Pe,onpress:Re,onpressrelease:Le,ondblpress:Ie,onrelease:Ue,onselect:De,ondeselect:Ee,subject:Ne});return We.activateGraphicalState=function(e){if(!l)return qe.colour(f),Be.colour(L),Be.lineColour(I),void Be.thickness(U);const t=[{text_colour:m,colour:D,lineColour:E,lineThickness:N},{text_colour:y,colour:B,lineColour:G,lineThickness:q},{text_colour:v,colour:W,lineColour:z,lineThickness:V},{text_colour:b,colour:H,lineColour:j,lineThickness:X},{text_colour:x,colour:Y,lineColour:K,lineThickness:Z},{text_colour:w,colour:J,lineColour:$,lineThickness:Q},{text_colour:k,colour:ee,lineColour:te,lineThickness:ne},{text_colour:C,colour:oe,lineColour:re,lineThickness:ae},{text_colour:S,colour:ie,lineColour:se,lineThickness:le},{text_colour:T,colour:ce,lineColour:ue,lineThickness:pe},{text_colour:A,colour:de,lineColour:he,lineThickness:_e},{text_colour:M,colour:ge,lineColour:fe,lineThickness:me},{text_colour:F,colour:ye,lineColour:ve,lineThickness:be},{text_colour:O,colour:xe,lineColour:we,lineThickness:ke},{text_colour:P,colour:Ce,lineColour:Se,lineThickness:Te},{text_colour:R,colour:Ae,lineColour:Me,lineThickness:Fe}];!c&&e.hovering&&(e.hovering=!1),!u&&e.selected&&(e.selected=!1);const n=8*e.hovering+4*e.glowing+2*e.selected+1*(p&&e.pressed);qe.colour(t[n].text_colour),Be.colour(t[n].colour),Be.lineColour(t[n].lineColour),Be.thickness(t[n].lineThickness)},We.activateGraphicalState({hovering:!1,glowing:!1,selected:!1,pressed:!1}),We},t.partLibrary.control.button_polygon=function(e,n){return t.collection.control.button_polygon(e,n.x,n.y,n.points,n.angle,n.interactable,n.text_centre,n.active,n.hoverable,n.selectable,n.pressable,n.style.text_font,n.style.text_size,n.style.text_spacing,n.style.text_interCharacterSpacing,null==n.style.text__off__colour?n.style.text_colour:n.style.text__off__colour,null==n.style.text__up__colour?n.style.text_colour:n.style.text__up__colour,null==n.style.text__press__colour?n.style.text_colour:n.style.text__press__colour,null==n.style.text__select__colour?n.style.text_colour:n.style.text__select__colour,null==n.style.text__select_press__colour?n.style.text_colour:n.style.text__select_press__colour,null==n.style.text__glow__colour?n.style.text_colour:n.style.text__glow__colour,null==n.style.text__glow_press__colour?n.style.text_colour:n.style.text__glow_press__colour,null==n.style.text__glow_select__colour?n.style.text_colour:n.style.text__glow_select__colour,null==n.style.text__glow_select_press__colour?n.style.text_colour:n.style.text__glow_select_press__colour,null==n.style.text__hover__colour?n.style.text_colour:n.style.text__hover__colour,null==n.style.text__hover_press__colour?n.style.text_colour:n.style.text__hover_press__colour,null==n.style.text__hover_select__colour?n.style.text_colour:n.style.text__hover_select__colour,null==n.style.text__hover_select_press__colour?n.style.text_colour:n.style.text__hover_select_press__colour,null==n.style.text__hover_glow__colour?n.style.text_colour:n.style.text__hover_glow__colour,null==n.style.text__hover_glow_press__colour?n.style.text_colour:n.style.text__hover_glow_press__colour,null==n.style.text__hover_glow_select__colour?n.style.text_colour:n.style.text__hover_glow_select__colour,null==n.style.text__hover_glow_select_press__colour?n.style.text_colour:n.style.text__hover_glow_select_press__colour,n.style.background__off__colour,n.style.background__off__lineColour,n.style.background__off__lineThickness,n.style.background__up__colour,n.style.background__up__lineColour,n.style.background__up__lineThickness,n.style.background__press__colour,n.style.background__press__lineColour,n.style.background__press__lineThickness,n.style.background__select__colour,n.style.background__select__lineColour,n.style.background__select__lineThickness,n.style.background__select_press__colour,n.style.background__select_press__lineColour,n.style.background__select_press__lineThickness,n.style.background__glow__colour,n.style.background__glow__lineColour,n.style.background__glow__lineThickness,n.style.background__glow_press__colour,n.style.background__glow_press__lineColour,n.style.background__glow_press__lineThickness,n.style.background__glow_select__colour,n.style.background__glow_select__lineColour,n.style.background__glow_select__lineThickness,n.style.background__glow_select_press__colour,n.style.background__glow_select_press__lineColour,n.style.background__glow_select_press__lineThickness,n.style.background__hover__colour,n.style.background__hover__lineColour,n.style.background__hover__lineThickness,n.style.background__hover_press__colour,n.style.background__hover_press__lineColour,n.style.background__hover_press__lineThickness,n.style.background__hover_select__colour,n.style.background__hover_select__lineColour,n.style.background__hover_select__lineThickness,n.style.background__hover_select_press__colour,n.style.background__hover_select_press__lineColour,n.style.background__hover_select_press__lineThickness,n.style.background__hover_glow__colour,n.style.background__hover_glow__lineColour,n.style.background__hover_glow__lineThickness,n.style.background__hover_glow_press__colour,n.style.background__hover_glow_press__lineColour,n.style.background__hover_glow_press__lineThickness,n.style.background__hover_glow_select__colour,n.style.background__hover_glow_select__lineColour,n.style.background__hover_glow_select__lineThickness,n.style.background__hover_glow_select_press__colour,n.style.background__hover_glow_select_press__lineColour,n.style.background__hover_glow_select_press__lineThickness,n.onenter,n.onleave,n.onpress,n.onpressrelease,n.ondblpress,n.onrelease,n.onselect,n.ondeselect)},this.button_image=function(e="button_image",n,o,r=30,a=20,i=0,s=!0,l=!0,c=!0,u=!1,p=!0,d,h,_,g,f,m,y,v,b,x,w,k,C,S,T,A,M,F=function(e){},O=function(e){},P=function(e){},R=function(e){},L=function(e){},I=function(e){},U=function(e){},D=function(e){}){const E=t.builder("basic","group",e+"subGroup",{}),N=t.builder("basic","image","backing",{width:r,height:a,url:d});E.append(N),E.cover=t.builder("basic","rectangle","cover",{width:r,height:a,colour:{r:0,g:0,b:0,a:0}}),E.append(E.cover);const B=t.builder("control","button_",e,{x:n,y:o,angle:i,interactable:s,active:l,hoverable:c,selectable:u,pressable:p,onenter:F,onleave:O,onpress:P,onpressrelease:R,ondblpress:L,onrelease:I,onselect:U,ondeselect:D,subject:E});return B.activateGraphicalState=function(e){if(!l)return void N.url(d);!c&&e.hovering&&(e.hovering=!1),!u&&e.selected&&(e.selected=!1);const t=[h,_,g,f,m,y,v,b,x,w,k,C,S,T,A,M][8*e.hovering+4*e.glowing+2*e.selected+1*(p&&e.pressed)];null!=t&&N.url(t)},B.activateGraphicalState({hovering:!1,glowing:!1,selected:!1,pressed:!1}),B},t.partLibrary.control.button_image=function(e,n){return t.collection.control.button_image(e,n.x,n.y,n.width,n.height,n.angle,n.interactable,n.active,n.hoverable,n.selectable,n.pressable,n.backingURL__off,n.backingURL__up,n.backingURL__press,n.backingURL__select,n.backingURL__select_press,n.backingURL__glow,n.backingURL__glow_press,n.backingURL__glow_select,n.backingURL__glow_select_press,n.backingURL__hover,n.backingURL__hover_press,n.backingURL__hover_select,n.backingURL__hover_select_press,n.backingURL__hover_glow,n.backingURL__hover_glow_press,n.backingURL__hover_glow_select,n.backingURL__hover_glow_select_press,n.onenter,n.onleave,n.onpress,n.onpressrelease,n.ondblpress,n.onrelease,n.onselect,n.ondeselect)},this.needleOverlay=function(e="needleOverlay",n,o,r=120,a=60,i=0,s=!0,l=!0,c=1/Math.pow(2,9),u=!0,p=!0,d=-1,h=[{r:.94,g:.94,b:.94,a:1},{r:1,g:.9,b:.44,a:1}],_=function(e,t){},g=function(e,t){},f=function(e){}){const m={},y={};let v=0;const b=t.builder("basic","group",e,{x:n,y:o,angle:i}),x=t.builder("basic","rectangle","backing",{width:r,height:a,colour:{r:0,g:0,b:1,a:0}});b.append(x);const w=t.builder("basic","group","controlObjectsGroup");b.append(w);const k=r*c+.005*r,C={},S={};function T(e,n){let o=t.builder("basic","group",e);var i;return o.append(t.builder("basic","rectangle","handle",{width:c*r,height:a,colour:n})),o.append(t.builder("basic","rectangle","invisibleHandle",{x:(r*c-k)/2,width:k,height:a,colour:{r:1,g:0,b:0,a:0}})),o.getChildByName("invisibleHandle").attachCallback("onmouseenterelement",(function(){_canvas_.core.viewport.cursor("col-resize")})),o.getChildByName("invisibleHandle").attachCallback("onmouseleaveelement",(function(){_canvas_.core.viewport.cursor("default")})),o.getChildByName("invisibleHandle").attachCallback("onmousedown",(i=e,function(e,t,n){if(!s)return;y[i]=!0;let o=m[i],a=F(n),l=r-r*c;_canvas_.system.mouse.mouseInteractionHandler((function(e,t,n){let r=a-F(n),s=_canvas_.core.viewport.scale(),c=o-r/(s*l);c=c<0?0:c,c=c>1?1:c,R(i,c)}),(function(e,t,n){let r=a-F(n),s=_canvas_.core.viewport.scale(),c=o-r/(s*l);c=c<0?0:c,c=c>1?1:c,y[i]=!1,R(i,c),null!=b.onrelease&&b.onrelease(i,c)}))})),m[e]=0,y[e]=!1,o}function A(){S.selection_A=T("selection_A",h[1]),S.selection_A.getChildByName("invisibleHandle").attachCallback("onmouseenterelement",(function(){_canvas_.core.viewport.cursor("col-resize")})),S.selection_A.getChildByName("invisibleHandle").attachCallback("onmousemove",(function(){_canvas_.core.viewport.cursor("col-resize")})),S.selection_A.getChildByName("invisibleHandle").attachCallback("onmouseleaveelement",(function(){_canvas_.core.viewport.cursor("default")})),S.selection_A.getChildByName("invisibleHandle").attachCallback("onmousedown",(function(e,t,n){if(!l)return;y.selection_A=!0;const o=m.selection_A,a=F(n),i=r-r*c;function s(e){const t=a-F(e),n=_canvas_.core.viewport.scale();let r=o-t/(n*i);r=r<0?0:r,r=r>1?1:r,L(r,m.selection_B)}_canvas_.system.mouse.mouseInteractionHandler((function(e,t,n){s(n)}),(function(e,t,n){s(n),y.selection_A=!1,null!=b.onrelease&&b.onrelease("selection_A",location)}))})),m.selection_A=void 0}function M(){S.selection_B=T("selection_B",h[1]),S.selection_B.getChildByName("invisibleHandle").attachCallback("onmouseenterelement",(function(){_canvas_.core.viewport.cursor("col-resize")})),S.selection_B.getChildByName("invisibleHandle").attachCallback("onmousemove",(function(){_canvas_.core.viewport.cursor("col-resize")})),S.selection_B.getChildByName("invisibleHandle").attachCallback("onmouseleaveelement",(function(){_canvas_.core.viewport.cursor("default")})),S.selection_B.getChildByName("invisibleHandle").attachCallback("onmousedown",(function(e,t,n){if(!l)return;y.selection_B=!0;const o=m.selection_B,a=F(n),i=r-r*c;function s(e){const t=a-F(e),n=_canvas_.core.viewport.scale();let r=o-t/(n*i);r=r<0?0:r,r=r>1?1:r,L(m.selection_A,r)}_canvas_.system.mouse.mouseInteractionHandler((function(e,t,n){s(n)}),(function(e,t,n){s(n),y.selection_B=!1,null!=b.onrelease&&b.onrelease("selection_B",location)}))})),m.selection_B=void 0}function F(e){return e.x*Math.cos(i)-e.y*Math.sin(i)}function O(e,t){const n=w.getOffset(),o={x:e-(w.x()+n.x),y:t-(w.y()+n.y),a:0-(w.angle()+n.angle)};return _canvas_.library.math.cartesianAngleAdjust(o.x/n.scale,o.y/n.scale,o.a).x/x.width()}function P(e,t,n=h[0]){if(null==C[e]){if(d>0&&v>=d)return-1;C[e]=T(e,n),v++}if(null==t||t<0||t>1)return w.remove(C[e]),delete m[e],delete y[e],C[e]=void 0,void v--;w.contains(C[e])||w.append(C[e]),C[e].x(t*r-r*c*t),m[e]=t}function R(e,t,n=!0){if(u){if(null==t)return m[e];t>1||t<0?P(e):P(e,t),n&&null!=b.onchange&&b.onchange(e,t)}}function L(e,t,n=!0){if(p){if(null==e||null==t)return{A:m.selection_A,B:m.selection_B};w.contains(S.selection_A)||(A(),M(),w.prepend(S.selection_A),w.prepend(S.selection_B)),e>1||e<0||t>1||t<0||0==e&&0==t?(w.remove(S.selection_A),w.remove(S.selection_B),m.selection_A=void 0,m.selection_B=void 0):(S.selection_A.x(e*r-r*c*e),m.selection_A=e,S.selection_B.x(t*r-r*c*t),m.selection_B=t),function(){if(null==m.selection_A||null==m.selection_B||m.selection_A==m.selection_B)return w.contains(S.selection_area)&&w.remove(S.selection_area),b.selectionAreaToggle&&b.selectionAreaToggle(!1),void delete m.selection_area;w.contains(S.selection_area)||(w.prepend(S.selection_area),b.selectionAreaToggle&&b.selectionAreaToggle(!0));const e=m.selection_A<m.selection_B?m.selection_A:m.selection_B,t=m.selection_A<m.selection_B?m.selection_B:m.selection_A,n=e-c*e+c;let o=t-c*t-n;o<0&&(o=0),S.selection_area.x(r*n),S.selection_area.width(r*o)}(),n&&null!=b.onchange&&b.onchange("selection_A",e),n&&null!=b.onchange&&b.onchange("selection_B",t)}}return A(),M(),S.selection_area=t.builder("basic","rectangle","selection_area",{height:a,colour:_canvas_.library.math.blendColours(h[1],{r:0,g:0,b:0,a:0},.5)}),S.selection_area.attachCallback("onmouseenterelement",(function(){_canvas_.core.viewport.cursor("grab")})),S.selection_area.attachCallback("onmousemove",(function(){_canvas_.core.viewport.cursor("grab")})),S.selection_area.attachCallback("onmouseleaveelement",(function(){_canvas_.core.viewport.cursor("default")})),S.selection_area.attachCallback("onmousedown",(function(e,t,n){if(!l)return;_canvas_.core.viewport.cursor("grabbing"),y.selection_area=!0;const o=m.selection_B-m.selection_A,a=m.selection_A,i=m.selection_B,s=F(n),u=r-r*c;_canvas_.system.mouse.mouseInteractionHandler((function(e,t,n){const r=function(e){const t=s-F(e),n=_canvas_.core.viewport.scale();let r={A:a-t/(n*u),B:i-t/(n*u)};return r.A>1?(r.A=1,r.B=1+o):r.A<0&&(r.A=0,r.B=o),r.B>1?(r.B=1,r.A=1-o):r.B<0&&(r.B=0,r.A=-o),r}(n);L(r.A,r.B)}),(function(e,t,n){_canvas_.core.viewport.cursor("grab"),selectionArea_grappled=!1,null!=b.onrelease&&b.onrelease("selection_A",location.A),null!=b.onrelease&&b.onrelease("selection_B",location.B)}))})),x.attachCallback("onmousedown",(function(e,t,n){if(_canvas_.system.keyboard.pressedKeys.shift&&l){const n=O(e,t);return void _canvas_.system.mouse.mouseInteractionHandler((function(e,t,o){let r=O(e,t);r<0?r=0:r>1&&(r=1),b.area(n,r)}))}if(!s)return;const o=O(e,t),r=Object.keys(C).map(e=>m[e]).map(e=>Math.abs(e-o));let a={value:r[0],index:0};for(let e=1;e<r.length;e++)a.value>r[e]&&(a={value:r[e],index:e});R(a.index,o)})),S.selection_A.attachCallback("ondblclick",(function(){s&&(L(-1,-1),_canvas_.core.viewport.cursor("default"))})),S.selection_B.attachCallback("ondblclick",S.selection_A.getCallback("ondblclick")),S.selection_area.attachCallback("ondblclick",S.selection_A.getCallback("ondblclick")),b.interactable=function(e){if(null==e)return s;s=e},b.allowAreaSelection=function(e){if(null==e)return l;l=e},b.select=function(e,t,n=!0){if(null==t)return R(e);y[e]||R(e,t,n)},b.removeAllMarkers=function(){Object.keys(C).forEach(e=>b.select(e,-1))},b.area=function(e,t,n=!0){return L(e,t,n)},b.areaIsActive=function(){return!(null==m.selection_A&&null==m.selection_B)},b.list=function(){const e=Object.assign({},m);return delete e.selection_A,delete e.selection_B,e},b.onchange=_,b.onrelease=g,b.selectionAreaToggle=f,b},t.partLibrary.control.needleOverlay=function(e,n){return t.collection.control.needleOverlay(e,n.x,n.y,n.width,n.height,n.angle,n.interactable,n.allowAreaSelection,n.needleWidth,n.selectNeedle,n.selectionArea,n.concurrentMarkerCountLimit,n.style.needles,n.onchange,n.onrelease,n.selectionAreaToggle)},this.list=function(e="list",n,o,r=0,a=!0,i=[],s=!0,l=!1,c=!0,u=!1,p=!0,d=-1,h=-1,_={r:230/255,g:230/255,b:230/255,a:1},g={r:.7,g:.7,b:.7,a:1},f=10,m=47.5,y=.75,v=2,b="Hello",x="defaultThin",w=2.5,k={widthCalculation:"absolute",horizontal:"left",vertical:"middle"},C=.1,S=0,T={r:.2,g:.2,b:.2,a:1},A={r:.2,g:.2,b:.2,a:1},M={r:.2,g:.2,b:.2,a:1},F={r:1,g:.2,b:.2,a:1},O={r:.2,g:.2,b:.2,a:1},P={r:.2,g:.2,b:.2,a:1},R={r:.2,g:.2,b:.2,a:1},L={r:.2,g:.2,b:.2,a:1},I={r:.2,g:.2,b:.2,a:1},U={r:1,g:.2,b:1,a:1},D={r:.2,g:1,b:1,a:1},E={r:.2,g:1,b:.2,a:1},N={r:.2,g:.2,b:1,a:1},B={r:.2,g:.2,b:.2,a:1},G={r:.2,g:.2,b:.2,a:1},q={r:.2,g:.2,b:.2,a:1},W={r:.2,g:.2,b:.2,a:1},z={r:180/255,g:180/255,b:180/255,a:1},V={r:0,g:0,b:0,a:0},H=0,j={r:200/255,g:200/255,b:200/255,a:1},X={r:0,g:0,b:0,a:0},Y=0,K={r:230/255,g:230/255,b:230/255,a:1},Z={r:0,g:0,b:0,a:0},J=0,$={r:220/255,g:220/255,b:220/255,a:1},Q={r:120/255,g:120/255,b:120/255,a:1},ee=0,te={r:230/255,g:230/255,b:230/255,a:1},ne={r:120/255,g:120/255,b:120/255,a:1},oe=0,re={r:220/255,g:220/255,b:220/255,a:1},ae={r:0,g:0,b:0,a:0},ie=0,se={r:250/255,g:250/255,b:250/255,a:1},le={r:0,g:0,b:0,a:0},ce=0,ue={r:220/255,g:220/255,b:220/255,a:1},pe={r:120/255,g:120/255,b:120/255,a:1},de=0,he={r:250/255,g:250/255,b:250/255,a:1},_e={r:120/255,g:120/255,b:120/255,a:1},ge=0,fe={r:220/255,g:220/255,b:220/255,a:1},me={r:0,g:0,b:0,a:0},ye=0,ve={r:240/255,g:240/255,b:240/255,a:1},be={r:0,g:0,b:0,a:0},xe=0,we={r:220/255,g:220/255,b:220/255,a:1},ke={r:120/255,g:120/255,b:120/255,a:1},Ce=0,Se={r:240/255,g:240/255,b:240/255,a:1},Te={r:120/255,g:120/255,b:120/255,a:1},Ae=0,Me={r:250/255,g:250/255,b:250/255,a:1},Fe={r:0,g:0,b:0,a:0},Oe=0,Pe={r:250/255,g:250/255,b:250/255,a:1},Re={r:0,g:0,b:0,a:0},Le=0,Ie={r:240/255,g:240/255,b:240/255,a:1},Ue={r:120/255,g:120/255,b:120/255,a:1},De=0,Ee={r:250/255,g:250/255,b:250/255,a:1},Ne={r:120/255,g:120/255,b:120/255,a:1},Be=0,Ge=1,qe=.625,We=1.25,ze=.2,Ve=1.25,He=1,je=1.1,Xe=.2,Ye=function(e){},Ke=function(e){},Ze=function(e){},Je=function(e){},$e=function(e){},Qe=function(e){},et=function(e){}){let tt=this,nt=[],ot=0;const rt={position:0,lastNonShiftClicked:0,selectedItems:[]},at={default:{heightLimit:d,widthLimit:h,backgroundColour:_,backgroundMarkingColour:g,height:f,width:m,itemSpacingHeight:y,itemHorizontalPadding:v,text:b,font:x,fontSize:w,printingMode:k,spacing:C,interCharacterSpacing:S,text_colour__off:T,text_colour__up:A,text_colour__press:M,text_colour__select:F,text_colour__select_press:O,text_colour__glow:P,text_colour__glow_press:R,text_colour__glow_select:L,text_colour__glow_select_press:I,text_colour__hover:U,text_colour__hover_press:D,text_colour__hover_select:E,text_colour__hover_select_press:N,text_colour__hover_glow:B,text_colour__hover_glow_press:G,text_colour__hover_glow_select:q,text_colour__hover_glow_select_press:W,item__off__colour:z,item__off__lineColour:V,item__off__lineThickness:H,item__up__colour:j,item__up__lineColour:X,item__up__lineThickness:Y,item__press__colour:K,item__press__lineColour:Z,item__press__lineThickness:J,item__select__colour:$,item__select__lineColour:Q,item__select__lineThickness:ee,item__select_press__colour:te,item__select_press__lineColour:ne,item__select_press__lineThickness:oe,item__glow__colour:re,item__glow__lineColour:ae,item__glow__lineThickness:ie,item__glow_press__colour:se,item__glow_press__lineColour:le,item__glow_press__lineThickness:ce,item__glow_select__colour:ue,item__glow_select__lineColour:pe,item__glow_select__lineThickness:de,item__glow_select_press__colour:he,item__glow_select_press__lineColour:_e,item__glow_select_press__lineThickness:ge,item__hover__colour:fe,item__hover__lineColour:me,item__hover__lineThickness:ye,item__hover_press__colour:ve,item__hover_press__lineColour:be,item__hover_press__lineThickness:xe,item__hover_select__colour:we,item__hover_select__lineColour:ke,item__hover_select__lineThickness:Ce,item__hover_select_press__colour:Se,item__hover_select_press__lineColour:Te,item__hover_select_press__lineThickness:Ae,item__hover_glow__colour:Me,item__hover_glow__lineColour:Fe,item__hover_glow__lineThickness:Oe,item__hover_glow_press__colour:Pe,item__hover_glow_press__lineColour:Re,item__hover_glow_press__lineThickness:Le,item__hover_glow_select__colour:Ie,item__hover_glow_select__lineColour:Ue,item__hover_glow_select__lineThickness:De,item__hover_glow_select_press__colour:Ee,item__hover_glow_select_press__lineColour:Ne,item__hover_glow_select_press__lineThickness:Be},space:{height:qe},text:{},break:{height:We,lineMux:ze},textbreak:{height:Ve,textToLineSpacing:He,textHeightMux:je,lineMux:Xe},checkbox:{},button:{},radio:{arrowMux:Ge},list:{heightLimit:-1,arrowMux:Ge,space_height:qe,break_height:We,break_lineMux:ze,textBreak_height:Ve,textBreak_textToLineSpacing:He,textBreak_textHeightMux:je,textBreak_lineMux:Xe}};function it(){nt=[],ot=0,rt.selectedItems=[],rt.lastNonShiftClicked=0,rt.position=0,results=function(e=[]){function t(e,t){return null==e[t]?null==at[e.type][t]?at.default[t]:at[e.type][t]:e[t]}const n={elements:[],calculatedListHeight:0},o=at.default.widthLimit<0?0:(at.default.widthLimit-at.default.width)/2;return e.forEach((e,r)=>{let a;if(0!=r&&(n.calculatedListHeight+=at.default.itemSpacingHeight),"item"==e.type&&(console.warn('"item" item isn\'t an item type you can use for an item. Switching to "button" which is probably what you were looking for'),e.type="button"),"text"==e.type)a=tt.list.itemTypes.text(r,o,n.calculatedListHeight,t(e,"width"),t(e,"height"),t(e,"itemHorizontalPadding"),null!=e.text?e.text:e.text_left,e.text_centre,e.text_right,t(e,"fontSize"),t(e,"font"),t(e,"text_colour__up"),t(e,"spacing"),t(e,"interCharacterSpacing"),t(e,"item__up__colour"));else if("space"==e.type)a=tt.list.itemTypes.space(r,o,n.calculatedListHeight,t(e,"height"));else if("break"==e.type)a=tt.list.itemTypes.break(r,o,n.calculatedListHeight,t(e,"width"),t(e,"height"),t(e,"backgroundMarkingColour"),t(e,"lineMux"));else if("textbreak"==e.type)a=tt.list.itemTypes.textbreak(r,o,n.calculatedListHeight,t(e,"width"),t(e,"height"),e.text,t(e,"backgroundMarkingColour"),t(e,"printingMode"),t(e,"font"),t(e,"spacing"),t(e,"interCharacterSpacing"),t(e,"textToLineSpacing"),t(e,"textHeightMux"),t(e,"lineMux"));else if("checkbox"==e.type)a=tt.list.itemTypes.checkbox(r,o,n.calculatedListHeight,t(e,"width"),t(e,"height"),t(e,"itemHorizontalPadding"),null!=e.text?e.text:e.text_left,e.text_centre,e.text_right,t(e,"fontSize"),t(e,"font"),t(e,"spacing"),t(e,"interCharacterSpacing"),null!=e.active?e.active:s,null!=e.hoverable?e.hoverable:c,null!=e.selectable?e.selectable:u,null!=e.pressable?e.pressable:p,t(e,"text_colour__off"),t(e,"text_colour__up"),t(e,"text_colour__press"),t(e,"text_colour__select"),t(e,"text_colour__select_press"),t(e,"text_colour__glow"),t(e,"text_colour__glow_press"),t(e,"text_colour__glow_select"),t(e,"text_colour__glow_select_press"),t(e,"text_colour__hover"),t(e,"text_colour__hover_press"),t(e,"text_colour__hover_select"),t(e,"text_colour__hover_select_press"),t(e,"text_colour__hover_glow"),t(e,"text_colour__hover_glow_press"),t(e,"text_colour__hover_glow_select"),t(e,"text_colour__hover_glow_select_press"),t(e,"item__off__colour"),t(e,"item__off__lineColour"),t(e,"item__off__lineThickness"),t(e,"item__up__colour"),t(e,"item__up__lineColour"),t(e,"item__up__lineThickness"),t(e,"item__press__colour"),t(e,"item__press__lineColour"),t(e,"item__press__lineThickness"),t(e,"item__select__colour"),t(e,"item__select__lineColour"),t(e,"item__select__lineThickness"),t(e,"item__select_press__colour"),t(e,"item__select_press__lineColour"),t(e,"item__select_press__lineThickness"),t(e,"item__glow__colour"),t(e,"item__glow__lineColour"),t(e,"item__glow__lineThickness"),t(e,"item__glow_press__colour"),t(e,"item__glow_press__lineColour"),t(e,"item__glow_press__lineThickness"),t(e,"item__glow_select__colour"),t(e,"item__glow_select__lineColour"),t(e,"item__glow_select__lineThickness"),t(e,"item__glow_select_press__colour"),t(e,"item__glow_select_press__lineColour"),t(e,"item__glow_select_press__lineThickness"),t(e,"item__hover__colour"),t(e,"item__hover__lineColour"),t(e,"item__hover__lineThickness"),t(e,"item__hover_press__colour"),t(e,"item__hover_press__lineColour"),t(e,"item__hover_press__lineThickness"),t(e,"item__hover_select__colour"),t(e,"item__hover_select__lineColour"),t(e,"item__hover_select__lineThickness"),t(e,"item__hover_select_press__colour"),t(e,"item__hover_select_press__lineColour"),t(e,"item__hover_select_press__lineThickness"),t(e,"item__hover_glow__colour"),t(e,"item__hover_glow__lineColour"),t(e,"item__hover_glow__lineThickness"),t(e,"item__hover_glow_press__colour"),t(e,"item__hover_glow_press__lineColour"),t(e,"item__hover_glow_press__lineThickness"),t(e,"item__hover_glow_select__colour"),t(e,"item__hover_glow_select__lineColour"),t(e,"item__hover_glow_select__lineThickness"),t(e,"item__hover_glow_select_press__colour"),t(e,"item__hover_glow_select_press__lineColour"),t(e,"item__hover_glow_select_press__lineThickness"),e.updateFunction,e.onclickFunction);else if("button"==e.type)a=tt.list.itemTypes.button(r,o,n.calculatedListHeight,t(e,"width"),t(e,"height"),t(e,"itemHorizontalPadding"),null!=e.text?e.text:e.text_left,e.text_centre,e.text_right,t(e,"fontSize"),t(e,"font"),t(e,"spacing"),t(e,"interCharacterSpacing"),null!=e.active?e.active:s,null!=e.hoverable?e.hoverable:c,null!=e.selectable?e.selectable:u,null!=e.pressable?e.pressable:p,t(e,"text_colour__off"),t(e,"text_colour__up"),t(e,"text_colour__press"),t(e,"text_colour__select"),t(e,"text_colour__select_press"),t(e,"text_colour__glow"),t(e,"text_colour__glow_press"),t(e,"text_colour__glow_select"),t(e,"text_colour__glow_select_press"),t(e,"text_colour__hover"),t(e,"text_colour__hover_press"),t(e,"text_colour__hover_select"),t(e,"text_colour__hover_select_press"),t(e,"text_colour__hover_glow"),t(e,"text_colour__hover_glow_press"),t(e,"text_colour__hover_glow_select"),t(e,"text_colour__hover_glow_select_press"),t(e,"item__off__colour"),t(e,"item__off__lineColour"),t(e,"item__off__lineThickness"),t(e,"item__up__colour"),t(e,"item__up__lineColour"),t(e,"item__up__lineThickness"),t(e,"item__press__colour"),t(e,"item__press__lineColour"),t(e,"item__press__lineThickness"),t(e,"item__select__colour"),t(e,"item__select__lineColour"),t(e,"item__select__lineThickness"),t(e,"item__select_press__colour"),t(e,"item__select_press__lineColour"),t(e,"item__select_press__lineThickness"),t(e,"item__glow__colour"),t(e,"item__glow__lineColour"),t(e,"item__glow__lineThickness"),t(e,"item__glow_press__colour"),t(e,"item__glow_press__lineColour"),t(e,"item__glow_press__lineThickness"),t(e,"item__glow_select__colour"),t(e,"item__glow_select__lineColour"),t(e,"item__glow_select__lineThickness"),t(e,"item__glow_select_press__colour"),t(e,"item__glow_select_press__lineColour"),t(e,"item__glow_select_press__lineThickness"),t(e,"item__hover__colour"),t(e,"item__hover__lineColour"),t(e,"item__hover__lineThickness"),t(e,"item__hover_press__colour"),t(e,"item__hover_press__lineColour"),t(e,"item__hover_press__lineThickness"),t(e,"item__hover_select__colour"),t(e,"item__hover_select__lineColour"),t(e,"item__hover_select__lineThickness"),t(e,"item__hover_select_press__colour"),t(e,"item__hover_select_press__lineColour"),t(e,"item__hover_select_press__lineThickness"),t(e,"item__hover_glow__colour"),t(e,"item__hover_glow__lineColour"),t(e,"item__hover_glow__lineThickness"),t(e,"item__hover_glow_press__colour"),t(e,"item__hover_glow_press__lineColour"),t(e,"item__hover_glow_press__lineThickness"),t(e,"item__hover_glow_select__colour"),t(e,"item__hover_glow_select__lineColour"),t(e,"item__hover_glow_select__lineThickness"),t(e,"item__hover_glow_select_press__colour"),t(e,"item__hover_glow_select_press__lineColour"),t(e,"item__hover_glow_select_press__lineThickness"),(function(){st.onenter([r])}),(function(){st.onleave([r])}),(function(){st.onpress([r])}),(function(){st.ondblpress([r])}),(function(){e.function&&e.function(),st.onrelease([r])}),(function(e,t){st.select(r,!0,t,!1)}),(function(e,t){st.select(r,!1,t,!1)}));else if("radio"==e.type)a=tt.list.itemTypes.radio(ut,r,o,n.calculatedListHeight,(function(e){if(e)return nt.forEach((e,t)=>{"list"!=i[t].type&&"radio"!=i[t].type||t==r||!e.isOpen||e.close()}),-rt.position*(at.default.heightLimit>0&&at.default.heightLimit<ot?ot-at.default.heightLimit:ot)}),t(e,"width"),t(e,"height"),t(e,"itemHorizontalPadding"),null!=e.text?e.text:e.text_left,e.text_centre,e.text_right,t(e,"fontSize"),t(e,"font"),t(e,"spacing"),t(e,"interCharacterSpacing"),t(e,"arrowMux"),null!=e.active?e.active:s,null!=e.hoverable?e.hoverable:c,null!=e.pressable?e.pressable:p,t(e,"text_colour__off"),t(e,"text_colour__up"),t(e,"text_colour__press"),t(e,"text_colour__select"),t(e,"text_colour__select_press"),t(e,"text_colour__glow"),t(e,"text_colour__glow_press"),t(e,"text_colour__glow_select"),t(e,"text_colour__glow_select_press"),t(e,"text_colour__hover"),t(e,"text_colour__hover_press"),t(e,"text_colour__hover_select"),t(e,"text_colour__hover_select_press"),t(e,"text_colour__hover_glow"),t(e,"text_colour__hover_glow_press"),t(e,"text_colour__hover_glow_select"),t(e,"text_colour__hover_glow_select_press"),t(e,"item__off__colour"),t(e,"item__off__lineColour"),t(e,"item__off__lineThickness"),t(e,"item__up__colour"),t(e,"item__up__lineColour"),t(e,"item__up__lineThickness"),t(e,"item__press__colour"),t(e,"item__press__lineColour"),t(e,"item__press__lineThickness"),t(e,"item__select__colour"),t(e,"item__select__lineColour"),t(e,"item__select__lineThickness"),t(e,"item__select_press__colour"),t(e,"item__select_press__lineColour"),t(e,"item__select_press__lineThickness"),t(e,"item__glow__colour"),t(e,"item__glow__lineColour"),t(e,"item__glow__lineThickness"),t(e,"item__glow_press__colour"),t(e,"item__glow_press__lineColour"),t(e,"item__glow_press__lineThickness"),t(e,"item__glow_select__colour"),t(e,"item__glow_select__lineColour"),t(e,"item__glow_select__lineThickness"),t(e,"item__glow_select_press__colour"),t(e,"item__glow_select_press__lineColour"),t(e,"item__glow_select_press__lineThickness"),t(e,"item__hover__colour"),t(e,"item__hover__lineColour"),t(e,"item__hover__lineThickness"),t(e,"item__hover_press__colour"),t(e,"item__hover_press__lineColour"),t(e,"item__hover_press__lineThickness"),t(e,"item__hover_select__colour"),t(e,"item__hover_select__lineColour"),t(e,"item__hover_select__lineThickness"),t(e,"item__hover_select_press__colour"),t(e,"item__hover_select_press__lineColour"),t(e,"item__hover_select_press__lineThickness"),t(e,"item__hover_glow__colour"),t(e,"item__hover_glow__lineColour"),t(e,"item__hover_glow__lineThickness"),t(e,"item__hover_glow_press__colour"),t(e,"item__hover_glow_press__lineColour"),t(e,"item__hover_glow_press__lineThickness"),t(e,"item__hover_glow_select__colour"),t(e,"item__hover_glow_select__lineColour"),t(e,"item__hover_glow_select__lineThickness"),t(e,"item__hover_glow_select_press__colour"),t(e,"item__hover_glow_select_press__lineColour"),t(e,"item__hover_glow_select_press__lineThickness"),e.options,e.itemWidth,t(e,"heightLimit"),t(e,"widthLimit"),t(e,"backgroundColour"),t(e,"backgroundMarkingColour"),t(e,"default_item_spacingHeight"),e.updateFunction,e.onclickFunction);else{if("list"!=e.type)return n.calculatedListHeight-=at.default.itemSpacingHeight,void console.warn('interface part "list" :: error : unknown list item type:',e);a=tt.list.itemTypes.list(ut,r,o,n.calculatedListHeight,(function(e){if(e)return nt.forEach((e,t)=>{"list"!=i[t].type&&"radio"!=i[t].type||t==r||!e.isOpen||e.close()}),-rt.position*(at.default.heightLimit>0&&at.default.heightLimit<ot?ot-at.default.heightLimit:ot)}),t(e,"width"),t(e,"height"),t(e,"itemHorizontalPadding"),null!=e.text?e.text:e.text_left,e.text_centre,e.text_right,t(e,"fontSize"),t(e,"font"),t(e,"spacing"),t(e,"interCharacterSpacing"),t(e,"arrowMux"),null!=e.active?e.active:s,null!=e.hoverable?e.hoverable:c,null!=e.pressable?e.pressable:p,t(e,"text_colour__off"),t(e,"text_colour__up"),t(e,"text_colour__press"),t(e,"text_colour__select"),t(e,"text_colour__select_press"),t(e,"text_colour__glow"),t(e,"text_colour__glow_press"),t(e,"text_colour__glow_select"),t(e,"text_colour__glow_select_press"),t(e,"text_colour__hover"),t(e,"text_colour__hover_press"),t(e,"text_colour__hover_select"),t(e,"text_colour__hover_select_press"),t(e,"text_colour__hover_glow"),t(e,"text_colour__hover_glow_press"),t(e,"text_colour__hover_glow_select"),t(e,"text_colour__hover_glow_select_press"),t(e,"item__off__colour"),t(e,"item__off__lineColour"),t(e,"item__off__lineThickness"),t(e,"item__up__colour"),t(e,"item__up__lineColour"),t(e,"item__up__lineThickness"),t(e,"item__press__colour"),t(e,"item__press__lineColour"),t(e,"item__press__lineThickness"),t(e,"item__select__colour"),t(e,"item__select__lineColour"),t(e,"item__select__lineThickness"),t(e,"item__select_press__colour"),t(e,"item__select_press__lineColour"),t(e,"item__select_press__lineThickness"),t(e,"item__glow__colour"),t(e,"item__glow__lineColour"),t(e,"item__glow__lineThickness"),t(e,"item__glow_press__colour"),t(e,"item__glow_press__lineColour"),t(e,"item__glow_press__lineThickness"),t(e,"item__glow_select__colour"),t(e,"item__glow_select__lineColour"),t(e,"item__glow_select__lineThickness"),t(e,"item__glow_select_press__colour"),t(e,"item__glow_select_press__lineColour"),t(e,"item__glow_select_press__lineThickness"),t(e,"item__hover__colour"),t(e,"item__hover__lineColour"),t(e,"item__hover__lineThickness"),t(e,"item__hover_press__colour"),t(e,"item__hover_press__lineColour"),t(e,"item__hover_press__lineThickness"),t(e,"item__hover_select__colour"),t(e,"item__hover_select__lineColour"),t(e,"item__hover_select__lineThickness"),t(e,"item__hover_select_press__colour"),t(e,"item__hover_select_press__lineColour"),t(e,"item__hover_select_press__lineThickness"),t(e,"item__hover_glow__colour"),t(e,"item__hover_glow__lineColour"),t(e,"item__hover_glow__lineThickness"),t(e,"item__hover_glow_press__colour"),t(e,"item__hover_glow_press__lineColour"),t(e,"item__hover_glow_press__lineThickness"),t(e,"item__hover_glow_select__colour"),t(e,"item__hover_glow_select__lineColour"),t(e,"item__hover_glow_select__lineThickness"),t(e,"item__hover_glow_select_press__colour"),t(e,"item__hover_glow_select_press__lineColour"),t(e,"item__hover_glow_select_press__lineThickness"),e.list,e.interactable,e.itemWidth,t(e,"heightLimit"),t(e,"widthLimit"),t(e,"backgroundColour"),t(e,"backgroundMarkingColour"),t(e,"default_item_spacingHeight"),t(e,"space_height"),t(e,"break_height"),t(e,"break_lineMux"),t(e,"textBreak_height"),t(e,"textBreak_textToLineSpacing"),t(e,"textBreak_textHeightMux"),t(e,"textBreak_lineMux"),e.onenter,e.onleave,e.onpress,e.ondblpress,e.onrelease,e.onselection,e.onpositionchange)}n.elements.push(a.item),n.calculatedListHeight+=a.height}),n}(i),ot=results.calculatedListHeight,nt=results.elements;const e=at.default.widthLimit<0?at.default.width:at.default.widthLimit;lt.width(e),dt.width(e),ht.width(e);const t=at.default.heightLimit<0||at.default.heightLimit>ot?ot:at.default.heightLimit;lt.height(t),dt.height(t),ht.height(t),pt.clear(),results.elements.forEach(e=>pt.append(e))}const st=t.builder("basic","group",e,{x:n,y:o,angle:r}),lt=t.builder("basic","rectangle","backing",{colour:at.default.backgroundColour});st.append(lt);const ct=t.builder("basic","group","stenciledGroup");st.append(ct);const ut=t.builder("basic","group","subListGroup");st.append(ut);const pt=t.builder("basic","group","itemCollection");ct.append(pt);const dt=t.builder("basic","rectangle","cover",{colour:{r:0,g:0,b:0,a:0}});ct.append(dt);const ht=t.builder("basic","rectangle","stencil");return ct.stencil(ht),ct.clipActive(!0),dt.attachCallback("onwheel",(function(e,t,n){if(!a||!s)return;const o=-n.wheelDelta/100;st.position(st.position()+o/10),nt.forEach(e=>{null!=e.forceMouseLeave&&e.forceMouseLeave()})})),st.position=function(e,t=!0){if(null==e)return rt.position;if(e=(e=e<0?0:e)>1?1:e,rt.position=e,at.default.heightLimit<0)return;const n=ot-at.default.heightLimit;pt.y(-e*n),t&&this.onpositionchange&&this.onpositionchange(e)},st.select=function(e,t,n,o=!0){if(u){if(l)if(null!=n&&n.shiftKey){e=pt.getChildIndexByName(e);let t=Math.min(rt.lastNonShiftClicked,e),n=Math.max(rt.lastNonShiftClicked,e);for(let e=0;e<nt.length;e++)nt[e].name==""+t&&(t=e),nt[e].name==""+n&&(n=e);rt.selectedItems=[];for(let e=0;e<nt.length;e++)(e>n||e<t)&&null!=nt[e].select&&nt[e].select()&&nt[e].select(!1,void 0,!1);for(let e=t;e<=n;e++)null==nt[e].select||nt[e].select()||(nt[e].select(!0,void 0,!1),rt.selectedItems.push(e))}else o&&nt[e].select(t),t&&!rt.selectedItems.includes(e)?rt.selectedItems.push(e):!t&&rt.selectedItems.includes(e)&&rt.selectedItems.splice(rt.selectedItems.indexOf(e),1),rt.lastNonShiftClicked=pt.getChildIndexByName(e);else{if(t&&!rt.selectedItems.includes(e)){for(;rt.selectedItems.length>0;)pt.getChildren()[rt.selectedItems[0]].select(!1,void 0,void 0),rt.selectedItems.shift();rt.selectedItems.push(e)}else!t&&rt.selectedItems.includes(e)&&(rt.selectedItems=[]);o&&pt.getChildByName(e).select(!0,void 0,!1)}st.onselection(rt.selectedItems)}},st.add=function(e){i.push(e),it()},st.getList=function(){return nt},st.remove=function(e){i.splice(e,1),it()},st.interactable=function(e){if(null==e)return a;a=e,it()},st.heightLimit=function(e){if(null==e)return at.default.heightLimit;at.default.heightLimit=e,it()},st.closeAllLists=function(){i.forEach((e,t)=>{"list"==e.type&&nt[t].close()})},st.getCalculatedListHeight=function(){return ot},st.onenter=Ye,st.onleave=Ke,st.onpress=Ze,st.ondblpress=Je,st.onrelease=$e,st.onselection=Qe,st.onpositionchange=et,it(),st},this.list.itemTypes={},this.list.itemTypes.space=function(e,n,o,r){return{item:t.builder("basic","group",e+"_space",{x:n,y:o}),height:r}},this.list.itemTypes.break=function(e,n,o,r,a,i,s){const l=t.builder("basic","group",e+"_break",{x:n,y:o}),c=t.builder("basic","rectangle","rectangle",{y:(a-a*s)/2,width:r,height:a*s,colour:i});return l.append(c),{item:l,height:a}},this.list.itemTypes.textbreak=function(e,n,o,r,a,i,s,l,c,u,p,d,h,_){const g=t.builder("basic","group",e+"_textbreak",{x:n,y:o}),f=t.builder("basic","rectangle","rectangle",{y:(a-a*_)/2,width:r,height:a*_,colour:s});g.append(f);const m=t.builder("basic","text","text",{y:a/2,width:a*h,height:a*h,printingMode:l,text:i,font:c,colour:s,spacing:u,interCharacterSpacing:p});return m.attachCallback("onFontUpdateCallback",(function(){f.x(m.resultingWidth()+d),f.width(r-m.resultingWidth()-d)})),g.append(m),{item:g,height:a}},this.list.itemTypes.text=function(e,n,o,r,a,i,s,l,c,u,p,d,h,_,g){const f=t.builder("basic","group",e+"_text",{x:n,y:o}),m=t.builder("basic","rectangle","backing",{width:r,height:a,colour:g});if(f.append(m),null!=s){const e=t.builder("basic","text","text_left",{x:i,y:a/2,width:u,height:u,printingMode:{widthCalculation:"absolute",horizontal:"left",vertical:"middle"},text:s,font:p,colour:d,spacing:h,interCharacterSpacing:_});f.append(e)}if(null!=l){const e=t.builder("basic","text","text_centre",{x:r/2,y:a/2,width:u,height:u,printingMode:{widthCalculation:"absolute",horizontal:"middle",vertical:"middle"},text:l,font:p,colour:d,spacing:h,interCharacterSpacing:_});f.append(e)}if(null!=c){const e=t.builder("basic","text","text_right",{x:r-i,y:a/2,width:u,height:u,printingMode:{widthCalculation:"absolute",horizontal:"right",vertical:"middle"},text:c,font:p,colour:d,spacing:h,interCharacterSpacing:_});f.append(e)}return{item:f,height:a}},this.list.itemTypes.checkbox=function(e,n,o,r,a,i,s,l,c,u,p,d,h,_,g,f,m,y,v,b,x,w,k,C,S,T,A,M,F,O,P,R,L,I,U,D,E,N,B,G,q,W,z,V,H,j,X,Y,K,Z,J,$,Q,ee,te,ne,oe,re,ae,ie,se,le,ce,ue,pe,de,he,_e,ge,fe,me,ye,ve,be,xe,we,ke,Ce,Se,Te,Ae,Me,Fe,Oe,Pe,Re,Le){const Ie=t.builder("basic","group",e+"_checkbox",{x:n,y:o});Ie.state=!1;const Ue=t.builder("control","button_rectangle","button",{width:r,height:a,text_left:s,text_centre:l,text_right:c,textVerticalOffsetMux:.5,textHorizontalOffsetMux:i/r,active:_,hoverable:g,selectable:f,pressable:m,style:{text_font:p,text_size:u,text_spacing:d,text_interCharacterSpacing:h,text__off__colour:y,text__up__colour:v,text__press__colour:b,text__select__colour:x,text__select_press__colour:w,text__glow__colour:k,text__glow_press__colour:C,text__glow_select__colour:S,text__glow_select_press__colour:T,text__hover__colour:A,text__hover_press__colour:M,text__hover_select__colour:F,text__hover_select_press__colour:O,text__hover_glow__colour:P,text__hover_glow_press__colour:R,text__hover_glow_select__colour:L,text__hover_glow_select_press__colour:I,background__off__colour:U,background__off__lineColour:D,background__off__lineThickness:E,background__up__colour:N,background__up__lineColour:B,background__up__lineThickness:G,background__press__colour:q,background__press__lineColour:W,background__press__lineThickness:z,background__select__colour:V,background__select__lineColour:H,background__select__lineThickness:j,background__select_press__colour:X,background__select_press__lineColour:Y,background__select_press__lineThickness:K,background__glow__colour:Z,background__glow__lineColour:J,background__glow__lineThickness:$,background__glow_press__colour:Q,background__glow_press__lineColour:ee,background__glow_press__lineThickness:te,background__glow_select__colour:ne,background__glow_select__lineColour:oe,background__glow_select__lineThickness:re,background__glow_select_press__colour:ae,background__glow_select_press__lineColour:ie,background__glow_select_press__lineThickness:se,background__hover__colour:le,background__hover__lineColour:ce,background__hover__lineThickness:ue,background__hover_press__colour:pe,background__hover_press__lineColour:de,background__hover_press__lineThickness:he,background__hover_select__colour:_e,background__hover_select__lineColour:ge,background__hover_select__lineThickness:fe,background__hover_select_press__colour:me,background__hover_select_press__lineColour:ye,background__hover_select_press__lineThickness:ve,background__hover_glow__colour:be,background__hover_glow__lineColour:xe,background__hover_glow__lineThickness:we,background__hover_glow_press__colour:ke,background__hover_glow_press__lineColour:Ce,background__hover_glow_press__lineThickness:Se,background__hover_glow_select__colour:Te,background__hover_glow_select__lineColour:Ae,background__hover_glow_select__lineThickness:Me,background__hover_glow_select_press__colour:Fe,background__hover_glow_select_press__lineColour:Oe,background__hover_glow_select_press__lineThickness:Pe}});Ie.append(Ue);const De=t.builder("basic","circle","tick",{x:r-a/2,y:a/2,radius:a/4,colour:{r:0,g:0,b:0,a:0}});Ie.append(De);const Ee={hovering:!1,glowing:!1,selected:!1,pressed:!1};function Ne(){if(!Ie.state)return void De.colour({r:0,g:0,b:0,a:0});if(!_)return void De.colour(y);const e=[v,b,x,w,k,C,S,T,A,M,F,O,P,R,L,I];!g&&Ee.hovering&&(Ee.hovering=!1),!f&&Ee.selected&&(Ee.selected=!1);const t=8*Ee.hovering+4*Ee.glowing+2*Ee.selected+1*(m&&Ee.pressed);De.colour(e[t])}if(Ne(),Ue.onenter=function(){Ee.hovering=!0,Ne()},Ue.onleave=function(){Ee.hovering=!1,Ne()},Ue.onpress=function(){Ee.pressed=!0,Ne()},Ue.onrelease=function(){Ee.pressed=!1,Ne()},Ue.onselect=function(){Ee.selected=!0,Ne()},Ue.ondeselect=function(){Ee.selected=!1,Ne()},Ie.set=function(e){Ie.state=e,Ne()},Ue.onpressrelease=function(){Ie.set(!Ie.state),Le&&Le(Ie.state)},null!=Re)try{Ie.set(Re())}catch(t){console.warn('control::list:"'+name+'":error : "updateFunction" returns error for '+e+"_checkbox"),console.warn(t)}return{item:Ie,height:a}},this.list.itemTypes.button=function(e,n,o,r,a,i,s,l,c,u,p,d,h,_,g,f,m,y,v,b,x,w,k,C,S,T,A,M,F,O,P,R,L,I,U,D,E,N,B,G,q,W,z,V,H,j,X,Y,K,Z,J,$,Q,ee,te,ne,oe,re,ae,ie,se,le,ce,ue,pe,de,he,_e,ge,fe,me,ye,ve,be,xe,we,ke,Ce,Se,Te,Ae,Me,Fe,Oe,Pe,Re,Le,Ie,Ue,De,Ee,Ne){return{item:t.builder("control","button_rectangle",e+"_button",{x:n,y:o,width:r,height:a,text_left:s,text_centre:l,text_right:c,textVerticalOffsetMux:.5,textHorizontalOffsetMux:i/r,active:_,hoverable:g,selectable:f,pressable:m,style:{text_font:p,text_size:u,text_spacing:d,text_interCharacterSpacing:h,text__off__colour:y,text__up__colour:v,text__press__colour:b,text__select__colour:x,text__select_press__colour:w,text__glow__colour:k,text__glow_press__colour:C,text__glow_select__colour:S,text__glow_select_press__colour:T,text__hover__colour:A,text__hover_press__colour:M,text__hover_select__colour:F,text__hover_select_press__colour:O,text__hover_glow__colour:P,text__hover_glow_press__colour:R,text__hover_glow_select__colour:L,text__hover_glow_select_press__colour:I,background__off__colour:U,background__off__lineColour:D,background__off__lineThickness:E,background__up__colour:N,background__up__lineColour:B,background__up__lineThickness:G,background__press__colour:q,background__press__lineColour:W,background__press__lineThickness:z,background__select__colour:V,background__select__lineColour:H,background__select__lineThickness:j,background__select_press__colour:X,background__select_press__lineColour:Y,background__select_press__lineThickness:K,background__glow__colour:Z,background__glow__lineColour:J,background__glow__lineThickness:$,background__glow_press__colour:Q,background__glow_press__lineColour:ee,background__glow_press__lineThickness:te,background__glow_select__colour:ne,background__glow_select__lineColour:oe,background__glow_select__lineThickness:re,background__glow_select_press__colour:ae,background__glow_select_press__lineColour:ie,background__glow_select_press__lineThickness:se,background__hover__colour:le,background__hover__lineColour:ce,background__hover__lineThickness:ue,background__hover_press__colour:pe,background__hover_press__lineColour:de,background__hover_press__lineThickness:he,background__hover_select__colour:_e,background__hover_select__lineColour:ge,background__hover_select__lineThickness:fe,background__hover_select_press__colour:me,background__hover_select_press__lineColour:ye,background__hover_select_press__lineThickness:ve,background__hover_glow__colour:be,background__hover_glow__lineColour:xe,background__hover_glow__lineThickness:we,background__hover_glow_press__colour:ke,background__hover_glow_press__lineColour:Ce,background__hover_glow_press__lineThickness:Se,background__hover_glow_select__colour:Te,background__hover_glow_select__lineColour:Ae,background__hover_glow_select__lineThickness:Me,background__hover_glow_select_press__colour:Fe,background__hover_glow_select_press__lineColour:Oe,background__hover_glow_select_press__lineThickness:Pe},onenter:Re,onleave:Le,onpress:Ie,ondblpress:Ue,onrelease:De,onselect:Ee,ondeselect:Ne}),height:a}},this.list.itemTypes.radio=function(e,n,o,r,a,i,s,l,c,u,p,d,h,_,g,f,m,y,v,b,x,w,k,C,S,T,A,M,F,O,P,R,L,I,U,D,E,N,B,G,q,W,z,V,H,j,X,Y,K,Z,J,$,Q,ee,te,ne,oe,re,ae,ie,se,le,ce,ue,pe,de,he,_e,ge,fe,me,ye,ve,be,xe,we,ke,Ce,Se,Te,Ae,Me,Fe,Oe,Pe,Re,Le,Ie,Ue,De,Ee,Ne,Be,Ge,qe,We){const ze=t.builder("basic","group",n+"_list",{x:o,y:r}),Ve=t.builder("control","button_rectangle","button",{width:i,height:s,text_left:c,text_centre:u,text_right:p,textVerticalOffsetMux:.5,textHorizontalOffsetMux:l/i,active:m,hoverable:y,selectable:!0,pressable:v,style:{text_font:h,text_size:d,text_spacing:_,text_interCharacterSpacing:g,text__off__colour:b,text__up__colour:x,text__press__colour:w,text__select__colour:k,text__select_press__colour:C,text__glow__colour:S,text__glow_press__colour:T,text__glow_select__colour:A,text__glow_select_press__colour:M,text__hover__colour:F,text__hover_press__colour:O,text__hover_select__colour:P,text__hover_select_press__colour:R,text__hover_glow__colour:L,text__hover_glow_press__colour:I,text__hover_glow_select__colour:U,text__hover_glow_select_press__colour:D,background__off__colour:E,background__off__lineColour:N,background__off__lineThickness:B,background__up__colour:G,background__up__lineColour:q,background__up__lineThickness:W,background__press__colour:z,background__press__lineColour:V,background__press__lineThickness:H,background__select__colour:j,background__select__lineColour:X,background__select__lineThickness:Y,background__select_press__colour:K,background__select_press__lineColour:Z,background__select_press__lineThickness:J,background__glow__colour:$,background__glow__lineColour:Q,background__glow__lineThickness:ee,background__glow_press__colour:te,background__glow_press__lineColour:ne,background__glow_press__lineThickness:oe,background__glow_select__colour:re,background__glow_select__lineColour:ae,background__glow_select__lineThickness:ie,background__glow_select_press__colour:se,background__glow_select_press__lineColour:le,background__glow_select_press__lineThickness:ce,background__hover__colour:ue,background__hover__lineColour:pe,background__hover__lineThickness:de,background__hover_press__colour:he,background__hover_press__lineColour:_e,background__hover_press__lineThickness:ge,background__hover_select__colour:fe,background__hover_select__lineColour:me,background__hover_select__lineThickness:ye,background__hover_select_press__colour:ve,background__hover_select_press__lineColour:be,background__hover_select_press__lineThickness:xe,background__hover_glow__colour:we,background__hover_glow__lineColour:ke,background__hover_glow__lineThickness:Ce,background__hover_glow_press__colour:Se,background__hover_glow_press__lineColour:Te,background__hover_glow_press__lineThickness:Ae,background__hover_glow_select__colour:Me,background__hover_glow_select__lineColour:Fe,background__hover_glow_select__lineThickness:Oe,background__hover_glow_select_press__colour:Pe,background__hover_glow_select_press__lineColour:Re,background__hover_glow_select_press__lineThickness:Le}});ze.append(Ve);const He=t.builder("basic","polygon","arrow",{pointsAsXYArray:[{x:i-d*f-l,y:(s-d*f)/2},{x:i-d*f-l,y:(s+d*f)/2},{x:i-l,y:s/2}],colour:x});ze.append(He);const je={hovering:!1,glowing:!1,selected:!1,pressed:!1};function Xe(){if(!m)return void He.colour(b);const e=[x,w,k,C,S,T,A,M,F,O,P,R,L,I,U,D];!y&&je.hovering&&(je.hovering=!1);const t=8*je.hovering+4*je.glowing+2*je.selected+1*(v&&je.pressed);He.colour(e[t])}let Ye;return Xe(),Ve.onenter=function(){je.hovering=!0,Xe()},Ve.onleave=function(){je.hovering=!1,Xe()},Ve.onpress=function(){je.pressed=!0,Xe()},Ve.onrelease=function(){je.pressed=!1,Xe()},ze.open=function(n){if(this.isOpen)return;this.isOpen=!0,Ve.select(!0);const a=Ie.map((e,t)=>({type:"checkbox",text:e,onclickFunction:function(e){var n;e||Ye.getChildByName("stenciledGroup").getChildByName("itemCollection").getChildren()[t].set(!0),n=t,Ye.getChildByName("stenciledGroup").getChildByName("itemCollection").getChildren().forEach((e,t)=>{n!=t&&e.set(!1)}),We&&We(n)}}));Ye=t.builder("control","list","list",{x:o+i,y:r+n,list:a,heightLimit:De,widthLimit:Ee,backgroundColour:Ne,backgroundMarkingColour:Be,default_item_height:s,default_item_width:null!=Ue?Ue:i,default_item_spacingHeight:Ge,default_item_horizontalPadding:l,default_text__text:c,default_text__font:h,default_text__fontSize:d,default_text__printingMode:void 0,default_text__spacing:_,default_text__interCharacterSpacing:g,default_text_colour__off:b,default_text_colour__up:x,default_text_colour__press:w,default_text_colour__select:k,default_text_colour__select_press:C,default_text_colour__glow:S,default_text_colour__glow_press:T,default_text_colour__glow_select:A,default_text_colour__glow_select_press:M,default_text_colour__hover:F,default_text_colour__hover_press:O,default_text_colour__hover_select:P,default_text_colour__hover_select_press:R,default_text_colour__hover_glow:L,default_text_colour__hover_glow_press:I,default_text_colour__hover_glow_select:U,default_text_colour__hover_glow_select_press:D,default_item__off__colour:E,default_item__off__lineColour:N,default_item__off__lineThickness:B,default_item__up__colour:G,default_item__up__lineColour:q,default_item__up__lineThickness:W,default_item__press__colour:z,default_item__press__lineColour:V,default_item__press__lineThickness:H,default_item__select__colour:j,default_item__select__lineColour:X,default_item__select__lineThickness:Y,default_item__select_press__colour:K,default_item__select_press__lineColour:Z,default_item__select_press__lineThickness:J,default_item__glow__colour:$,default_item__glow__lineColour:Q,default_item__glow__lineThickness:ee,default_item__glow_press__colour:te,default_item__glow_press__lineColour:ne,default_item__glow_press__lineThickness:oe,default_item__glow_select__colour:re,default_item__glow_select__lineColour:ae,default_item__glow_select__lineThickness:ie,default_item__glow_select_press__colour:se,default_item__glow_select_press__lineColour:le,default_item__glow_select_press__lineThickness:ce,default_item__hover__colour:ue,default_item__hover__lineColour:pe,default_item__hover__lineThickness:de,default_item__hover_press__colour:he,default_item__hover_press__lineColour:_e,default_item__hover_press__lineThickness:ge,default_item__hover_select__colour:fe,default_item__hover_select__lineColour:me,default_item__hover_select__lineThickness:ye,default_item__hover_select_press__colour:ve,default_item__hover_select_press__lineColour:be,default_item__hover_select_press__lineThickness:xe,default_item__hover_glow__colour:we,default_item__hover_glow__lineColour:ke,default_item__hover_glow__lineThickness:Ce,default_item__hover_glow_press__colour:Se,default_item__hover_glow_press__lineColour:Te,default_item__hover_glow_press__lineThickness:Ae,default_item__hover_glow_select__colour:Me,default_item__hover_glow_select__lineColour:Fe,default_item__hover_glow_select__lineThickness:Oe,default_item__hover_glow_select_press__colour:Pe,default_item__hover_glow_select_press__lineColour:Re,default_item__hover_glow_select_press__lineThickness:Le}),e.append(Ye),qe?Ye.getChildByName("stenciledGroup").getChildByName("itemCollection").getChildren()[qe()].set(!0):Ye.getChildByName("stenciledGroup").getChildByName("itemCollection").getChildren()[0].set(!0)},ze.close=function(){this.isOpen&&(this.isOpen=!1,Ve.select(!1),e.remove(Ye))},Ve.onselect=function(){const e=a(!0);ze.open(e),je.selected=!0,Xe()},Ve.ondeselect=function(){a(!1),ze.close(),je.selected=!1,Xe()},{item:ze,height:s}},this.list.itemTypes.list=function(e,n,o,r,a,i,s,l,c,u,p,d,h,_,g,f,m,y,v,b,x,w,k,C,S,T,A,M,F,O,P,R,L,I,U,D,E,N,B,G,q,W,z,V,H,j,X,Y,K,Z,J,$,Q,ee,te,ne,oe,re,ae,ie,se,le,ce,ue,pe,de,he,_e,ge,fe,me,ye,ve,be,xe,we,ke,Ce,Se,Te,Ae,Me,Fe,Oe,Pe,Re,Le,Ie,Ue,De,Ee,Ne,Be,Ge,qe,We,ze,Ve,He,je,Xe,Ye,Ke,Ze,Je,$e,Qe,et,tt){const nt=t.builder("basic","group",n+"_list",{x:o,y:r}),ot=t.builder("control","button_rectangle","button",{width:i,height:s,text_left:c,text_centre:u,text_right:p,textVerticalOffsetMux:.5,textHorizontalOffsetMux:l/i,active:m,hoverable:y,selectable:!0,pressable:v,style:{text_font:h,text_size:d,text_spacing:_,text_interCharacterSpacing:g,text__off__colour:b,text__up__colour:x,text__press__colour:w,text__select__colour:k,text__select_press__colour:C,text__glow__colour:S,text__glow_press__colour:T,text__glow_select__colour:A,text__glow_select_press__colour:M,text__hover__colour:F,text__hover_press__colour:O,text__hover_select__colour:P,text__hover_select_press__colour:R,text__hover_glow__colour:L,text__hover_glow_press__colour:I,text__hover_glow_select__colour:U,text__hover_glow_select_press__colour:D,background__off__colour:E,background__off__lineColour:N,background__off__lineThickness:B,background__up__colour:G,background__up__lineColour:q,background__up__lineThickness:W,background__press__colour:z,background__press__lineColour:V,background__press__lineThickness:H,background__select__colour:j,background__select__lineColour:X,background__select__lineThickness:Y,background__select_press__colour:K,background__select_press__lineColour:Z,background__select_press__lineThickness:J,background__glow__colour:$,background__glow__lineColour:Q,background__glow__lineThickness:ee,background__glow_press__colour:te,background__glow_press__lineColour:ne,background__glow_press__lineThickness:oe,background__glow_select__colour:re,background__glow_select__lineColour:ae,background__glow_select__lineThickness:ie,background__glow_select_press__colour:se,background__glow_select_press__lineColour:le,background__glow_select_press__lineThickness:ce,background__hover__colour:ue,background__hover__lineColour:pe,background__hover__lineThickness:de,background__hover_press__colour:he,background__hover_press__lineColour:_e,background__hover_press__lineThickness:ge,background__hover_select__colour:fe,background__hover_select__lineColour:me,background__hover_select__lineThickness:ye,background__hover_select_press__colour:ve,background__hover_select_press__lineColour:be,background__hover_select_press__lineThickness:xe,background__hover_glow__colour:we,background__hover_glow__lineColour:ke,background__hover_glow__lineThickness:Ce,background__hover_glow_press__colour:Se,background__hover_glow_press__lineColour:Te,background__hover_glow_press__lineThickness:Ae,background__hover_glow_select__colour:Me,background__hover_glow_select__lineColour:Fe,background__hover_glow_select__lineThickness:Oe,background__hover_glow_select_press__colour:Pe,background__hover_glow_select_press__lineColour:Re,background__hover_glow_select_press__lineThickness:Le}});nt.append(ot);const rt=t.builder("basic","polygon","arrow",{pointsAsXYArray:[{x:i-d*f-l,y:(s-d*f)/2},{x:i-d*f-l,y:(s+d*f)/2},{x:i-l,y:s/2}],colour:x});nt.append(rt);const at={hovering:!1,glowing:!1,selected:!1,pressed:!1};function it(){if(!m)return void rt.colour(b);const e=[x,w,k,C,S,T,A,M,F,O,P,R,L,I,U,D];!y&&at.hovering&&(at.hovering=!1);const t=8*at.hovering+4*at.glowing+2*at.selected+1*(v&&at.pressed);rt.colour(e[t])}let st;return it(),ot.onenter=function(){at.hovering=!0,it()},ot.onleave=function(){at.hovering=!1,it()},ot.onpress=function(){at.pressed=!0,it()},ot.onrelease=function(){at.pressed=!1,it()},nt.open=function(n){this.isOpen||(this.isOpen=!0,ot.select(!0),st=t.builder("control","list","list",{x:o+i,y:r+n,interactable:Ue,list:Ie,heightLimit:Ee,widthLimit:Ne,backgroundColour:Be,backgroundMarkingColour:Ge,default_item_height:s,default_item_width:null!=De?De:i,default_item_spacingHeight:qe,default_item_horizontalPadding:l,default_text__text:c,default_text__font:h,default_text__fontSize:d,default_text__printingMode:void 0,default_text__spacing:_,default_text__interCharacterSpacing:g,default_text_colour__off:b,default_text_colour__up:x,default_text_colour__press:w,default_text_colour__select:k,default_text_colour__select_press:C,default_text_colour__glow:S,default_text_colour__glow_press:T,default_text_colour__glow_select:A,default_text_colour__glow_select_press:M,default_text_colour__hover:F,default_text_colour__hover_press:O,default_text_colour__hover_select:P,default_text_colour__hover_select_press:R,default_text_colour__hover_glow:L,default_text_colour__hover_glow_press:I,default_text_colour__hover_glow_select:U,default_text_colour__hover_glow_select_press:D,default_item__off__colour:E,default_item__off__lineColour:N,default_item__off__lineThickness:B,default_item__up__colour:G,default_item__up__lineColour:q,default_item__up__lineThickness:W,default_item__press__colour:z,default_item__press__lineColour:V,default_item__press__lineThickness:H,default_item__select__colour:j,default_item__select__lineColour:X,default_item__select__lineThickness:Y,default_item__select_press__colour:K,default_item__select_press__lineColour:Z,default_item__select_press__lineThickness:J,default_item__glow__colour:$,default_item__glow__lineColour:Q,default_item__glow__lineThickness:ee,default_item__glow_press__colour:te,default_item__glow_press__lineColour:ne,default_item__glow_press__lineThickness:oe,default_item__glow_select__colour:re,default_item__glow_select__lineColour:ae,default_item__glow_select__lineThickness:ie,default_item__glow_select_press__colour:se,default_item__glow_select_press__lineColour:le,default_item__glow_select_press__lineThickness:ce,default_item__hover__colour:ue,default_item__hover__lineColour:pe,default_item__hover__lineThickness:de,default_item__hover_press__colour:he,default_item__hover_press__lineColour:_e,default_item__hover_press__lineThickness:ge,default_item__hover_select__colour:fe,default_item__hover_select__lineColour:me,default_item__hover_select__lineThickness:ye,default_item__hover_select_press__colour:ve,default_item__hover_select_press__lineColour:be,default_item__hover_select_press__lineThickness:xe,default_item__hover_glow__colour:we,default_item__hover_glow__lineColour:ke,default_item__hover_glow__lineThickness:Ce,default_item__hover_glow_press__colour:Se,default_item__hover_glow_press__lineColour:Te,default_item__hover_glow_press__lineThickness:Ae,default_item__hover_glow_select__colour:Me,default_item__hover_glow_select__lineColour:Fe,default_item__hover_glow_select__lineThickness:Oe,default_item__hover_glow_select_press__colour:Pe,default_item__hover_glow_select_press__lineColour:Re,default_item__hover_glow_select_press__lineThickness:Le,subList_arrowMux:f,space_height:We,break_height:ze,break_lineMux:Ve,textBreak_height:He,textBreak_textToLineSpacing:je,textBreak_textHeightMux:Xe,textBreak_lineMux:Ye,onenter:Ke,onleave:Ze,onpress:Je,ondblpress:$e,onrelease:Qe,onselection:et,onpositionchange:tt}),e.append(st))},nt.close=function(){this.isOpen&&(this.isOpen=!1,ot.select(!1),e.remove(st))},ot.onselect=function(){const e=a(!0);nt.open(e),at.selected=!0,it()},ot.ondeselect=function(){a(!1),nt.close(),at.selected=!1,it()},{item:nt,height:s}},t.partLibrary.control.list=function(e,n){return t.collection.control.list(e,n.x,n.y,n.angle,n.interactable,n.list,n.active,n.multiSelect,n.hoverable,n.selectable,n.pressable,n.heightLimit,n.widthLimit,n.backgroundColour,n.backgroundMarkingColour,n.default_item_height,n.default_item_width,n.default_item_spacingHeight,n.default_item_horizontalPadding,n.default_text__text,n.default_text__font,n.default_text__fontSize,n.default_text__printingMode,n.default_text__spacing,n.default_text__interCharacterSpacing,n.default_text_colour__off,n.default_text_colour__up,n.default_text_colour__press,n.default_text_colour__select,n.default_text_colour__select_press,n.default_text_colour__glow,n.default_text_colour__glow_press,n.default_text_colour__glow_select,n.default_text_colour__glow_select_press,n.default_text_colour__hover,n.default_text_colour__hover_press,n.default_text_colour__hover_select,n.default_text_colour__hover_select_press,n.default_text_colour__hover_glow,n.default_text_colour__hover_glow_press,n.default_text_colour__hover_glow_select,n.default_text_colour__hover_glow_select_press,n.default_item__off__colour,n.default_item__off__lineColour,n.default_item__off__lineThickness,n.default_item__up__colour,n.default_item__up__lineColour,n.default_item__up__lineThickness,n.default_item__press__colour,n.default_item__press__lineColour,n.default_item__press__lineThickness,n.default_item__select__colour,n.default_item__select__lineColour,n.default_item__select__lineThickness,n.default_item__select_press__colour,n.default_item__select_press__lineColour,n.default_item__select_press__lineThickness,n.default_item__glow__colour,n.default_item__glow__lineColour,n.default_item__glow__lineThickness,n.default_item__glow_press__colour,n.default_item__glow_press__lineColour,n.default_item__glow_press__lineThickness,n.default_item__glow_select__colour,n.default_item__glow_select__lineColour,n.default_item__glow_select__lineThickness,n.default_item__glow_select_press__colour,n.default_item__glow_select_press__lineColour,n.default_item__glow_select_press__lineThickness,n.default_item__hover__colour,n.default_item__hover__lineColour,n.default_item__hover__lineThickness,n.default_item__hover_press__colour,n.default_item__hover_press__lineColour,n.default_item__hover_press__lineThickness,n.default_item__hover_select__colour,n.default_item__hover_select__lineColour,n.default_item__hover_select__lineThickness,n.default_item__hover_select_press__colour,n.default_item__hover_select_press__lineColour,n.default_item__hover_select_press__lineThickness,n.default_item__hover_glow__colour,n.default_item__hover_glow__lineColour,n.default_item__hover_glow__lineThickness,n.default_item__hover_glow_press__colour,n.default_item__hover_glow_press__lineColour,n.default_item__hover_glow_press__lineThickness,n.default_item__hover_glow_select__colour,n.default_item__hover_glow_select__lineColour,n.default_item__hover_glow_select__lineThickness,n.default_item__hover_glow_select_press__colour,n.default_item__hover_glow_select_press__lineColour,n.default_item__hover_glow_select_press__lineThickness,n.subList_arrowMux,n.space_height,n.break_height,n.break_lineMux,n.textBreak_height,n.textBreak_textToLineSpacing,n.textBreak_textHeightMux,n.textBreak_lineMux,n.onenter,n.onleave,n.onpress,n.ondblpress,n.onrelease,n.onselection,n.onpositionchange)},this.sequencer=function(e="sequencer",n,o,r=300,a=100,i=0,s=!0,l=64,c=16,u=1,p=1,d={r:20/255,g:20/255,b:20/255,a:1},h={r:209/255,g:189/255,b:222/255,a:.5},_=[{colour:{r:138/255,g:138/255,b:138/255,a:.6},lineColour:{r:175/255,g:175/255,b:175/255,a:.95},lineThickness:.5},{colour:{r:130/255,g:199/255,b:208/255,a:.6},lineColour:{r:130/255,g:199/255,b:208/255,a:.95},lineThickness:.5},{colour:{r:129/255,g:209/255,b:173/255,a:.6},lineColour:{r:129/255,g:209/255,b:173/255,a:.95},lineThickness:.5},{colour:{r:234/255,g:238/255,b:110/255,a:.6},lineColour:{r:234/255,g:238/255,b:110/255,a:.95},lineThickness:.5},{colour:{r:249/255,g:178/255,b:103/255,a:.6},lineColour:{r:249/255,g:178/255,b:103/255,a:.95},lineThickness:.5},{colour:{r:1,g:69/255,b:69/255,a:.6},lineColour:{r:1,g:69/255,b:69/255,a:.95},lineThickness:.5}],g=[{colour:{r:138/255,g:138/255,b:138/255,a:.8},lineColour:{r:175/255,g:175/255,b:175/255,a:1},lineThickness:.5},{colour:{r:130/255,g:199/255,b:208/255,a:.8},lineColour:{r:130/255,g:199/255,b:208/255,a:1},lineThickness:.5},{colour:{r:129/255,g:209/255,b:173/255,a:.8},lineColour:{r:129/255,g:209/255,b:173/255,a:1},lineThickness:.5},{colour:{r:234/255,g:238/255,b:110/255,a:.8},lineColour:{r:234/255,g:238/255,b:110/255,a:1},lineThickness:.5},{colour:{r:249/255,g:178/255,b:103/255,a:.8},lineColour:{r:249/255,g:178/255,b:103/255,a:1},lineThickness:.5},{colour:{r:1,g:69/255,b:69/255,a:.8},lineColour:{r:1,g:69/255,b:69/255,a:1},lineThickness:.5}],f={r:200/255,g:0,b:0,a:0},m=3,y=[0,1],v={colour:{r:120/255,g:120/255,b:120/255,a:.8},lineColour:{r:120/255,g:120/255,b:120/255,a:1},lineThickness:.5},b=[{colour:{r:120/255,g:120/255,b:120/255,a:.5},lineColour:{r:120/255,g:120/255,b:120/255,a:1},lineThickness:.5},{colour:{r:100/255,g:100/255,b:100/255,a:0},lineColour:{r:120/255,g:120/255,b:120/255,a:1},lineThickness:.5}],x=[0],w={colour:{r:229/255,g:221/255,b:112/255,a:.25},lineColour:{r:252/255,g:244/255,b:128/255,a:.5},lineThickness:.5},k=[{colour:{r:30/255,g:30/255,b:30/255,a:.5},lineColour:{r:120/255,g:120/255,b:120/255,a:1},lineThickness:.5}],C={r:240/255,g:240/255,b:240/255,a:1},S=function(e){},T=function(e){},A=function(e){}){const M=this,F={totalSize:{width:r/u,height:a/p},viewposition:{x:0,y:0},viewArea:{topLeft:{x:0,y:0},bottomRight:{x:u,y:p}}},O={step:1,snapping:!0,defaultStrength:.5,selectedSignals:[],activeSignals:[],signalRegistry:new _canvas_.library.structure.signalRegistry(l,c)},P={active:!1,period:{start:0,end:l}},R={present:!1,width:.75,invisibleHandleMux:4,position:-1,held:!1,automoveViewposition:!1},L=t.builder("basic","group",e,{x:n,y:o,angle:i}),I=t.builder("basic","rectangle","backing",{width:r,height:a,colour:d});L.append(I);const U=t.builder("basic","rectangle","stencil",{width:r,height:a});L.stencil(U),L.clipActive(!0);const D=t.builder("basic","group","workarea");L.append(D);const E=t.builder("basic","group","backgroundDrawArea");D.append(E);const N=t.builder("basic","group","backgroundDrawArea_horizontal");N.stopAttributeStartedExtremityUpdate=!0,E.append(N);const B=t.builder("basic","group","backgroundDrawArea_vertical");B.stopAttributeStartedExtremityUpdate=!0,E.append(B);const G=t.builder("basic","rectangle","interactionPlane_back",{width:F.totalSize.width,height:F.totalSize.height,colour:{r:1,g:0,b:0,a:0}});D.append(G),G.onwheel=function(){};const q=t.builder("basic","group","signalPane");D.append(q);const W=t.builder("basic","rectangle","interactionPlane_front",{width:F.totalSize.width,height:F.totalSize.height,colour:{r:0,g:0,b:0,a:0}});function z(e,t){const n=L.getOffset(),o={x:e-(I.x()+n.x),y:t-(I.y()+n.y),a:0-(I.angle()+n.angle)},r=_canvas_.library.math.cartesianAngleAdjust(o.x/n.scale,o.y/n.scale,o.a);return{x:r.x/I.width(),y:r.y/I.height()}}function V(e){return{x:F.viewArea.topLeft.x+e.x*u,y:F.viewArea.topLeft.y+e.y*p}}function H(e){return{x:u*(e.x-F.viewposition.x)+F.viewposition.x,y:p*(e.y-F.viewposition.y)+F.viewposition.y}}function j(e){return e.y=Math.floor(e.y*c),e.y>=c&&(e.y=c-1),e.x=O.snapping?Math.round(e.x*l/O.step)*O.step:e.x*l,e.x<0&&(e.x=0),{line:e.y,position:e.x}}function X(e,t,n=!0){if(null==e&&null==t)return F.viewposition;(null==e||isNaN(e))&&(e=F.viewposition.x),(null==t||isNaN(t))&&(t=F.viewposition.y),e=(e=e<0?0:e)>1?1:e,t=(t=t<0?0:t)>1?1:t,F.viewposition.x=e,F.viewposition.y=t,D.x(-F.viewposition.x*(F.totalSize.width-r)),D.y(-F.viewposition.y*(F.totalSize.height-a)),F.viewArea={topLeft:{x:e-u*e,y:t-p*t},bottomRight:{x:e+u*(1-e),y:t+p*(1-t)}},n&&L.onpan(F.viewArea)}function Y(e,t){if(null==e&&null==t)return{x:u,y:p};null!=e&&e!=u&&null!=t&&t!=p?(u=e=(e=e<.01?.01:e)>1?1:e,p=t=(t=t<.01?.01:t)>1?1:t,F.totalSize.width=r/u,F.totalSize.height=a/p,G.width(F.totalSize.width),G.height(F.totalSize.height),W.width(F.totalSize.width),W.height(F.totalSize.height),B.getChildren().forEach((function(e,t){e.x(t*(r/(l*u))),e.width(r/(l*u)),e.height(F.totalSize.height)})),N.getChildren().forEach((function(e,t){e.y(t*(a/(c*p))),e.height(a/(c*p)),e.width(F.totalSize.width)})),q.getChildren().forEach(e=>e.unit(r/(l*u),a/(c*p))),R.present&&(D.getChildByName("playhead").getChildByName("main").height(F.totalSize.height),D.getChildByName("playhead").getChildByName("invisibleHandle").height(F.totalSize.height),D.getChildByName("playhead").x(R.position*(F.totalSize.width/l)))):null!=e&&e!=u?(u=e=(e=e<.01?.01:e)>1?1:e,F.totalSize.width=r/u,G.width(F.totalSize.width),W.width(F.totalSize.width),B.getChildren().forEach((function(e,t){e.x(t*(r/(l*u))),e.width(r/(l*u))})),N.getChildren().forEach(e=>e.width(F.totalSize.width)),q.getChildren().forEach(e=>e.unit(r/(l*u),void 0)),R.present&&D.getChildByName("playhead").x(R.position*(F.totalSize.width/l))):null!=t&&t!=p&&(p=t=(t=t<.01?.01:t)>1?1:t,F.totalSize.height=a/p,G.height(F.totalSize.height),W.height(F.totalSize.height),B.getChildren().forEach(e=>e.height(F.totalSize.height)),N.getChildren().forEach((function(e,t){e.y(t*(a/(c*p))),e.height(a/(c*p))})),q.getChildren().forEach(e=>e.unit(void 0,a/(c*p))),R.present&&(D.getChildByName("playhead").getChildByName("main").height(F.totalSize.height),D.getChildByName("playhead").getChildByName("invisibleHandle").height(F.totalSize.height)))}function K(e,t,n,o=O.defaultStrength){const i=O.signalRegistry.add({line:e,position:t,length:n,strength:o}),d=O.signalRegistry.getSignal(i),h=M.sequencer.signalBlock(i,r/(l*u),a/(c*p),d.line,d.position,d.length,d.strength,!1,_,g,f,m);return q.append(h),h.select=function(e=!1){-1==O.selectedSignals.indexOf(this)?(this.selected(!0),O.selectedSignals.push(this),this.glow(!0)):e||this.deselect()},h.deselect=function(){O.selectedSignals.splice(O.selectedSignals.indexOf(this),1),this.selected(!1),this.glow(!1)},h.delete=function(){this.deselect(),O.signalRegistry.remove(parseInt(this.getName())),this.parent.remove(h)},h.body.attachCallback("ondblclick",(function(){if(_canvas_.system.keyboard.pressedKeys.control||_canvas_.system.keyboard.pressedKeys.command)for(let e=0;e<O.selectedSignals.length;e++)O.selectedSignals[e].strength(O.defaultStrength),O.signalRegistry.update(parseInt(O.selectedSignals[e].getName()),{strength:O.defaultStrength})})),h.body.attachCallback("onmousedown",(function(e,t,n){if(!s)return;if(_canvas_.system.keyboard.pressedKeys.Space)return void G.onmousedown(e,t,n);if(!_canvas_.system.keyboard.pressedKeys.shift&&!h.selected())for(;O.selectedSignals.length>0;)O.selectedSignals[0].deselect();h.select(!0);const o=[];for(let e=0;e<O.selectedSignals.length;e++)o.push({name:parseInt(O.selectedSignals[e].getName()),block:O.selectedSignals[e],starting:O.signalRegistry.getSignal(parseInt(O.selectedSignals[e].getName()))});if(_canvas_.system.keyboard.pressedKeys.control||_canvas_.system.keyboard.pressedKeys.command){const e=4,t=o.map(e=>e.block.strength()),r=n.y;return void _canvas_.system.mouse.mouseInteractionHandler((function(n,i,s){_canvas_.system.keyboard.pressedKeys.ControlLeft||_canvas_.system.keyboard.pressedKeys.ControlRight||_canvas_.system.keyboard.pressedKeys.command||_canvas_.system.mouse.forceMouseUp();const l=(r-s.y)/(_canvas_.core.viewport.scale()*a*e);for(let e=0;e<o.length;e++)o[e].block.strength(t[e]+l),O.signalRegistry.update(o[e].name,{strength:t[e]+l})}))}let r=!1;const i=j(V(z(e,t)));_canvas_.system.mouse.mouseInteractionHandler((function(e,t,n){!function(){if(!r&&(r=!0,_canvas_.system.keyboard.pressedKeys.alt))for(let e=0;e<O.selectedSignals.length;e++){const t=O.signalRegistry.getSignal(parseInt(O.selectedSignals[e].getName()));K(t.line,t.position,t.length,t.strength)}}();const a=j(V(z(e,t))),s=a.line-i.line,l=a.position-i.position;for(let e=0;e<o.length;e++){O.signalRegistry.update(o[e].name,{line:o[e].starting.line+s,position:o[e].starting.position+l});const t=O.signalRegistry.getSignal(o[e].name);o[e].block.line(t.line),o[e].block.position(t.position)}}))})),h.body.attachCallback("onmousemove",(function(){const e=_canvas_.system.keyboard.pressedKeys;let t="default";e.alt?t="copy":e.Space&&(t="grab"),_canvas_.core.viewport.cursor(t)})),h.body.attachCallback("onkeydown",(function(){if(!s)return;_canvas_.system.keyboard.pressedKeys.alt&&_canvas_.core.viewport.cursor("copy")})),h.body.attachCallback("onkeyup",(function(){if(!s)return;_canvas_.system.keyboard.pressedKeys.alt||_canvas_.core.viewport.cursor("default")})),h.leftHandle.attachCallback("onmousedown",(function(e,t,n){if(!s)return;if(_canvas_.system.keyboard.pressedKeys.Space)return void G.onmousedown(e,t,n);if(_canvas_.system.keyboard.pressedKeys.alt)return void h.body.onmousedown(e,t,n);if(!_canvas_.system.keyboard.pressedKeys.shift&&!h.selected())for(;O.selectedSignals.length>0;)O.selectedSignals[0].deselect();h.select(!0);const o=[];for(let e=0;e<O.selectedSignals.length;e++)o.push({name:parseInt(O.selectedSignals[e].getName()),block:O.selectedSignals[e],starting:O.signalRegistry.getSignal(parseInt(O.selectedSignals[e].getName()))});const r=j(V(z(e,t)));_canvas_.system.mouse.mouseInteractionHandler((function(e,t,n){const a=j(V(z(e,t))),i=r.position-a.position;for(let e=0;e<o.length;e++){if(o[e].starting.position-i<0)continue;O.signalRegistry.update(o[e].name,{length:o[e].starting.length+i,position:o[e].starting.position-i});const t=O.signalRegistry.getSignal(o[e].name);o[e].block.position(t.position),o[e].block.length(t.length)}}))})),h.leftHandle.attachCallback("onmousemove",(function(){const e=_canvas_.system.keyboard.pressedKeys;let t="col-resize";e.alt?t="copy":e.Space&&(t="grab"),_canvas_.core.viewport.cursor(t)})),h.leftHandle.attachCallback("onmouseleaveelement",(function(){_canvas_.core.viewport.cursor("default")})),h.rightHandle.attachCallback("onmousedown",(function(e,t,n,o=!1){if(!s)return;if(_canvas_.system.keyboard.pressedKeys.Space)return void G.getCallback("onmousedown")(e,t,n);if(!o&&_canvas_.system.keyboard.pressedKeys.alt)return void h.body.getCallback("onmousedown")(e,t,n);if(!_canvas_.system.keyboard.pressedKeys.shift&&!h.selected())for(;O.selectedSignals.length>0;)O.selectedSignals[0].deselect();h.select(!0);const r=[];for(let e=0;e<O.selectedSignals.length;e++)r.push({name:parseInt(O.selectedSignals[e].getName()),block:O.selectedSignals[e],starting:O.signalRegistry.getSignal(parseInt(O.selectedSignals[e].getName()))});const a=j(V(z(e,t)));_canvas_.system.mouse.mouseInteractionHandler((function(e,t,n){const o=j(V(z(e,t))).position-a.position;for(let e=0;e<r.length;e++){O.signalRegistry.update(r[e].name,{length:r[e].starting.length+o});const t=O.signalRegistry.getSignal(r[e].name);r[e].block.position(t.position),r[e].block.length(t.length)}}))})),h.rightHandle.attachCallback("onmousemove",(function(){const e=_canvas_.system.keyboard.pressedKeys;let t="col-resize";e.alt?t="copy":e.Space&&(t="grab"),_canvas_.core.viewport.cursor(t)})),h.rightHandle.attachCallback("onmouseleaveelement",(function(){_canvas_.core.viewport.cursor("default")})),{id:i,signalBlock:h}}D.append(W),W.onwheel=function(){},L.__calculationAngle=i,L.viewposition=X,L.viewarea=function(e,t=!0){if(null==e||null==e.topLeft&&null==e.bottomRight)return F.viewArea;null==e.topLeft?e.topLeft={x:F.viewArea.topLeft.x,y:F.viewArea.topLeft.y}:(null==e.topLeft.x&&(e.topLeft.x=F.viewArea.topLeft.x),null==e.topLeft.y&&(e.topLeft.y=F.viewArea.topLeft.y)),null==e.bottomRight?e.bottomRight={x:F.bottomRight.topLeft.x,y:F.bottomRight.topLeft.ys}:(null==e.bottomRight.x&&(e.bottomRight.x=F.viewArea.bottomRight.x),null==e.bottomRight.y&&(e.bottomRight.y=F.viewArea.bottomRight.y));const n=F.viewArea.bottomRight.x-F.viewArea.topLeft.x!=e.bottomRight.x-e.topLeft.x,o=e.bottomRight.y-e.topLeft.y!=F.viewArea.bottomRight.y-F.viewArea.topLeft.y;n&&o?Y(e.bottomRight.x-e.topLeft.x,e.bottomRight.y-e.topLeft.y):n?Y(e.bottomRight.x-e.topLeft.x,void 0):o&&Y(void 0,e.bottomRight.y-e.topLeft.y);let r=0,a=0;1-(e.bottomRight.x-e.topLeft.x)!=0&&(r=e.topLeft.x+e.topLeft.x*((e.bottomRight.x-e.topLeft.x)/(1-(e.bottomRight.x-e.topLeft.x)))),1-(e.bottomRight.y-e.topLeft.y)!=0&&(a=e.topLeft.y+e.topLeft.y*((e.bottomRight.y-e.topLeft.y)/(1-(e.bottomRight.y-e.topLeft.y)))),X(r,a,t),F.viewArea=Object.assign(e,{}),t&&L.onchangeviewarea(F.viewArea)},L.step=function(e){if(null==e)return O.step;O.step=e},L.interactable=function(e){if(null==e)return s;s=e},L.glowHorizontal=function(e,t,n){null==n&&(n=t+1);for(let o=t;o<=n;o++){const t=e?v:b[y[o%y.length]];N.getChildren()[o].colour(t.colour),N.getChildren()[o].lineColour(t.lineColour),N.getChildren()[o].thickness(t.thickness)}},L.glowVertical=function(e,t,n){null==n&&(n=t+1);for(let o=t;o<n;o++){const t=e?w:k[x[o%x.length]];B.getChildren()[o].colour(t.colour),B.getChildren()[o].lineColour(t.lineColour),B.getChildren()[o].thickness(t.thickness)}},L.loopActive=function(e){if(null==e)return P.active;P.active=e,L.glowVertical(!1,0,l),P.active&&L.glowVertical(!0,P.period.start<0?0:P.period.start,P.period.end>l?l:P.period.end)},L.loopPeriod=function(e,t){if(null==e||null==t)return P.period;e>t||e<0||t<0||(P.period={start:e,end:t},P.active&&(L.glowVertical(!1,0,l),L.glowVertical(!0,e<0?0:e,t>l?l:t)))},L.export=function(){return O.signalRegistry.export()},L.import=function(e){O.signalRegistry.import(e)},L.getAllSignals=function(){return O.signalRegistry.getAllSignals()},L.addSignal=function(e,t,n,o=1){K(e,t,n,o)},L.addSignals=function(e){for(let t=0;t<e.length;t++)null!=e[t]&&null!=e[t]&&this.addSignal(e[t].line,e[t].position,e[t].length,e[t].strength)},L.eventsBetween=function(e,t){return O.signalRegistry.eventsBetween(e,t)},L.automove=function(e){if(null==e)return R.automoveViewposition;R.automoveViewposition=e},L.playheadPosition=function(e,n=!0){if(null==e)return R.position;if(R.position=e,n){const e=[];for(let t=0;t<O.activeSignals.length;t++){const n=O.signalRegistry.getSignal(O.activeSignals[t]);null!=n&&e.unshift({signalID:O.activeSignals[t],line:n.line,position:P.period.start,strength:0})}O.activeSignals=[],L.event&&e.length>0&&L.event(e)}let o=D.getChildByName("playhead");if(R.position<0||R.position>l)null!=o&&o.parent.remove(o);else if(null==o&&(o=function(){const e=t.builder("basic","group","playhead");return D.append(e),e.main=t.builder("basic","rectangle","main",{x:-R.width/2,width:R.width,height:F.totalSize.height,colour:C}),e.append(e.main),e.invisibleHandle=t.builder("basic","rectangle","invisibleHandle",{x:-R.width*R.invisibleHandleMux/2+R.width/2,width:R.width*R.invisibleHandleMux,height:F.totalSize.height,colour:{r:1,g:0,b:0,a:0}}),e.append(e.invisibleHandle),e.invisibleHandle.onmousedown=function(){s&&(R.held=!0,_canvas_.system.mouse.mouseInteractionHandler((function(e){L.playheadPosition(j(V(z(e))).position)}),(function(){R.held=!1})))},e.invisibleHandle.onmouseenter=function(){_canvas_.core.viewport.cursor("col-resize")},e.invisibleHandle.onmousemove=function(){_canvas_.core.viewport.cursor("col-resize")},e.invisibleHandle.onmouseleave=function(){_canvas_.core.viewport.cursor("default")},R.present=!0,e}()),o.x(R.position*(F.totalSize.width/l)),R.automoveViewposition){const e=l-l*u;(R.position<Math.floor(F.viewposition.x*e)||R.position>Math.floor(F.viewposition.x*e)+l*u)&&L.viewposition((R.position>e?e:R.position)/e)}},L.progress=function(){if(R.held)return;const e=L.eventsBetween(R.position,R.position+O.step);if(P.active&&R.position==P.period.start){for(let t=0;t<O.activeSignals.length;t++){const n=O.signalRegistry.getSignal(O.activeSignals[t]);null!=n&&e.unshift({signalID:O.activeSignals[t],line:n.line,position:P.period.start,strength:0})}O.activeSignals=[]}for(let t=0;t<e.length;t++){const n=O.activeSignals.indexOf(e[t].signalID);-1!=n&&0==e[t].strength?O.activeSignals.splice(n):e[t].strength>0&&O.activeSignals.push(e[t].signalID)}P.active&&R.position+O.step==P.period.end?R.position=P.period.start:R.position=R.position+O.step,L.playheadPosition(R.position,!1),L.event&&e.length>0&&L.event(e)};let Z=!1;return G.attachCallback("onmousedown",(function(e,n,o){if(!s)return;const i=_canvas_.system.keyboard.pressedKeys;if(!i.alt||!i.Space)if(i.shift){const o=z(e,n);let i=z(e,n);const s=t.builder("basic","rectangle","selectionArea",{x:o.x*r,y:o.y*a,width:0,height:0,colour:h});L.append(s),_canvas_.system.mouse.mouseInteractionHandler((function(e,t,n){i=z(e,t),i.x=i.x<0?0:i.x,i.y=i.y<0?0:i.y,i.x=i.x>1?1:i.x,i.y=i.y>1?1:i.y;const l=i.x-o.x,c=i.y-o.y,u={x:o.x,y:o.y,width:1,height:1};l<0&&(u.width=-1,u.x+=l),c<0&&(u.height=-1,u.y+=c),s.x(u.x*r),s.y(u.y*a),s.width(u.width*l*r),s.height(u.height*c*a)}),(function(e,t,n){s.parent.remove(s);const r={a:H(o),b:H(i)};r.a.x*=F.totalSize.width,r.b.y*=F.totalSize.height,r.b.x*=F.totalSize.width,r.a.y*=F.totalSize.height;const a={topLeft:{x:0,y:0},bottomRight:{x:0,y:0}};for(r.a.x<r.b.x?(a.topLeft.x=r.a.x,a.bottomRight.x=r.b.x):(a.topLeft.x=r.b.x,a.bottomRight.x=r.a.x),r.a.y<r.b.y?(a.topLeft.y=r.a.y,a.bottomRight.y=r.b.y):(a.topLeft.y=r.b.y,a.bottomRight.y=r.a.y);O.selectedSignals.length>0;)O.selectedSignals[0].deselect();const u=q.getChildren();for(let e=0;e<u.length;e++){const t=O.signalRegistry.getSignal(parseInt(u[e].getName())),n={topLeft:{x:t.position*(F.totalSize.width/l),y:t.line*(F.totalSize.height/c)},bottomRight:{x:(t.position+t.length)*(F.totalSize.width/l),y:(t.line+1)*(F.totalSize.height/c)}};_canvas_.library.math.detectIntersect.boundingBoxes(n,a)&&u[e].select(!0)}}))}else if(i.alt){for(;O.selectedSignals.length>0;)O.selectedSignals[0].deselect();const t=j(V(z(e,n))),r=K(t.line,t.position,0);r.signalBlock.select(),r.signalBlock.rightHandle.getCallback("onmousedown")(e,n,o,!0)}else if(i.Space){Z=!0,_canvas_.core.viewport.cursor("grabbing");const t=z(e,n),o={x:F.viewposition.x,y:F.viewposition.y};_canvas_.system.mouse.mouseInteractionHandler((function(e,n,r){const a=z(e,n),i=t.x-a.x,s=t.y-a.y;X(o.x-i*u/(u-1),o.y-s*p/(p-1))}),(function(e,t,n){Z=!1,_canvas_.library.math.detectIntersect.pointWithinBoundingBox(V(z(e,t)),F.viewArea)&&_canvas_.system.keyboard.pressedKeys.Space?_canvas_.core.viewport.cursor("grab"):_canvas_.core.viewport.cursor("default")}))}else for(;O.selectedSignals.length>0;)O.selectedSignals[0].deselect()})),G.attachCallback("onmousemove",(function(){if(!s)return;const e=_canvas_.system.keyboard.pressedKeys;e.alt?_canvas_.core.viewport.cursor("crosshair"):e.shift?_canvas_.core.viewport.cursor("pointer"):e.Space?_canvas_.core.viewport.cursor("grab"):_canvas_.core.viewport.cursor("default")})),W.attachCallback("onkeydown",(function(e,t,n){if(!s)return;const o=_canvas_.system.keyboard.pressedKeys;(o.Backspace||o.Delete)&&function(){for(;O.selectedSignals.length>0;)O.selectedSignals[0].delete()}(),o.Space&&_canvas_.core.viewport.cursor(Z?"grabbing":"grab"),o.alt&&q.getElementsUnderPoint(n.x,n.y).then(e=>{null!=e[0]?_canvas_.core.viewport.cursor("copy"):_canvas_.core.viewport.cursor("crosshair")})})),W.attachCallback("onkeyup",(function(){s&&_canvas_.core.viewport.cursor("default")})),L.onpan=S,L.onchangeviewarea=T,L.event=A,function(){N.clear();for(let e=0;e<c;e++){const n=b[y[e%y.length]],o=t.builder("basic","rectangleWithOutline","strip_horizontal_"+e,{x:0,y:e*(a/(c*p)),width:F.totalSize.width,height:a/(c*p),colour:n.colour,lineColour:n.lineColour,thickness:n.lineThickness});o.stopAttributeStartedExtremityUpdate=!0,N.append(o)}B.clear();for(let e=0;e<l;e++){const n=k[x[e%x.length]],o=t.builder("basic","rectangleWithOutline","strip_vertical_"+e,{x:e*(r/(l*u)),y:0,width:r/(l*u),height:F.totalSize.height,colour:n.colour,lineColour:n.lineColour,thickness:n.lineThickness});o.stopAttributeStartedExtremityUpdate=!0,B.append(o)}}(),L},t.partLibrary.control.sequencer=function(e,n){return t.collection.control.sequencer(e,n.x,n.y,n.width,n.height,n.angle,n.interactable,n.xCount,n.yCount,n.zoomLevel_x,n.zoomLevel_y,n.backingStyle,n.selectionAreaStyle,n.blockStyle_body,n.blockStyle_bodyGlow,n.blockStyle_handle,n.blockStyle_handleWidth,n.horizontalStripStyle_pattern,n.horizontalStripStyle_glow,n.horizontalStripStyle_styles,n.verticalStripStyle_pattern,n.verticalStripStyle_glow,n.verticalStripStyle_styles,n.playheadStyle,n.onpan,n.onchangeviewarea,n.event)},this.sequencer.signalBlock=function(e,n,o,r,a,i,s=1,l=!1,c=[{colour:{r:138/255,g:138/255,b:138/255,a:.6},lineColour:{r:175/255,g:175/255,b:175/255,a:.95},lineThickness:.5},{colour:{r:130/255,g:199/255,b:208/255,a:.6},lineColour:{r:130/255,g:199/255,b:208/255,a:.95},lineThickness:.5},{colour:{r:129/255,g:209/255,b:173/255,a:.6},lineColour:{r:129/255,g:209/255,b:173/255,a:.95},lineThickness:.5},{colour:{r:234/255,g:238/255,b:110/255,a:.6},lineColour:{r:234/255,g:238/255,b:110/255,a:.95},lineThickness:.5},{colour:{r:249/255,g:178/255,b:103/255,a:.6},lineColour:{r:249/255,g:178/255,b:103/255,a:.95},lineThickness:.5},{colour:{r:1,g:69/255,b:69/255,a:.6},lineColour:{r:1,g:69/255,b:69/255,a:.95},lineThickness:.5}],u=[{colour:{r:138/255,g:138/255,b:138/255,a:.8},lineColour:{r:175/255,g:175/255,b:175/255,a:1},lineThickness:.5},{colour:{r:130/255,g:199/255,b:208/255,a:.8},lineColour:{r:130/255,g:199/255,b:208/255,a:1},lineThickness:.5},{colour:{r:129/255,g:209/255,b:173/255,a:.8},lineColour:{r:129/255,g:209/255,b:173/255,a:1},lineThickness:.5},{colour:{r:234/255,g:238/255,b:110/255,a:.8},lineColour:{r:234/255,g:238/255,b:110/255,a:1},lineThickness:.5},{colour:{r:249/255,g:178/255,b:103/255,a:.8},lineColour:{r:249/255,g:178/255,b:103/255,a:1},lineThickness:.5},{colour:{r:1,g:69/255,b:69/255,a:.8},lineColour:{r:1,g:69/255,b:69/255,a:1},lineThickness:.5}],p={r:1,g:1,b:0,a:1},d=5){let h=!1;const _=d/4;let g={body:x(c,s),glow:x(u,s)};const f=t.builder("basic","group",String(e),{x:a*n,y:r*o});function m(){f.body.height(o),f.leftHandle.height(o),f.rightHandle.height(o)}function y(){f.body.width(i*n),f.rightHandle.x(i*n-d/2)}function v(){f.y(r*o)}function b(){f.x(a*n)}function x(e,t){const n=Object.assign({},e[0]);return e[0].hasOwnProperty("colour")&&(n.colour=_canvas_.library.math.multiBlendColours(e.map(e=>e.colour),t)),e[0].hasOwnProperty("lineColour")&&(n.lineColour=_canvas_.library.math.multiBlendColours(e.map(e=>e.lineColour),t)),n}return f.body=t.builder("basic","rectangleWithOutline","body",{width:i*n,height:o,colour:g.body.colour,lineColour:g.body.lineColour,lineThickness:g.body.lineThickness}),f.leftHandle=t.builder("basic","rectangle","leftHandle",{x:-d/2,width:d,height:o,colour:p}),f.rightHandle=t.builder("basic","rectangle","rightHandle",{x:i*n-d/2,width:d,height:o,colour:p}),f.append(f.body),f.append(f.leftHandle),f.append(f.rightHandle),f.unit=function(e,t){if(null==e&&null==t)return{x:n,y:o};null==e?(o=t,m(),v()):null==t?(n=e,y(),b()):(n=e,o=t,y(),m(),v(),b())},f.line=function(e){if(null==e)return r;r=e,v()},f.position=function(e){if(null==e)return a;a=e,b()},f.length=function(e){if(null==e)return i;i=e<_/n?_/n:e,y()},f.strength=function(e){if(null==e)return s;g={body:x(c,s=e=(e=e>1?1:e)<0?0:e),glow:x(u,s)},f.glow(l)},f.glow=function(e){if(null==e)return l;(l=e)?(f.body.colour(g.glow.colour),f.body.lineColour(g.glow.lineColour),f.body.thickness(g.glow.thickness)):(f.body.colour(g.body.colour),f.body.lineColour(g.body.lineColour),f.body.thickness(g.body.thickness))},f.selected=function(e){if(null==e)return h;h=e},f},this.grapher_waveWorkspace=function(e="grapher_waveWorkspace",n,o,r=120,a=60,i=0,s=!0,l=!0,c=!0,u=[{colour:{r:0,g:1,b:0,a:1},thickness:.25},{colour:{r:1,g:1,b:0,a:1},thickness:.25}],p=[{colour:{r:.39,g:1,b:.39,a:1},size:7.5,font:"Helvetica"},{colour:{r:1,g:1,b:.39,a:1},size:7.5,font:"Helvetica"}],d={r:0,g:.39,b:0,a:1},h=.25,_={r:0,g:.58,b:0,a:1},g=10,f="Helvetica",m={r:.2,g:.2,b:.2,a:1},y=function(e,t){},v=function(e,t){},b=function(e){}){const x=t.builder("basic","group",e,{x:n,y:o,angle:i}),w=t.builder("display","grapher","graph",{canvasBased:!0,resolution:10,width:r,height:a,backgroundText_horizontalMarkings:{points:[.75,.5,.25,0,-.25,-.5,-.75],printingValues:["3/4","1/2","1/4","0","-1/4","-1/2","-3/4"],textPositionOffset:{x:1,y:-.5},printText:!0},backgroundText_verticalMarkings:{points:[.75,.5,.25,0],printText:!1},style:{foregrounds:u,foregroundText:p,background_colour:d,background_lineThickness:h,backgroundText_colour:_,backgroundText_size:g,backgroundText_font:f,backing:m}});x.append(w);const k=t.builder("control","needleOverlay","overlay",{width:r,height:a,interactable:s,selectNeedle:l,selectionArea:c});return x.append(k),x.horizontalMarkings=w.horizontalMarkings,x.verticalMarkings=w.verticalMarkings,x.drawBackground=w.drawBackground,x.drawForeground=w.drawForeground,x.draw=w.draw,x.removeAllMarkers=k.removeAllMarkers,x.select=k.select,x.area=k.area,x.interactable=k.interactable,x.areaIsActive=k.areaIsActive,x.list=k.list,x.onchange=y,x.onrelease=v,x.selectionAreaToggle=b,k.onchange=function(e,t){x.onchange&&x.onchange(e,t)},k.onrelease=function(e,t){x.onrelease&&x.onrelease(e,t)},k.selectionAreaToggle=function(e){x.selectionAreaToggle&&x.selectionAreaToggle(e)},w.viewbox({left:0}),w.drawBackground(),k.select(0),x},t.partLibrary.control.grapher_waveWorkspace=function(e,n){return t.collection.control.grapher_waveWorkspace(e,n.x,n.y,n.width,n.height,n.angle,n.interactable,n.selectNeedle,n.selectionArea,n.style.foregrounds,n.style.foregroundText,n.style.background_colour,n.style.background_lineThickness,n.style.backgroundText_colour,n.style.backgroundText_size,n.style.backgroundText_font,n.style.backing,n.onchange,n.onrelease,n.selectionAreaToggle)}},this.dynamic=new function(){t.partLibrary.dynamic={},this.connectionNode_voltage=function(e="connectionNode_voltage",n,o,r=0,a=20,i=20,s=!0,l=!0,c={r:.86,g:1,b:.86,a:1},u={r:.94,g:.98,b:.93,a:1},p={r:.32,g:.96,b:.43,a:1},d={r:.62,g:.98,b:.68,a:1},h={x:.5,y:.5},_=1,g=function(e){},f=function(e){},m=function(e){}){const y=t.builder("dynamic","connectionNode",e,{x:n,y:o,angle:r,width:a,height:i,allowConnections:s,allowDisconnections:l,type:"voltage",cableConnectionPosition:h,cableVersion:_,style:{dim:c,glow:u,cable_dim:p,cable_glow:d},onconnect:f,ondisconnect:m});let v=0;return y._getLocalValue=function(){return v},y._update=function(t){t>0?y.activate():y.deactivate();try{y.onchange(t)}catch(t){console.log("connectionNode_voltage::"+e+"::onchange error:",t)}},y.set=function(e){if("number"!=typeof e)return;v=e;const t=y.read();y._update(t),null!=y.getForeignNode()&&y.getForeignNode()._update(t)},y.read=function(){return v+(null!=y.getForeignNode()?y.getForeignNode()._getLocalValue():0)},y._onconnect=function(t){const n=y.getForeignNode()._getLocalValue();n>0&&y.activate();try{y.onchange(n)}catch(t){console.log("connectionNode_voltage::"+e+"::onchange error:",t)}},y._ondisconnect=function(t){0==v&&y.deactivate();try{y.onchange(v)}catch(t){console.log("connectionNode_voltage::"+e+"::onchange error:",t)}},y.onchange=g,y},t.partLibrary.dynamic.connectionNode_voltage=function(e,n){return t.collection.dynamic.connectionNode_voltage(e,n.x,n.y,n.angle,n.width,n.height,n.allowConnections,n.allowDisconnections,n.style.dim,n.style.glow,n.style.cable_dim,n.style.cable_glow,n.cableConnectionPosition,n.cableVersion,n.onchange,n.onconnect,n.ondisconnect)},this.connectionNode_audio=function(e="connectionNode_audio",n,o,r=0,a=20,i=20,s=!0,l=!0,c=!1,u,p={x:.5,y:.5},d=1,h={r:1,g:244/255,b:220/255,a:1},_={r:1,g:244/255,b:244/255,a:1},g={r:247/255,g:146/255,b:84/255,a:1},f={r:242/255,g:168/255,b:123/255,a:1},m=function(e){},y=function(e){}){const v=t.builder("dynamic","connectionNode",e,{x:n,y:o,angle:r,width:a,height:i,allowConnections:s,allowDisconnections:l,type:"audio",direction:c?"out":"in",cableConnectionPosition:p,cableVersion:d,style:{dim:h,glow:_,cable_dim:g,cable_glow:f},onconnect:m,ondisconnect:y});return v._direction=c?"out":"in",v.audioNode=void 0,v.inputChannelIndex=0,v.outputChannelIndex=0,v._onconnect=function(e){null!=v.audioNode?null!=v.getForeignNode().audioNode?"out"==v._direction&&v.audioNode.connect(v.getForeignNode().audioNode,v.outputChannelIndex,v.getForeignNode().inputChannelIndex):console.warn("foreign audioNode missing"):console.warn("local audioNode missing")},v._ondisconnect=function(e){if(null!=v.audioNode)if(null!=v.getForeignNode().audioNode){if("out"==v._direction)try{v.audioNode.disconnect(v.getForeignNode().audioNode,v.outputChannelIndex,v.getForeignNode().inputChannelIndex)}catch(e){console.warn("connectionNode_audio._ondisconnect : attempted disconnect failed from index",v.inputChannelIndex),console.log(e)}}else console.warn("foreign audioNode missing");else console.warn("local audioNode missing")},v},t.partLibrary.dynamic.connectionNode_audio=function(e,n){return t.collection.dynamic.connectionNode_audio(e,n.x,n.y,n.angle,n.width,n.height,n.allowConnections,n.allowDisconnections,n.isAudioOutput,_canvas_.library.audio.context,n.cableConnectionPosition,n.cableVersion,n.style.dim,n.style.glow,n.style.cable_dim,n.style.cable_glow,n.onconnect,n.ondisconnect)},this.connectionNode_data=function(e="connectionNode_data",n,o,r=0,a=20,i=20,s=!0,l=!0,c={r:220/255,g:244/255,b:1,a:1},u={r:244/255,g:244/255,b:1,a:1},p={r:84/255,g:146/255,b:247/255,a:1},d={r:123/255,g:168/255,b:242/255,a:1},h={x:.5,y:.5},_=1,g=function(e,t){},f=function(e){},m=function(e){},y=function(e){}){const v=t.builder("dynamic","connectionNode",e,{x:n,y:o,angle:r,width:a,height:i,allowConnections:s,allowDisconnections:l,type:"data",cableConnectionPosition:h,cableVersion:_,style:{dim:c,glow:u,cable_dim:p,cable_glow:d},onconnect:m,ondisconnect:y});return v._flash=function(){this.activate(),setTimeout((function(){v.deactivate()}),100)},v.send=function(t,n){if(v._flash(),null!=v.getForeignNode()&&v.getForeignNode()._flash(),null!=v.getForeignNode())try{v.getForeignNode().onreceive(t,n)}catch(t){console.log("connectionNode_data::"+e+" onreceive error:",t)}},v.request=function(t){if(v._flash(),null!=v.getForeignNode()&&v.getForeignNode()._flash(),null!=v.getForeignNode())try{v.getForeignNode().ongive(t)}catch(t){console.log("connectionNode_data::"+e+" ongive error:",t)}},v.onreceive=g,v.ongive=f,v},t.partLibrary.dynamic.connectionNode_data=function(e,n){return t.collection.dynamic.connectionNode_data(e,n.x,n.y,n.angle,n.width,n.height,n.allowConnections,n.allowDisconnections,n.style.dim,n.style.glow,n.style.cable_dim,n.style.cable_glow,n.cableConnectionPosition,n.cableVersion,n.onreceive,n.ongive,n.onconnect,n.ondisconnect)},this.connectionNode=function(e="connectionNode",n,o,r=0,a=20,i=20,s="none",l="",c=!0,u=!0,p={r:.86,g:.86,b:.86,a:1},d={r:.95,g:.95,b:.95,a:1},h={r:.57,g:.57,b:.57,a:1},_={r:.84,g:.84,b:.84,a:1},g={x:.5,y:.5},f=1,m={distance:15,hysteresisDistance:1},y=function(e){},v=function(e){}){const b=t.builder("basic","group",e,{x:n,y:o,angle:r});b._connectionNode=!0,b._type=s,b._direction=l;const x=t.builder("basic","rectangle","node",{width:a,height:i,colour:p});b.append(x);let w,k=void 0;b._onconnect=function(e){},b._ondisconnect=function(e){},b.isConnected=function(){return null!=w},b.canDisconnect=function(){return this.allowDisconnections()&&null!=k&&k.allowDisconnections()},b.isAppropriateConnectionNode=function(e){return b._type==e._type&&((""!=b._direction&&""!=e._direction||b._direction==e._direction)&&(""==b._direction||e._direction!=b._direction))},b.allowConnections=function(e){if(null==e)return c;c=e},b.allowDisconnections=function(e){if(null==e)return u;u=e},b.connectTo=function(t){if(null!=t&&t!=this&&t._type==this._type&&this.isAppropriateConnectionNode(t)&&t!=k&&(!t.isConnected()||t.canDisconnect())){if(this.disconnect(),k=t,this._onconnect(!0),null!=b.onconnect)try{b.onconnect(!0)}catch(t){console.log("connectionNode::"+e+"::onconnect error",t)}k._receiveConnection(this),this._addCable(this)}},b._receiveConnection=function(t){if(this.disconnect(),k=t,this._onconnect(!1),null!=b.onconnect)try{b.onconnect(!1)}catch(t){console.log("connectionNode::"+e+"::onconnect error:",t)}},b.disconnect=function(){if(null!=k){if(this._removeCable(),this._ondisconnect(!0),null!=b.ondisconnect)try{b.ondisconnect(!0)}catch(t){console.log("connectionNode::"+e+"::ondisconnect error:",t)}k._receiveDisconnection(),k=null}},b._receiveDisconnection=function(){if(this._ondisconnect(!1),null!=b.ondisconnect)try{b.ondisconnect(!1)}catch(t){console.log("connectionNode::"+e+"::ondisconnect error:",t)}k=null},b.getForeignNode=function(){return k},b._addCable=function(){w=t.builder("dynamic","cable","cable-"+b.getAddress().replace(/\//g,"_"),{x1:0,y1:0,x2:100,y2:100,angle:r,version:f,style:{dim:h,glow:_}}),k._receiveCable(w),_canvas_.system.pane.getMiddlegroundPane(this).append(w),b.draw(),C&&w.activate()},b._receiveCable=function(e){w=e},b._removeCable=function(){w.parent.remove(w),w=void 0,k._loseCable()},b._loseCable=function(){w=void 0},b.getAttachmentPoint=function(){const e=b.getOffset(),t=Math.sqrt(Math.pow(x.height(),2)/4+Math.pow(x.width(),2)/4)*e.scale,n=e.angle+Math.atan(x.height()/x.width());return{x:e.x+t*Math.cos(n)*g.x*2,y:e.y+t*Math.sin(n)*g.y*2,angle:e.angle}},b.draw=function(){if(null==w)return;const e=this.getAttachmentPoint(),t=k.getAttachmentPoint();w.draw(e.x,e.y,t.x,t.y,e.angle,t.angle)},x.attachCallback("onmousedown",(function(e,n,o){let a,i=void 0;function s(){const o=b.getAttachmentPoint(),a=t.builder("dynamic","cable","liveCable-"+b.getAddress().replace(/\//g,"_"),{x1:o.x,y1:o.y,x2:e,y2:n,version:f,angle:r,style:{dim:h,glow:_}});return _canvas_.system.pane.getMiddlegroundPane(b).append(a),a}_canvas_.system.mouse.mouseInteractionHandler((function(e,n,o){if(!b.allowConnections())return;if(b.isConnected()&&!b.canDisconnect())return;if(null!=b.getForeignNode()&&b.getForeignNode().isConnected()&&!b.getForeignNode().canDisconnect())return;const r=_canvas_.core.viewport.adapter.windowPoint2workspacePoint(o.x,o.y),l=t.collection.dynamic.connectionNode.registry.map(e=>{if(e===b)return;const t=e.getAttachmentPoint(),n=Math.pow(Math.pow(t.x-r.x,2)+Math.pow(t.y-r.y,2),.5);return n<m.distance?{node:e,distance:n}:void 0}).filter(e=>null!=e).sort((e,t)=>e.distance-t.distance);let c=void 0;if(0==l.length){if(b.isConnected()){const e=b.getForeignNode().getAttachmentPoint();c=Math.pow(Math.pow(e.x-r.x,2)+Math.pow(e.y-r.y,2),.5)>m.distance+m.hysteresisDistance?void 0:b.getForeignNode()}}else if(1==l.length)if(b.isConnected()){const e=b.getForeignNode().getAttachmentPoint();c=Math.pow(Math.pow(e.x-r.x,2)+Math.pow(e.y-r.y,2),.5)>m.distance+m.hysteresisDistance?l[0].node:b.getForeignNode()}else c=l[0].node;else if(b.isConnected()){const e=b.getForeignNode().getAttachmentPoint(),t={node:b.getForeignNode(),distance:Math.pow(Math.pow(e.x-r.x,2)+Math.pow(e.y-r.y,2),.5)},n=l.filter(e=>e.node!=b.getForeignNode());c=t.distance>n[0].distance+m.hysteresisDistance?n[0].node:t.node}else c=l[0].node;if(null!=c&&c.allowConnections()&&b.isAppropriateConnectionNode(c))null!=a&&(a.parent.remove(a),a=void 0),b.getForeignNode()!=c&&(b.isConnected()&&null!=i&&(b.getForeignNode().connectTo(i),i=void 0),c.isConnected()&&(i=c.getForeignNode()),b.connectTo(c));else{null==a&&(b.isConnected()&&null!=i?(b.getForeignNode().connectTo(i),i=void 0):b.disconnect(),a=s());const e=b.getAttachmentPoint();r.angle=_canvas_.library.math.getAngleOfTwoPoints(r,e),a.draw(e.x,e.y,r.x,r.y,e.angle,r.angle,!1)}}),(function(e,t,n){null!=a&&(a.parent.remove(a),a=void 0)}))})),x.attachCallback("ondblclick",(function(e,t,n){null!=k&&u&&k.allowDisconnections()&&b.disconnect()}));let C=!1;return b.activate=function(){x.colour(d),null!=w&&w.activate(),C=!0},b.deactivate=function(){x.colour(p),null!=w&&w.deactivate(),C=!1},b.onconnect=y,b.ondisconnect=v,b.attachCallback("onadd",(function(){t.collection.dynamic.connectionNode.registry.push(b)})),b.attachCallback("onremove",(function(){t.collection.dynamic.connectionNode.registry.splice(t.collection.dynamic.connectionNode.registry.indexOf(b),1)})),b},this.connectionNode.registry=[],t.partLibrary.dynamic.connectionNode=function(e,n){return t.collection.dynamic.connectionNode(e,n.x,n.y,n.angle,n.width,n.height,n.type,n.direction,n.allowConnections,n.allowDisconnections,n.style.dim,n.style.glow,n.style.cable_dim,n.style.cable_glow,n.cableConnectionPosition,n.cableVersion,n.proximityThreshold,n.onconnect,n.ondisconnect)},this.connectionNode_signal=function(e="connectionNode_signal",n,o,r=0,a=20,i=20,s=!0,l=!0,c={r:1,g:.86,b:.95,a:1},u={r:1,g:.95,b:.95,a:1},p={r:.96,g:.32,b:.57,a:1},d={r:.96,g:.76,b:.84,a:1},h={x:.5,y:.5},_=1,g=function(e){},f=function(e){},m=function(e){}){const y=t.builder("dynamic","connectionNode",e,{x:n,y:o,angle:r,width:a,height:i,allowConnections:s,allowDisconnections:l,type:"signal",cableConnectionPosition:h,cableVersion:_,style:{dim:c,glow:u,cable_dim:p,cable_glow:d},onconnect:f,ondisconnect:m});let v=!1;return y._getLocalValue=function(){return v},y._update=function(){const t=y.read();t?y.activate():y.deactivate();try{y.onchange(t)}catch(t){console.log("connectionNode_signal::"+e+"::onchange error:",t)}},y.set=function(e){"boolean"==typeof e&&(v=e,y._update(),null!=y.getForeignNode()&&y.getForeignNode()._update())},y.read=function(){return v||null!=y.getForeignNode()&&y.getForeignNode()._getLocalValue()},y._onconnect=function(t){y.getForeignNode()._getLocalValue()&&y.activate();try{y.onchange(y.getForeignNode()._getLocalValue())}catch(t){console.log("connectionNode_signal::"+e+"::onchange error:",t)}},y._ondisconnect=function(t){v||y.deactivate();try{y.onchange(v)}catch(t){console.log("connectionNode_signal::"+e+"::onchange error:",t)}},y.onchange=g,y},t.partLibrary.dynamic.connectionNode_signal=function(e,n){return t.collection.dynamic.connectionNode_signal(e,n.x,n.y,n.angle,n.width,n.height,n.allowConnections,n.allowDisconnections,n.style.dim,n.style.glow,n.style.cable_dim,n.style.cable_glow,n.cableConnectionPosition,n.cableVersion,n.onchange,n.onconnect,n.ondisconnect)},this.cable=function(e="cable",n=0,o=0,r=0,a=0,i={r:1,g:0,b:0,a:1},s={r:1,g:.39,b:.39,a:1}){const l=t.builder("basic","group",e),c=t.builder("basic","path","cable",{points:[n,o,r,a],colour:i,thickness:5});return l.append(c),l.activate=function(){c.colour(s)},l.deactivate=function(){c.colour(i)},l.draw=function(e,t,i,s){n=null!=e?e:n,o=null!=t?t:o,r=null!=i?i:r,a=null!=s?s:a,c.points([n,o,r,a])},l.draw(),l._isCable=!0,l},t.partLibrary.dynamic.cable=function(e,n){switch(n.version){case 1:default:return t.collection.dynamic.cable(e,n.x1,n.y1,n.x2,n.y2,n.style.dim,n.style.glow);case 2:return t.collection.dynamic.cable2(e,n.x1,n.y1,n.x2,n.y2,n.a1,n.a2,n.style.dim,n.style.glow)}},this.cable2=function(e="cable2",n=0,o=0,r=0,a=0,i=0,s=0,l={r:1,g:0,b:0,a:1},c={r:1,g:.39,b:.39,a:1}){const u=t.builder("basic","group",e),p=t.builder("basic","path","cable",{points:[n,o,r,a],colour:l,thickness:5});return u.append(p),u.activate=function(){p.colour(c)},u.deactivate=function(){p.colour(l)},u.draw=function(e,t,l,c,u,d,h=!0,_=!0){n=null==e?n:e,o=null==t?o:t,i=null==u?i:u,r=null==l?r:l,a=null==c?a:c,s=null==d?s:d;const g=_canvas_.library.math.cartesianAngleAdjust(20,0,i),f=_canvas_.library.math.cartesianAngleAdjust(20,0,s);p.points([n,o,n+g.x,o+g.y,r+f.x,a+f.y,r,a])},u.draw(),u._isCable=!0,u},this.cable2.visibilityGraph=[],this.cable2.globalDraw=function(e=_canvas_.system.pane.mm){}}}},this.unit=new function(){this.collection=new function(){this.test=new function(){this.testUnit_1=function(t,n,o,r){const a={name:t,model:"testUnit_1",collection:"test",x:n,y:o,angle:r,space:[{x:-5,y:-5},{x:280,y:-5},{x:280,y:30},{x:605,y:30},{x:605,y:130},{x:705,y:130},{x:705,y:210},{x:240,y:210},{x:240,y:325},{x:430,y:325},{x:430,y:435},{x:-5,y:445}],elements:[{collection:"basic",type:"rectangle",name:"testRectangle",data:{x:5,y:5,width:30,height:30,colour:{r:1,g:0,b:0,a:1}}},{collection:"basic",type:"circle",name:"testCircle",data:{x:20,y:55,radius:15}},{collection:"basic",type:"polygon",name:"testPolygon",data:{points:[55,5,70,35,40,35],colour:{r:0,g:1,b:0,a:1}}},{collection:"basic",type:"path",name:"testPath",data:{points:[0,0,0,90,2.5,90,2.5,72.5,75,72.5],thickness:1.25,jointType:"round",capType:"round"}},{collection:"basic",type:"image",name:"testImage",data:{x:40,y:40,width:30,height:30,url:"/images/testImages/Dore-munchausen-illustration.jpg"}},{collection:"basic",type:"text",name:"testText",data:{x:5,y:75,text:"Hello",height:15,width:70,colour:{r:150/255,g:150/255,b:1,a:1}}},{collection:"basic",type:"rectangleWithOutline",name:"testRectangleWithOutline",data:{x:105,y:60,width:30,height:30}},{collection:"basic",type:"circleWithOutline",name:"testCircleWithOutline",data:{x:90,y:70,radius:10}},{collection:"basic",type:"polygonWithOutline",name:"testPolygonWithOutline",data:{points:[75,15,75,55,115,55],thickness:1,colour:{r:1,g:0,b:.5,a:1},lineColour:{r:0,g:0,b:0,a:1}}},{collection:"basic",type:"canvas",name:"testCanvas",data:{x:130,y:5,width:30,height:30}},{collection:"display",type:"glowbox_rectangle",name:"test_glowbox_rectangle",data:{x:0,y:140}},{collection:"display",type:"glowbox_circle",name:"test_glowbox_circle",data:{x:15,y:185}},{collection:"display",type:"glowbox_image",name:"test_glowbox_image",data:{x:0,y:200,glowURL:"/images/testImages/Dore-munchausen-illustration.jpg",dimURL:"/images/testImages/mikeandbrian.jpg"}},{collection:"display",type:"glowbox_polygon",name:"test_glowbox_polygon",data:{x:0,y:235}},{collection:"display",type:"glowbox_path",name:"test_glowbox_path",data:{x:0,y:270}},{collection:"display",type:"sevenSegmentDisplay",name:"test_sevenSegmentDisplay",data:{x:35,y:140}},{collection:"display",type:"sevenSegmentDisplay",name:"test_sevenSegmentDisplay_canvasBased",data:{x:35,y:175,canvasBased:!0}},{collection:"display",type:"sixteenSegmentDisplay",name:"test_sixteenSegmentDisplay",data:{x:60,y:140}},{collection:"display",type:"sixteenSegmentDisplay",name:"test_sixteenSegmentDisplay_canvasBased",data:{x:60,y:175,canvasBased:!0}},{collection:"display",type:"readout_sevenSegmentDisplay",name:"test_readout_sevenSegmentDisplay",data:{x:85,y:140}},{collection:"display",type:"readout_sevenSegmentDisplay",name:"test_readout_sevenSegmentDisplay_canvasBased",data:{x:85,y:175,canvasBased:!0}},{collection:"display",type:"readout_sixteenSegmentDisplay",name:"test_readout_sixteenSegmentDisplay",data:{x:190,y:140}},{collection:"display",type:"readout_sixteenSegmentDisplay",name:"test_readout_sixteenSegmentDisplay_canvasBased",data:{x:190,y:175,canvasBased:!0}},{collection:"display",type:"level",name:"test_level",data:{x:295,y:140}},{collection:"display",type:"meter_level",name:"test_meter_level",data:{x:320,y:140}},{collection:"display",type:"audio_meter_level",name:"test_audio_meter_level",data:{x:345,y:140}},{collection:"display",type:"gauge",name:"test_gauge",data:{x:370,y:140}},{collection:"display",type:"gauge_image",name:"test_gauge_image",data:{x:425,y:140,backingURL:"/images/testImages/Dore-munchausen-illustration.jpg"}},{collection:"display",type:"meter_gauge",name:"test_meter_gauge",data:{x:370,y:175,markings:{upper:"...........".split(""),middle:".........".split(""),lower:".......".split("")},style:{markingStyle_font:"defaultThin"}}},{collection:"display",type:"meter_gauge_image",name:"test_meter_gauge_image",data:{x:425,y:175,backingURL:"/images/testImages/mikeandbrian.jpg"}},{collection:"display",type:"rastorDisplay",name:"test_rastorDisplay",data:{x:480,y:140}},{collection:"display",type:"grapher",name:"test_grapher",data:{x:550,y:140}},{collection:"display",type:"grapher",name:"test_grapher_canvasBased",data:{x:550,y:205,canvasBased:!0}},{collection:"display",type:"grapher_periodicWave",name:"test_grapher_periodicWave",data:{x:675,y:140}},{collection:"display",type:"grapher_periodicWave",name:"test_grapher_periodicWave_canvasBased",data:{x:675,y:205,canvasBased:!0}},{collection:"display",type:"grapher_audioScope",name:"test_grapher_audioScope",data:{x:800,y:140}},{collection:"display",type:"grapher_audioScope",name:"test_grapher_audioScope_canvasBased",data:{x:800,y:205,canvasBased:!0}},{collection:"control",type:"button_rectangle",name:"test_button_rectangle",data:{x:0,y:350,text_centre:"rectangle",style:{text__hover__colour:{r:1,g:0,b:0,a:1}}}},{collection:"control",type:"button_circle",name:"test_button_circle",data:{x:15,y:387.5,text_centre:"circle",style:{text__hover__colour:{r:1,g:0,b:0,a:1}}}},{collection:"control",type:"button_polygon",name:"test_button_polygon",data:{x:0,y:405,points:[{x:0,y:5},{x:5,y:0},{x:25,y:0},{x:30,y:5},{x:30,y:25},{x:25,y:30},{x:5,y:30},{x:0,y:25}],style:{text__hover__colour:{r:1,g:0,b:0,a:1}},text_centre:"polygon"}},{collection:"control",type:"button_image",name:"test_button_image",data:{x:0,y:437.5,backingURL__off:"/images/testImages/buttonStates/off.png",backingURL__up:"/images/testImages/buttonStates/up.png",backingURL__press:"/images/testImages/buttonStates/press.png",backingURL__select:"/images/testImages/buttonStates/select.png",backingURL__select_press:"/images/testImages/buttonStates/select_press.png",backingURL__glow:"/images/testImages/buttonStates/glow.png",backingURL__glow_press:"/images/testImages/buttonStates/glow_press.png",backingURL__glow_select:"/images/testImages/buttonStates/glow_select.png",backingURL__glow_select_press:"/images/testImages/buttonStates/glow_select_press.png",backingURL__hover:"/images/testImages/buttonStates/hover.png",backingURL__hover_press:"/images/testImages/buttonStates/hover_press.png",backingURL__hover_select:"/images/testImages/buttonStates/hover_select.png",backingURL__hover_select_press:"/images/testImages/buttonStates/hover_select_press.png",backingURL__hover_glow:"/images/testImages/buttonStates/hover_glow.png",backingURL__hover_glow_press:"/images/testImages/buttonStates/hover_glow_press.png",backingURL__hover_glow_select:"/images/testImages/buttonStates/hover_glow_select.png",backingURL__hover_glow_select_press:"/images/testImages/buttonStates/hover_glow_select_press.png"}},{collection:"control",type:"checkbox_rectangle",name:"test_checkbox_rectangle",data:{x:35,y:350}},{collection:"control",type:"checkbox_circle",name:"test_checkbox_circle",data:{x:45,y:387.5}},{collection:"control",type:"checkbox_polygon",name:"test_checkbox_polygon",data:{x:35,y:405,outterPoints:[{x:0,y:4},{x:4,y:0},{x:16,y:0},{x:20,y:4},{x:20,y:16},{x:16,y:20},{x:4,y:20},{x:0,y:16}],innerPoints:[{x:2,y:4},{x:4,y:2},{x:16,y:2},{x:18,y:4},{x:18,y:16},{x:16,y:18},{x:4,y:18},{x:2,y:16}]}},{collection:"control",type:"checkbox_image",name:"test_checkbox_image",data:{x:35,y:87.355,uncheckURL:"/images/testImages/Dore-munchausen-illustration.jpg",checkURL:"/images/testImages/mikeandbrian.jpg"}},{collection:"control",type:"checkboxgrid",name:"test_checkboxgrid",data:{x:60,y:350}},{collection:"control",type:"dial_1_continuous",name:"test_dial_1_continuous",data:{x:160,y:360}},{collection:"control",type:"dial_2_continuous",name:"test_dial_2_continuous",data:{x:185,y:360}},{collection:"control",type:"dial_1_discrete",name:"test_dial_1_discrete",data:{x:160,y:385}},{collection:"control",type:"dial_2_discrete",name:"test_dial_2_discrete",data:{x:185,y:385}},{collection:"control",type:"dial_continuous_image",name:"test_dial_continuous_image",data:{x:210,y:360,handleURL:"/images/testImages/expanded-metal-1.jpg",slotURL:"/images/testImages/dark-background_1048-3848.jpg?size=338&ext=jpg",needleURL:"/images/testImages/41-satin-stainless-steel.jpg"}},{collection:"control",type:"dial_discrete_image",name:"test_dial_discrete_image",data:{x:210,y:385,handleURL:"/images/testImages/expanded-metal-1.jpg",slotURL:"/images/testImages/dark-background_1048-3848.jpg?size=338&ext=jpg",needleURL:"/images/testImages/41-satin-stainless-steel.jpg"}},{collection:"control",type:"slide_continuous",name:"test_slide_continuous",data:{x:230,y:350}},{collection:"control",type:"slide_continuous_image",name:"test_slide_continuous_image",data:{x:245,y:350,handleURL:"/images/testImages/expanded-metal-1.jpg",backingURL:"/images/testImages/41-satin-stainless-steel.jpg"}},{collection:"control",type:"slide_discrete",name:"test_slide_discrete",data:{x:260,y:350}},{collection:"control",type:"slide_discrete_image",name:"test_slide_discrete_image",data:{x:275,y:350,handleURL:"/images/testImages/expanded-metal-1.jpg",backingURL:"/images/testImages/41-satin-stainless-steel.jpg"}},{collection:"control",type:"slidePanel",name:"test_slidePanel",data:{x:290,y:350}},{collection:"control",type:"slidePanel_image",name:"test_slidePanel_image",data:{x:375,y:350,handleURL:"/images/testImages/expanded-metal-1.jpg",backingURL:"/images/testImages/41-satin-stainless-steel.jpg"}},{collection:"control",type:"rangeslide",name:"test_rangeslide",data:{x:460,y:350}},{collection:"control",type:"rangeslide_image",name:"test_rangeslide_image",data:{x:475,y:350,handleURL:"/images/testImages/expanded-metal-1.jpg",backingURL:"/images/testImages/41-satin-stainless-steel.jpg",spanURL:"/images/testImages/dark-background_1048-3848.jpg"}},{collection:"control",type:"list",name:"test_list",data:{x:490,y:350,heightLimit:100,widthLimit:50,list:[{type:"space"},{type:"break"},{type:"break"},{type:"break"},{type:"break"},{type:"break"},{type:"break"},{type:"break"},{type:"break"},{type:"break"},{type:"break"},{type:"break"},{type:"break"},{type:"break"},{type:"break"},{type:"break"},{type:"space"},{type:"textbreak",text:"break 1"},{type:"textbreak",text:"break 2"},{type:"textbreak",text:"break 3"},{type:"textbreak",text:"break 4"},{type:"textbreak",text:"break 5"},{type:"textbreak",text:"break 6"},{type:"textbreak",text:"break 7"},{type:"textbreak",text:"break 8"},{type:"textbreak",text:"break 9"},{type:"textbreak",text:"break 10"},{type:"textbreak",text:"break 11"},{type:"textbreak",text:"break 12"},{type:"textbreak",text:"break 13"},{type:"textbreak",text:"break 14"},{type:"textbreak",text:"break 15"},{type:"space"},{type:"text",text_left:"left",text_centre:"1",text_right:"right"},{type:"text",text_left:"left",text_centre:"2",text_right:"right"},{type:"text",text_left:"left",text_centre:"3",text_right:"right"},{type:"text",text_left:"left",text_centre:"4",text_right:"right"},{type:"text",text_left:"left",text_centre:"5",text_right:"right"},{type:"text",text_left:"left",text_centre:"6",text_right:"right"},{type:"text",text_left:"left",text_centre:"7",text_right:"right"},{type:"text",text_left:"left",text_centre:"8",text_right:"right"},{type:"text",text_left:"left",text_centre:"9",text_right:"right"},{type:"text",text_left:"left",text_centre:"10",text_right:"right"},{type:"text",text_left:"left",text_centre:"11",text_right:"right"},{type:"text",text_left:"left",text_centre:"12",text_right:"right"},{type:"text",text_left:"left",text_centre:"13",text_right:"right"},{type:"text",text_left:"left",text_centre:"14",text_right:"right"},{type:"text",text_left:"left",text_centre:"15",text_right:"right"},{type:"space"},{type:"checkbox",text:"checkable 1",updateFunction:function(){return!0},onclickFunction:function(e){console.log("checkbox:",e)}},{type:"checkbox",text:"checkable 2",updateFunction:function(){return!1},onclickFunction:function(e){console.log("checkbox:",e)}},{type:"checkbox",text:"checkable 3",updateFunction:function(){return!0},onclickFunction:function(e){console.log("checkbox:",e)}},{type:"checkbox",text:"checkable 4",updateFunction:function(){return!1},onclickFunction:function(e){console.log("checkbox:",e)}},{type:"checkbox",text:"checkable 5",updateFunction:function(){return!0},onclickFunction:function(e){console.log("checkbox:",e)}},{type:"checkbox",text:"checkable 6",updateFunction:function(){return!0},onclickFunction:function(e){console.log("checkbox:",e)}},{type:"checkbox",text:"checkable 7",updateFunction:function(){return!1},onclickFunction:function(e){console.log("checkbox:",e)}},{type:"checkbox",text:"checkable 8",updateFunction:function(){return!0},onclickFunction:function(e){console.log("checkbox:",e)}},{type:"checkbox",text:"checkable 9",updateFunction:function(){return!1},onclickFunction:function(e){console.log("checkbox:",e)}},{type:"checkbox",text:"checkable 10",updateFunction:function(){return!0},onclickFunction:function(e){console.log("checkbox:",e)}},{type:"checkbox",text:"checkable 11",updateFunction:function(){return!1},onclickFunction:function(e){console.log("checkbox:",e)}},{type:"checkbox",text:"checkable 12",updateFunction:function(){return!1},onclickFunction:function(e){console.log("checkbox:",e)}},{type:"checkbox",text:"checkable 13",updateFunction:function(){return!1},onclickFunction:function(e){console.log("checkbox:",e)}},{type:"checkbox",text:"checkable 14",updateFunction:function(){return!0},onclickFunction:function(e){console.log("checkbox:",e)}},{type:"checkbox",text:"checkable 15",updateFunction:function(){return!1},onclickFunction:function(e){console.log("checkbox:",e)}},{type:"space"},{type:"button",text_left:"item1",text_centre:"",text_right:"",function:function(){console.log("item1 function")}},{type:"button",text_left:"item2",text_centre:"",text_right:"",function:function(){console.log("item2 function")}},{type:"button",text_left:"item3",text_centre:"",text_right:"",function:function(){console.log("item3 function")}},{type:"button",text_left:"item4",text_centre:"",text_right:"",function:function(){console.log("item4 function")}},{type:"button",text_left:"item5",text_centre:"",text_right:"",function:function(){console.log("item5 function")}},{type:"button",text_left:"item6",text_centre:"",text_right:"",function:function(){console.log("item6 function")}},{type:"button",text_left:"item7",text_centre:"",text_right:"",function:function(){console.log("item7 function")}},{type:"button",text_left:"item8",text_centre:"",text_right:"",function:function(){console.log("item8 function")}},{type:"button",text_left:"item9",text_centre:"",text_right:"",function:function(){console.log("item9 function")}},{type:"button",text_left:"item10",text_centre:"",text_right:"",function:function(){console.log("item10 function")}},{type:"button",text_left:"item11",text_centre:"",text_right:"",function:function(){console.log("item11 function")}},{type:"button",text_left:"item12",text_centre:"",text_right:"",function:function(){console.log("item12 function")}},{type:"button",text_left:"item13",text_centre:"",text_right:"",function:function(){console.log("item13 function")}},{type:"button",text_left:"item14",text_centre:"",text_right:"",function:function(){console.log("item14 function")}},{type:"button",text_left:"item15",text_centre:"",text_right:"",function:function(){console.log("item15 function")}},{type:"space"},{type:"list",text:"sublist 1",list:[{type:"space"},{type:"break"},{type:"break"},{type:"break"},{type:"break"},{type:"break"},{type:"break"},{type:"break"},{type:"break"},{type:"break"},{type:"break"},{type:"break"},{type:"break"},{type:"break"},{type:"break"},{type:"break"},{type:"space"}]},{type:"list",text:"sublist 2",heightLimit:100,list:[{type:"space"},{type:"textbreak",text:"break 1"},{type:"textbreak",text:"break 2"},{type:"textbreak",text:"break 3"},{type:"textbreak",text:"break 4"},{type:"textbreak",text:"break 5"},{type:"textbreak",text:"break 6"},{type:"textbreak",text:"break 7"},{type:"textbreak",text:"break 8"},{type:"textbreak",text:"break 9"},{type:"textbreak",text:"break 10"},{type:"textbreak",text:"break 11"},{type:"textbreak",text:"break 12"},{type:"textbreak",text:"break 13"},{type:"textbreak",text:"break 14"},{type:"textbreak",text:"break 15"},{type:"space"}]},{type:"list",text:"sublist 3",heightLimit:100,list:[{type:"space"},{type:"text",text_left:"left",text_centre:"1",text_right:"right"},{type:"text",text_left:"left",text_centre:"2",text_right:"right"},{type:"text",text_left:"left",text_centre:"3",text_right:"right"},{type:"text",text_left:"left",text_centre:"4",text_right:"right"},{type:"text",text_left:"left",text_centre:"5",text_right:"right"},{type:"text",text_left:"left",text_centre:"6",text_right:"right"},{type:"text",text_left:"left",text_centre:"7",text_right:"right"},{type:"text",text_left:"left",text_centre:"8",text_right:"right"},{type:"text",text_left:"left",text_centre:"9",text_right:"right"},{type:"text",text_left:"left",text_centre:"10",text_right:"right"},{type:"text",text_left:"left",text_centre:"11",text_right:"right"},{type:"text",text_left:"left",text_centre:"12",text_right:"right"},{type:"text",text_left:"left",text_centre:"13",text_right:"right"},{type:"text",text_left:"left",text_centre:"14",text_right:"right"},{type:"text",text_left:"left",text_centre:"15",text_right:"right"},{type:"space"}]},{type:"list",text:"sublist 4",heightLimit:100,list:[{type:"space"},{type:"checkbox",text:"checkable 1",updateFunction:function(){return!0},onclickFunction:function(e){console.log("checkbox:",e)}},{type:"checkbox",text:"checkable 2",updateFunction:function(){return!1},onclickFunction:function(e){console.log("checkbox:",e)}},{type:"checkbox",text:"checkable 3",updateFunction:function(){return!0},onclickFunction:function(e){console.log("checkbox:",e)}},{type:"checkbox",text:"checkable 4",updateFunction:function(){return!1},onclickFunction:function(e){console.log("checkbox:",e)}},{type:"checkbox",text:"checkable 5",updateFunction:function(){return!0},onclickFunction:function(e){console.log("checkbox:",e)}},{type:"checkbox",text:"checkable 6",updateFunction:function(){return!0},onclickFunction:function(e){console.log("checkbox:",e)}},{type:"checkbox",text:"checkable 7",updateFunction:function(){return!1},onclickFunction:function(e){console.log("checkbox:",e)}},{type:"checkbox",text:"checkable 8",updateFunction:function(){return!0},onclickFunction:function(e){console.log("checkbox:",e)}},{type:"checkbox",text:"checkable 9",updateFunction:function(){return!1},onclickFunction:function(e){console.log("checkbox:",e)}},{type:"checkbox",text:"checkable 10",updateFunction:function(){return!0},onclickFunction:function(e){console.log("checkbox:",e)}},{type:"checkbox",text:"checkable 11",updateFunction:function(){return!1},onclickFunction:function(e){console.log("checkbox:",e)}},{type:"checkbox",text:"checkable 12",updateFunction:function(){return!1},onclickFunction:function(e){console.log("checkbox:",e)}},{type:"checkbox",text:"checkable 13",updateFunction:function(){return!1},onclickFunction:function(e){console.log("checkbox:",e)}},{type:"checkbox",text:"checkable 14",updateFunction:function(){return!0},onclickFunction:function(e){console.log("checkbox:",e)}},{type:"checkbox",text:"checkable 15",updateFunction:function(){return!1},onclickFunction:function(e){console.log("checkbox:",e)}},{type:"space"}]},{type:"list",text:"sublist 5",heightLimit:100,list:[{type:"space"},{type:"button",text_left:"item1",text_centre:"",text_right:"",function:function(){console.log("item1 function")}},{type:"button",text_left:"item2",text_centre:"",text_right:"",function:function(){console.log("item2 function")}},{type:"button",text_left:"item3",text_centre:"",text_right:"",function:function(){console.log("item3 function")}},{type:"button",text_left:"item4",text_centre:"",text_right:"",function:function(){console.log("item4 function")}},{type:"button",text_left:"item5",text_centre:"",text_right:"",function:function(){console.log("item5 function")}},{type:"button",text_left:"item6",text_centre:"",text_right:"",function:function(){console.log("item6 function")}},{type:"button",text_left:"item7",text_centre:"",text_right:"",function:function(){console.log("item7 function")}},{type:"button",text_left:"item8",text_centre:"",text_right:"",function:function(){console.log("item8 function")}},{type:"button",text_left:"item9",text_centre:"",text_right:"",function:function(){console.log("item9 function")}},{type:"button",text_left:"item10",text_centre:"",text_right:"",function:function(){console.log("item10 function")}},{type:"button",text_left:"item11",text_centre:"",text_right:"",function:function(){console.log("item11 function")}},{type:"button",text_left:"item12",text_centre:"",text_right:"",function:function(){console.log("item12 function")}},{type:"button",text_left:"item13",text_centre:"",text_right:"",function:function(){console.log("item13 function")}},{type:"button",text_left:"item14",text_centre:"",text_right:"",function:function(){console.log("item14 function")}},{type:"button",text_left:"item15",text_centre:"",text_right:"",function:function(){console.log("item15 function")}},{type:"button",text_left:"item16",text_centre:"",text_right:"",function:function(){console.log("item16 function")}},{type:"space"}]},{type:"space"}]}},{collection:"control",type:"needleOverlay",name:"test_needleOverlay",data:{x:545,y:350}},{collection:"control",type:"grapher_waveWorkspace",name:"test_grapher_waveWorkspace",data:{x:670,y:350}},{collection:"control",type:"sequencer",name:"test_sequencer",data:{x:795,y:350,zoomLevel_x:.5}},{collection:"dynamic",type:"connectionNode",name:"test_connectionNode1",data:{x:25,y:535}},{collection:"dynamic",type:"connectionNode",name:"test_connectionNode2",data:{x:0,y:585}},{collection:"dynamic",type:"connectionNode",name:"test_connectionNode3",data:{x:50,y:585}},{collection:"dynamic",type:"connectionNode_signal",name:"test_connectionNode_signal1",data:{x:125,y:535}},{collection:"dynamic",type:"connectionNode_signal",name:"test_connectionNode_signal2",data:{x:100,y:585}},{collection:"dynamic",type:"connectionNode_signal",name:"test_connectionNode_signal3",data:{x:150,y:585}},{collection:"dynamic",type:"connectionNode_voltage",name:"test_connectionNode_voltage1",data:{x:225,y:535}},{collection:"dynamic",type:"connectionNode_voltage",name:"test_connectionNode_voltage2",data:{x:200,y:585}},{collection:"dynamic",type:"connectionNode_voltage",name:"test_connectionNode_voltage3",data:{x:250,y:585}},{collection:"dynamic",type:"connectionNode_data",name:"test_connectionNode_data1",data:{x:325,y:535}},{collection:"dynamic",type:"connectionNode_data",name:"test_connectionNode_data2",data:{x:300,y:585}},{collection:"dynamic",type:"connectionNode_data",name:"test_connectionNode_data3",data:{x:350,y:585}},{collection:"dynamic",type:"connectionNode_audio",name:"test_connectionNode_audio1",data:{x:425,y:535,isAudioOutput:!0}},{collection:"dynamic",type:"connectionNode_audio",name:"test_connectionNode_audio2",data:{x:400,y:585}},{collection:"dynamic",type:"connectionNode_audio",name:"test_connectionNode_audio3",data:{x:450,y:585}}]},i=e.unit.builder(a),s=i.elements.canvas.testCanvas.$;return i.elements.canvas.testCanvas._.fillStyle=_canvas_.library.math.convertColour.obj2rgba({r:.9,g:.9,b:.9,a:1}),i.elements.canvas.testCanvas._.fillRect(s(0),s(0),s(30),s(30)),i.elements.canvas.testCanvas._.fillStyle=_canvas_.library.math.convertColour.obj2rgba({r:.732,g:.756,b:.892,a:1}),i.elements.canvas.testCanvas._.fillRect(s(0),s(0),s(10),s(10)),i.elements.canvas.testCanvas._.fillStyle=_canvas_.library.math.convertColour.obj2rgba({r:.107,g:.722,b:.945,a:1}),i.elements.canvas.testCanvas._.fillRect(s(20),s(0),s(10),s(10)),i.elements.canvas.testCanvas._.fillStyle=_canvas_.library.math.convertColour.obj2rgba({r:.859,g:.573,b:.754,a:1}),i.elements.canvas.testCanvas._.fillRect(s(0),s(20),s(10),s(10)),i.elements.canvas.testCanvas._.fillStyle=_canvas_.library.math.convertColour.obj2rgba({r:.754,g:.859,b:.573,a:1}),i.elements.canvas.testCanvas._.fillRect(s(20),s(20),s(10),s(10)),i.elements.canvas.testCanvas.requestUpdate(),i.elements.needleOverlay.test_needleOverlay.select(0,.25),i.elements.needleOverlay.test_needleOverlay.area(.5,.75),i.elements.grapher_waveWorkspace.test_grapher_waveWorkspace.select(0,.2),i.elements.grapher_waveWorkspace.test_grapher_waveWorkspace.area(.5,.7),i.elements.sequencer.test_sequencer.addSignal(0,0,10,0),i.elements.sequencer.test_sequencer.addSignal(1,1,10,.1),i.elements.sequencer.test_sequencer.addSignal(2,2,10,.2),i.elements.sequencer.test_sequencer.addSignal(3,3,10,.3),i.elements.sequencer.test_sequencer.addSignal(4,4,10,.4),i.elements.sequencer.test_sequencer.addSignal(5,5,10,.5),i.elements.sequencer.test_sequencer.addSignal(6,6,10,.6),i.elements.sequencer.test_sequencer.addSignal(7,7,10,.7),i.elements.sequencer.test_sequencer.addSignal(8,8,10,.8),i.elements.sequencer.test_sequencer.addSignal(9,9,10,.9),i.elements.sequencer.test_sequencer.addSignal(10,10,10,1),i},this.testUnit_1.devUnit=!0,this.testUnit_1.metadata={name:"Test Unit 1",helpURL:"https://curve.metasophiea.com/help/units/test/testUnit_1/"},this.testUnit_2=function(t,n,o,r){const a={name:t,model:"testUnit_2",collection:"test",x:n,y:o,angle:r,space:[{x:0,y:0},{x:100,y:0},{x:100,y:100},{x:0,y:100}],elements:[{collection:"basic",type:"rectangle",name:"testRectangle1",data:{x:0,y:0,width:100,height:100,colour:{r:200/255,g:200/255,b:200/255,a:1}}},{collection:"basic",type:"rectangle",name:"testRectangle2",data:{x:10,y:10,width:80,height:80,colour:{r:200/255,g:100/255,b:200/255,a:1}}}]};return e.unit.builder(a)},this.testUnit_2.devUnit=!0,this.testUnit_2.metadata={name:"Test Unit 2",helpURL:"https://curve.metasophiea.com/help/units/test/testUnit_2/"},this.testUnit_3=function(t,n,o,r){const a={name:t,model:"testUnit_3",collection:"test",x:n,y:o,angle:r,space:[{x:0,y:0},{x:100,y:0},{x:100,y:100},{x:0,y:100}],spaceOutline:!0,elements:[{collection:"basic",type:"rectangle",name:"testRectangle1",data:{x:0,y:0,width:100,height:100,colour:{r:200/255,g:200/255,b:200/255,a:1}}},{collection:"basic",type:"rectangle",name:"testRectangle2",data:{x:10,y:10,width:80,height:80,colour:{r:200/255,g:100/255,b:200/255,a:1}}},{collection:"dynamic",type:"connectionNode",name:"test_connectionNode1",data:{cableVersion:2,x:60,y:100,height:20,width:10,angle:Math.PI/2}}]};return e.unit.builder(a)},this.testUnit_3.devUnit=!0,this.testUnit_3.metadata={name:"Test Unit 3",helpURL:"https://curve.metasophiea.com/help/units/test/testUnit_3/"},this.testUnit_4=function(t,n,o,r){const a=[{x:0,y:0},{x:400,y:200},{x:400,y:400},{x:0,y:400}],i={name:t,model:"testUnit_4",collection:"test",x:n,y:o,angle:r,space:a,spaceOutline:!0,elements:[{collection:"basic",type:"polygon",name:"backing",data:{pointsAsXYArray:a,colour:{r:200/255,g:200/255,b:200/255,a:.1}}}]};return e.unit.builder(i)},this.testUnit_4.devUnit=!0,this.testUnit_4.metadata={name:"Test Unit 4",helpURL:"https://curve.metasophiea.com/help/units/test/testUnit_4/"},this.testUnit_5=function(t,n,o,r){const a={name:t,model:"testUnit_5",collection:"test",x:n,y:o,angle:r,space:[{x:0,y:0},{x:100,y:0},{x:100,y:100},{x:0,y:100}],elements:[{collection:"dynamic",type:"connectionNode",name:"test_connectionNode1",data:{cableVersion:2,x:110,y:60,height:50,width:50,angle:Math.PI/2}},{collection:"basic",type:"rectangle",name:"testRectangle1",data:{x:0,y:0,width:100,height:100,colour:{r:100/255,g:100/255,b:100/255,a:1}}},{collection:"basic",type:"rectangle",name:"testRectangle2",data:{x:10,y:10,width:90,height:90,colour:{r:130/255,g:130/255,b:130/255,a:1}}},{collection:"basic",type:"rectangle",name:"testRectangle3",data:{x:20,y:20,width:80,height:80,colour:{r:160/255,g:160/255,b:160/255,a:1}}},{collection:"basic",type:"rectangle",name:"testRectangle4",data:{x:30,y:30,width:70,height:70,colour:{r:190/255,g:190/255,b:190/255,a:1}}},{collection:"basic",type:"rectangle",name:"testRectangle5",data:{x:0,y:0,width:50,height:50,colour:{r:220/255,g:220/255,b:220/255,a:1}}}]},i=e.unit.builder(a);return i.elements.rectangle.testRectangle5.attachCallback("onmousedown",()=>{console.log("onmousedown")}),i},this.testUnit_5.devUnit=!0,this.testUnit_5.metadata={name:"Test Unit 5",helpURL:"https://curve.metasophiea.com/help/units/test/testUnit_5/"}}},this.builder=function(e){null==e.x&&(e.x=0),null==e.y&&(e.y=0),null==e.angle&&(e.angle=0);const t=_canvas_.interface.part.builder("basic","group",e.name,{x:e.x,y:e.y,angle:e.angle});t.model=e.model,t.collisionActive=null==e.collisionActive||e.collisionActive,t.elements={};for(let n=0;n<e.elements.length;n++){if(null==e.elements[n].collection){console.warn("Interface Unit Builder :: collection name missing");break}if(null==e.elements[n].type){console.warn("Interface Unit Builder :: type name missing");break}if(null==e.elements[n].name){console.warn("Interface Unit Builder :: name name missing");break}if(null!=t.getChildByName(e.elements[n].name)){console.warn('Interface Unit Builder :: error: part with the name "'+e.elements[n].name+'" already exists. Part:',e.elements[n],"will not be added");continue}const o=_canvas_.interface.part.builder(e.elements[n].collection,e.elements[n].type,e.elements[n].name,e.elements[n].data);t.append(o),null==t.elements[e.elements[n].type]&&(t.elements[e.elements[n].type]={}),t.elements[e.elements[n].type][e.elements[n].name]=o}function n(){t.space.points=e.space.map(n=>{const o=_canvas_.library.math.cartesianAngleAdjust(n.x,n.y,t.angle());return o.x+=e.x,o.y+=e.y,o}),t.space.boundingBox=_canvas_.library.math.boundingBoxFromPoints(t.space.points),null!=t.space.shape?t.space.shape.pointsAsXYArray(t.space.originalPoints):(t.space.shape=_canvas_.interface.part.builder("basic","polygon","personalSpace",{pointsAsXYArray:t.space.originalPoints,colour:{r:0,g:1,b:0,a:0}}),t.space.shape.unit=t,t.prepend(t.space.shape))}t.io={},[{key:"_",name:"connectionNode"},{key:"signal",name:"connectionNode_signal"},{key:"voltage",name:"connectionNode_voltage"},{key:"data",name:"connectionNode_data"},{key:"audio",name:"connectionNode_audio"},{key:"audio2",name:"connectionNode_audio_2"}].forEach((function(e){if(!t.elements[e.name])return;const n=Object.keys(t.elements[e.name]);for(let o=0;o<n.length;o++){const r=t.elements[e.name][n[o]];null==t.io[e.key]&&(t.io[e.key]={}),t.io[e.key][r.getName()]=r}})),t.disconnectEverything=function(){for(connectionType in t.io)for(connectionName in t.io[connectionType])t.io[connectionType][connectionName].disconnect()},t.allowIOConnections=function(e){if(null!=e)for(connectionType in t.io)for(connectionName in t.io[connectionType])t.io[connectionType][connectionName].allowConnections(e)},t.allowIODisconnections=function(e){if(null!=e)for(connectionType in t.io)for(connectionName in t.io[connectionType])t.io[connectionType][connectionName].allowDisconnections(e)},t.space={},t.space.originalPoints=e.space,n(),e.spaceOutline&&t.append(_canvas_.interface.part.builder("basic","polygonWithOutline","unit.space.shape_Outline",{pointsAsXYArray:e.space,colour:{r:1,g:1,b:1,a:.25},lineColour:{r:0,g:0,b:0,a:1}}));const o={active:!1,x:10,y:10,angle:Math.PI/8};return t.snappingActive=function(e){if(null==e)return o.active;o.active=e},t.snappingX=function(e){if(null==e)return o.x;o.x=e},t.snappingY=function(e){if(null==e)return o.y;o.y=e},t.snappingAngle=function(e){if(null==e)return o.angle;o.angle=e},t._x=t.x,t._y=t.y,t._angle=t.angle,t.x=function(r){if(null==r)return e.x;e.x=o.active?Math.round(r/o.x)*o.x:r,t._x(e.x),n()},t.y=function(r){if(null==r)return e.y;e.y=o.active?Math.round(r/o.y)*o.y:r,t._y(e.y),n()},t.angle=function(r){if(null==r)return e.angle;e.angle=o.active?Math.round(r/o.angle)*o.angle:r,t._angle(e.angle),n()},t.ioRedraw=function(){if(t.io){const e=Object.keys(t.io);for(let n=0;n<e.length;n++){const o=t.io[e[n]],r=Object.keys(o);for(let e=0;e<r.length;e++)o[r[e]].draw()}}},t.interactable=function(e){if(null!=e)for(partType in t.elements)for(partName in t.elements[partType])t.elements[partType][partName].interactable&&t.elements[partType][partName].interactable(e)},t._oncreate=function(){Object.entries(t.elements).forEach(([e,t])=>{Object.entries(t).forEach(([e,t])=>{t.oncreate&&t.oncreate()})})},t._ondelete=function(){Object.entries(t.elements).forEach(([e,t])=>{Object.entries(t).forEach(([e,t])=>{t.ondelete&&t.ondelete()})})},t},this.validator=function(e,t=!1){if(!t)return null==e.importData&&console.log("\t%cimportData missing","color:#db6060"),void(null==e.exportData&&console.log("\t%cexportData missing","color:#db6060"));console.log("%cinterface.unit.validator","font-size:12px; font-weight:bold;"),console.log("\tmodel: %c"+e.model,"color:#987aa1"),console.log("\tname: %c"+e.name,"color:#987aa1"),console.log("\taddress: %c"+e.getAddress(),"color:#987aa1"),console.log(""),console.log("\tcheck for sub elements"),Object.keys(e.elements).forEach(t=>{console.log("\t\t- "+t),Object.keys(e.elements[t]).forEach(e=>{console.log("\t\t\t- "+e)})}),console.log(""),console.log("\tdevMode: %c"+(e.devMode?"active":"not active"),"color:#987aa1"),console.log(""),console.log("\tdotFrame: %c"+(e.dotFrame?"active":"not active"),"color:#987aa1"),console.log(""),console.log("\tUnit Space"),console.log("\t\tboundingBox:"),console.log("\t\t\ttopLeft",e.space.boundingBox.topLeft),console.log("\t\t\tbottomRight",e.space.boundingBox.bottomRight),console.log("\t\toriginalPoints"),e.space.originalPoints.forEach(e=>console.log("\t\t\t",e)),console.log("\t\tpoints"),e.space.points.forEach(e=>console.log("\t\t\t",e)),console.log(""),console.log("\timport/export"),console.log("\t\timportData %c"+(null==e.importData?"missing":"present"),"color:"+(null==e.importData?"#db6060":"#987aa1")),console.log("\t\texportData %c"+(null==e.exportData?"missing":"present"),"color:"+(null==e.exportData?"#db6060":"#987aa1")),console.log(""),console.log("\tinterface"),null==e.i?console.log("\t\t- missing -"):Object.keys(e.i).forEach(e=>{console.log("\t\t- "+e)}),console.log(""),console.log("\tio"),Object.keys(e.io).forEach(t=>{console.log("\t\t- "+t),Object.keys(e.io[t]).forEach(e=>{console.log("\t\t\t- "+e)})}),console.log("")}}},_canvas_.layers.registerLayer("interface",_canvas_.interface),_canvas_.layers.registerFunctionForLayer("system",(function(){_canvas_.layers.declareLayerAsLoaded("interface")}))}}();
