 ------- ------- ------- ------- ------- ------- ------- ------- ------- -------
2018-05-04
  - chrome's "no autoplay" feature has arrived, and it's causing problems. You
    can go into 'chrome://flags/' and turn it off, but this is only a 
    development solution. There's going to have to be some sort of activation
    method..perhaps a gain dial on the audio sink that's set to zero.
    - added a 'power' button to the audio sink, but this will have to be changed
      to something else eventually
  - wrote synthesizer 3 which is gainJourney based (though it accommodates the
    velocity of a note)
  - wrote up a reverb unit and object, which uses those impulse responses from
    before. There's an output gain dail, a method of selecting between the ~38
    types and a wet/dry dial

  - filter unit has strange feed-back loop I can't seem to find the root of ):/

2018-05-02
  - wrote a pile of notes on synthesizers
  - fixed a little problem in basicSynth_2 where setting the rate dials to max
    would stop the wobble completely
  - start test situation 9 "audio effect units"
  - pushed 'changeAudioParam' to '__globals.utility.audio.changeAudioParam'
  - wrote up simplistic distortion box (complete with in/out gain adjust,
    distortion, resolution and over-sample controls. Seems to work pretty well)
  - added 'onRelease' callback to 'dial_discrete'
  - the 'onChange' callback for 'dial_discrete' is now only called when the
    value actually changes
  
  future ideas
  - reverb unit
  - EQ unit
  - multi-band distortion unit
  - mixing units


2018-05-01
  - added adjustment dials to new gain-wobble synthesizer (for period and depth)
  - updated gravity to ignore files which have names that begin with a dot
  - created synthesizer 2 and it's object (which incorporates gain and detune
    wobble; with dials for depth and rate)

  future ideas
  - need to do layouts of potential new synthesizers


2018-04-30
  - rewrote basicSynth into new style (it's actually longer than the original)
  - pushed the new synthesizer into main place (should probably rename it)
  - renamed synthesizer to synthesizer_basic
  - wrote up prototype versions of a synthesizer with gain and detune wobble
    (much better efficiency) and a prototype synthesizer object with gain wobble

  future ideas
  - we're going to have to make more self-contained synthesizers instead of this
    multi-unit idea, as things are pretty heavy on the processor, and there seems
    to be a lot of time spent on fixing things that aren't that necessary (like
    the warbler sending the correct gain adjust signals fast enough, and the dial
    being able to keep up..slow moves are pretty much fine)
      It goes slightly against my desire to do everything in atomic parts (or at
    least, have the option to) but here we are. Audiotool is contained like that.
    Logic, Acid, etc. all the same. I suppose its a battle between wanting to make
    things as open as possible, which led me to this everything-atomic way, but I 
    think I can provide the same level of control with a more integrated (and
    efficient) units.


2018-04-27
  - new audio sink now has left and right audio channel input and a meter for 
    each
  - fixed a problem with cable redrawing which I hadn't noticed before
  - fixed slow duplication on the periodicWaveMaker, which had to do with
    calling update loops with the slidepanels. Slidepanels now use their own
    code more and don't rely on the individual sliders for panel-wide updates
  - audio meter part; complete with level; slow-moving background level and 
    markings (looks pretty pro too)
  - tried making a 'warbler' which changes the gain of a synthesizer a lot. Seems
    to break manual control though, and if you go fast enough the dial doesn't
    move 
  

2018-04-26
  - finished redoing utility (that was bigger than I expected)
  - rearranged test situation 8 and some of the objects to look nicer
  - periodicWaveMaker now sends its settings on connecting
  - worked on redoing the audio sink to have an audio meter (working on an audio
    meter while I'm there)


2018-04-25
  - redoing utility


2018-04-24
  - redoing utility


2018-04-23
  - redoing utility


2018-04-20
  - updated keyboard interaction, so now objects have to declare what keys they
    want to use, and what modifiers will go with them (none, meta, control, alt
    and shift) The system behind handles everything else, and knows to run the
    global functions if nothing matches. Objects will also be told about 
    modifier keys that accompany a key.
  - wrote up an audio duplicator and added it to test situation 8

  future ideas
  - onmouseleave for objects?


2018-04-19
  - periodicWaveMaker's slides were entering values upside-down, so, fixed that
  - renamed 'compiler.py' to 'gravity' on Dylan's suggestion as it sounds cooler

  future ideas
  - make the audio connection nodes and cables flicker with the audio that they
    are carrying
  - redo keyboard capture, so object don't capture the entire thing when they
    only want one key. Have the objects declare what keys they want.


2018-04-18
  - fixed a problem with the dial_continuous, slide_horizontal and 
    slidePanel_vertical where applying overlapping smoothSets caused confusion
    in the animation. Now, the previous one is just cancelled and the new one
    takes over from where the old one left off
  - updated the synthesizer to incorporate different transition curves in attack
    and release (exponential still doesn't work though)
  - had to reverse sin/cos periodic wave input in the synthesizer..curious
  - began work on an audio scope, it can accept audio data and visualize it,
    there's also a 'hold' key and a dial for adjusting the refresh rate

  future ideas
  - audio duplicator
  - audio combiner


2018-04-17
  - fixed key_rect in test situation 1 test object (remember not to on
    onmouse-anything. It's all onkey-something)
  - added curve maker into utilities (linear, reverse_linear, sin, cos, s,
    exponential)
  - added smoothSet to dial_continuous, slide_vertical, slide_horizontal,
    slidePanel_vertical and slidePanel_horizontal
  - in test situation one, the rect_button now causes some new functions
  - updated the synthesizer to have smooth transition options when setting gain
    and detune (exponential doesn't seem to work though; but user-defined does
    ..curious)
  - updated basicSynth to accept smooth changing values for gain and detune, and
    adjust the dials and synthesizer accordingly along with the stored value for
    any new oscillators that are created during the time of transition

  future ideas
  - change attack and release in basicSynth and the synthesizer to incorporate
    different transition curves


2018-04-16
  - started log
  - added glowbox to test object in test situation one
  - deleted unneeded files
  - fixed up the first test situation a little to use the latest writings
  - looked into adding curve-based movement to the synth and continuous dials
    dials